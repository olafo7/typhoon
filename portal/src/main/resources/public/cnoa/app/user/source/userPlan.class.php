<?php//decode by qq2859470class userPlan extends model{    private $table_list = "user_plan_list";    private $table_task_list = "user_task_list";    private $table_content = "user_plan_content";    private $table_type = "user_plan_type";    private $table_share = "user_plan_share";    private $table_comment = "user_plan_comment";    private $plantype = array( );    private $plantype2 = array( );    public function __construct( )    {        $this->plantype = array(            "1" => "<span style=\"color:green\">".lang( "personPlan" )."</span>",            "2" => "<span style=\"color:blue\">".lang( "deptPlan" )."</span>",            "3" => "<span style=\"color:purple\">".lang( "workReport2" )."</span>",            "4" => "<span style=\"color:orange\">".lang( "workSummary" )."</span>"        );        $this->plantype2 = $this->plantype;    }    public function actionDefault( )    {        $task = getpar( $_GET, "task", getpar( $_POST, "task" ) );        if ( $task == "loadPage" )        {            $this->_loadPage( );        }        else if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "edit" )        {            $this->_edit( );        }        else if ( $task == "addZJ" )        {            $this->_add( );        }        else if ( $task == "addHB" )        {            $this->_add( );        }        else if ( $task == "edit_report" )        {            $this->_edit_report( );        }        else if ( $task == "getJsonList" )        {            $this->_getJsonList( );        }        else if ( $task == "loadFormData" )        {            $this->_loadFormData( );        }        else if ( $task == "loadFormData_sr" )        {            $this->_loadFormData_sr( );        }        else if ( $task == "delete" )        {            $this->_delete( );        }        else if ( $task == "loadPlanInfo" )        {            $this->_loadPlanInfo( );        }        else if ( $task == "getAllUserListsInPermitDeptTree" )        {            $this->_getAllUserListsInPermitDeptTree( );        }        else if ( $task == "getAllUserListsInPermitDeptTreeAll" )        {            $this->_getAllUserListsInPermitDeptTreeAll( );        }        else if ( $task == "loadPlanComment" )        {            $this->_loadPlanComment( );        }        else if ( $task == "postPlanComment" )        {            $this->_postPlanComment( );        }        else if ( $task == "editComment" )        {            $this->_editComment( );        }        else if ( $task == "delComment" )        {            $this->_delComment( );        }        else if ( $task == "getShareReportList" )        {            $this->_getShareReportList( );        }        else if ( $task == "getPlanTaskList" )        {            $this->_getPlanTaskList( );        }        else if ( $task == "setFinish" )        {            $this->_setFinish( );        }        else if ( $task == "getplanData" )        {            $this->_getplanData( );        }        else if ( $task == "getEastData" )        {            $this->_getEastData( );        }    }    private function _loadPage( )    {        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $from = getpar( $_GET, "from", "list" );        if ( $from == "myplan" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/myplanlist.htm";        }        else if ( $from == "deptplan" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/deptplanlist.htm";        }        else if ( $from == "addedit" )        {            $GLOBALS['GLOBALS']['plantype'] = getpar( $_GET, "plantype", 1 );            $GLOBALS['GLOBALS']['action'] = getpar( $_GET, "job", "add" );            $GLOBALS['GLOBALS']['pid'] = getpar( $_GET, "pid", 0 );            $GLOBALS['GLOBALS']['comefrom'] = getpar( $_GET, "comefrom", "" );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/addedit.htm";        }        else if ( $from == "view" )        {            $uid = $CNOA_SESSION->get( "UID" );            $GLOBALS['GLOBALS']['uid'] = $uid;            $GLOBALS['GLOBALS']['comefrom'] = getpar( $_GET, "comefrom", "" );            $GLOBALS['GLOBALS']['pid'] = getpar( $_GET, "pid", 0 );            if ( $GLOBALS['comefrom'] == "report" || $GLOBALS['comefrom'] == "share" )            {                $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/other_view.htm";            }            else            {                $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/owner_view.htm";            }        }        else if ( $from == "share" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/share.htm";        }        else if ( $from == "report" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/report.htm";        }        else if ( $from == "task_add" )        {            $GLOBALS['GLOBALS']['title'] = getpar( $_GET, "title", "" );            $GLOBALS['GLOBALS']['pid'] = getpar( $_GET, "pid", 0 );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/task_add.htm";        }        else if ( $from == "workreport" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/workreport.htm";        }        else if ( $from == "sum" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/plan/sum.htm";        }        $CNOA_CONTROLLER->loadExtraTpl( $tplPath );        exit( );    }    private function _add( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        $data = array( );        $stime = getpar( $_POST, "stime" );        $etime = getpar( $_POST, "etime" );        $data['stime'] = strtotime( $stime );        $data['etime'] = strtotime( $etime );        $ruler = getpar( $_POST, "ruler" );        $data['date'] = strtotime( $ruler );        $data['title'] = strip_tags( getpar( $_POST, "title", "", 1 ) );        $data['uid'] = $uid;        $data['addtime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['updatetime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['plantype'] = getpar( $_POST, "plantype", 1 );        $data['dateMode'] = getpar( $_POST, "dateMode", "" );        $data['dateReport'] = getpar( $_POST, "dateReport", "" );        $data['dateSum'] = getpar( $_POST, "dateSum", "" );        $data['from'] = getpar( $_POST, "from", "" );        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attach = $fs->add( $filesUpload, 3 );        $data['attach'] = json_encode( $attach );        $pid = $CNOA_DB->db_insert( $data, $this->table_list );        $alarmtime = getpar( $_POST, "alarmtime", "" );        if ( !empty( $alarmtime ) )        {            $alarmtime = date( "Y-m-d H:i:s", strtotime( $alarmtime ) );            $data['alarmtime'] = strtotime( $alarmtime );            $noticeT = lang( "noticeForPlan" );            $noticeC = lang( "youHavePlanToDo" )."(".date( "Y-m-d H:i", $data['etime'] ).")";            $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$pid;            $alarmid = notice::add( $uid, $noticeT, $noticeC, $noticeH, $data['alarmtime'], 1 );        }        $contents = array( );        foreach ( $GLOBALS['_POST'] as $key => $value )        {            if ( !ereg( "content_", $key ) && !( $value != "" ) )            {                $c = array( );                $c['content'] = getpar( $_POST, $key, "", 1 );                $c['pid'] = $pid;                $c['uid'] = $uid;                $contents[] = $c;            }        }        unset( $key );        unset( $value );        foreach ( $contents as $value )        {            $CNOA_DB->db_insert( $value, $this->table_content );        }        $share = getpar( $_POST, "cnoa_user_plan_addedit_form_is_share", "off" );        if ( $share == "on" )        {            $shareUids = getpar( $_POST, "shareUids", "" );            $shareUidsArray = explode( ",", $shareUids );            if ( is_array( $shareUidsArray ) )            {                foreach ( $shareUidsArray as $v )                {                    $arr = array( );                    $arr['pid'] = $pid;                    $arr['uid'] = $uid;                    $arr['touid'] = intval( $v );                    $arr['type'] = 1;                    $CNOA_DB->db_insert( $arr, $this->table_share );                    $noticeT = lang( "planSharedToU", $truename );                    $noticeC = string::cut( $data['title'], 100 );                    $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$pid."&comefrom=share";                    $alarmid = notice::add( $arr['touid'], $noticeT, $noticeC, $noticeH, 0, 1 );                }            }        }        $report = getpar( $_POST, "cnoa_user_plan_addedit_form_is_report", "off" );        if ( $report == "on" )        {            $reportUids = getpar( $_POST, "reportUids", "" );            $reportUidsArray = explode( ",", $reportUids );            if ( is_array( $reportUidsArray ) )            {                foreach ( $reportUidsArray as $v )                {                    $arr = array( );                    $arr['pid'] = $pid;                    $arr['uid'] = $uid;                    $arr['touid'] = intval( $v );                    $arr['type'] = 2;                    $CNOA_DB->db_insert( $arr, $this->table_share );                    $noticeT = lang( "planSharedToU", $truename );                    $noticeC = string::cut( $data['title'], 100 );                    $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$pid."&comefrom=report";                    $alarmid = notice::add( $arr['touid'], $noticeT, $noticeC, $noticeH, 0, 1 );                }            }        }        switch ( $data['plantype'] )        {        case "1" :            $extra = lang( "personPlan" );            $fromid = 33;            break;        case "2" :            $extra = lang( "deptPlan" );            $fromid = 34;            break;        case "3" :            $extra = lang( "workReport" );            $fromid = 503;            break;        case "4" :            $extra = lang( "workSummary" );            $fromid = 504;        }        app::loadapp( "main", "systemLogs" )->api_addLogs( "add", $fromid, $data['title'], $extra );        echo "{success:true, pid:".$pid.", msg:'".lang( "successopt" )."'}";        exit( );    }    private function _edit( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        if ( $id == 0 )        {            msg::callback( FALSE, lang( "goWrong" ) );        }        $stime = getpar( $_POST, "stime" );        $etime = getpar( $_POST, "etime" );        $data['stime'] = strtotime( $stime );        $data['etime'] = strtotime( $etime );        $ruler = getpar( $_POST, "ruler" );        $data['date'] = strtotime( $ruler );        $data['title'] = strip_tags( getpar( $_POST, "title", "", 1 ) );        $data['uid'] = $uid;        $data['updatetime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['plantype'] = getpar( $_POST, "plantype", 1 );        $data['dateMode'] = getpar( $_POST, "dateMode", "" );        $data['dateReport'] = getpar( $_POST, "dateReport", "" );        $data['dateSum'] = getpar( $_POST, "dateSum", "" );        $data['from'] = getpar( $_POST, "from", "" );        $alarmtime = getpar( $_POST, "alarmtime", "00-00-00 00:00" );        $alarmtime = date( "Y-m-d H:i:00", strtotime( $alarmtime ) );        $data['alarmtime'] = strtotime( $alarmtime );        if ( !empty( $data['alarmtime'] ) )        {            $noticeT = lang( "noticeForPlan" );            $noticeC = lang( "youHavePlanToDo" )."(".date( "Y-m-d", $data['etime'] ).")";            $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$id;            $alarmid = notice::add( $uid, $noticeT, $noticeC, $noticeH, $data['alarmtime'], 1 );        }        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$id."'" );        if ( $info['status'] != 0 )        {            msg::callback( FALSE, lang( "noEditForFinishPlan" ) );        }        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attch = $fs->edit( $filesUpload, json_decode( $info['attach'], FALSE ), 3 );        $data['attach'] = json_encode( $attch );        $CNOA_DB->db_update( $data, $this->table_list, "WHERE `id`='".$id."' AND `uid`='{$uid}'" );        $contents = array( );        foreach ( $GLOBALS['_POST'] as $key => $value )        {            if ( !ereg( "content_", $key ) && !( $value != "" ) )            {                $c = array( );                $c['content'] = getpar( $_POST, $key, "", 1 );                $c['pid'] = $id;                $c['uid'] = $uid;                $contents[] = $c;            }        }        unset( $key );        unset( $value );        $CNOA_DB->db_delete( $this->table_content, "WHERE `pid`='".$id."' AND `uid`='{$uid}'" );        foreach ( $contents as $value )        {            $CNOA_DB->db_insert( $value, $this->table_content );        }        $CNOA_DB->db_delete( $this->table_share, "WHERE `uid`='".$uid."' AND `pid`='{$id}'" );        $share = getpar( $_POST, "cnoa_user_plan_addedit_form_is_share", "off" );        if ( $share == "on" )        {            $shareUids = getpar( $_POST, "shareUids", "" );            $shareUidsArray = explode( ",", $shareUids );            if ( is_array( $shareUidsArray ) )            {                foreach ( $shareUidsArray as $v )                {                    $arr = array( );                    $arr['pid'] = $id;                    $arr['uid'] = $uid;                    $arr['touid'] = intval( $v );                    $arr['type'] = 1;                    $CNOA_DB->db_insert( $arr, $this->table_share );                    $noticeT = lang( "planSharedToUEdited" );                    $noticeC = string::cut( $data['title'], 100 );                    $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$id."&comefrom=share";                    $alarmid = notice::add( $arr['touid'], $noticeT, $noticeC, $noticeH, 0, 1 );                }            }        }        $report = getpar( $_POST, "cnoa_user_plan_addedit_form_is_report", "off" );        if ( $report == "on" )        {            $reportUids = getpar( $_POST, "reportUids", "" );            $reportUidsArray = explode( ",", $reportUids );            if ( is_array( $reportUidsArray ) )            {                foreach ( $reportUidsArray as $v )                {                    $arr = array( );                    $arr['pid'] = $id;                    $arr['uid'] = $uid;                    $arr['touid'] = intval( $v );                    $arr['type'] = 2;                    $CNOA_DB->db_insert( $arr, $this->table_share );                    $noticeT = lang( "planSharedToUEdited" );                    $noticeC = string::cut( $data['title'], 100 );                    $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$id."&comefrom=report";                    $alarmid = notice::add( $arr['touid'], $noticeT, $noticeC, $noticeH, 0, 1 );                }            }        }        switch ( $data['plantype'] )        {        case "1" :            $extra = lang( "personPlan" );            $fromid = 33;            break;        case "2" :            $extra = lang( "deptPlan" );            $fromid = 34;            break;        case "3" :            $extra = lang( "workReport" );            $fromid = 503;            break;        case "4" :            $extra = lang( "workSummary" );            $fromid = 504;        }        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", $fromid, $data['title'], $extra );        echo "{success:true, pid:".$id.", msg:'".lang( "successopt" )."'}";        exit( );    }    private function _edit_report( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        $reportDb = $CNOA_DB->db_getone( "*", $this->table_share, "WHERE `pid`='".$id."' AND `touid`='{$uid}'" );        if ( !$reportDb )        {            msg::callback( FALSE, lang( "noPermitToOpt" ) );        }        if ( $id == 0 )        {            msg::callback( FALSE, lang( "goWrong" ) );        }        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$id."'" );        if ( $info['status'] != 0 )        {            msg::callback( FALSE, lang( "noEditForFinishPlan" ) );        }        $stime = getpar( $_POST, "stime" );        $etime = getpar( $_POST, "etime" );        $stime = explode( "-", $stime );        $etime = explode( "-", $etime );        if ( is_array( $data['stime'] ) || is_array( $data['etime'] ) )        {            msg::callback( FALSE, lang( "dateFormatInvald" ) );        }        $data['stime'] = mktime( 0, 0, 0, $stime[1], $stime[2], $stime[0] );        $data['etime'] = mktime( 0, 0, 0, $etime[1], $etime[2], $etime[0] );        if ( $data['etime'] < $data['stime'] )        {            msg::callback( FALSE, lang( "endTimeNoBigStartTime" ) );        }        $data['updatetime'] = $GLOBALS['CNOA_TIMESTAMP'];        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attch = $fs->edit( $filesUpload, json_decode( $info['attach'], FALSE ), 3 );        $data['attach'] = json_encode( $attch );        $CNOA_DB->db_update( $data, $this->table_list, "WHERE `id`='".$id."'" );        $contents = array( );        foreach ( $GLOBALS['_POST'] as $key => $value )        {            if ( !ereg( "content_", $key ) && !( $value != "" ) )            {                $c = array( );                $c['content'] = getpar( $_POST, $key, "", 1 );                $c['pid'] = $id;                $c['uid'] = $info['uid'];                $contents[] = $c;            }        }        unset( $key );        unset( $value );        $CNOA_DB->db_delete( $this->table_content, "WHERE `pid`='".$id."'" );        foreach ( $contents as $value )        {            $CNOA_DB->db_insert( $value, $this->table_content );        }        $CNOA_DB->db_delete( $this->table_share, "WHERE `pid`='".$id."' AND `type`=2" );        $report = getpar( $_POST, "cnoa_user_plan_report_edit_form_is_report", "off" );        if ( $report == "on" )        {            $reportUids = getpar( $_POST, "reportUids", "" );            $reportUidsArray = explode( ",", $reportUids );            if ( is_array( $reportUidsArray ) )            {                foreach ( $reportUidsArray as $v )                {                    $arr = array( );                    $arr['pid'] = $id;                    $arr['uid'] = $info['uid'];                    $arr['touid'] = intval( $v );                    $arr['type'] = 2;                    $CNOA_DB->db_insert( $arr, $this->table_share );                    if ( $v != $uid )                    {                        $noticeT = lang( "planReportToUEdited", $truename );                        $noticeC = string::cut( $info['title'], 100 );                        $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$id."&comefrom=report";                        $alarmid = notice::add( $arr['touid'], $noticeT, $noticeC, $noticeH, 0, 1 );                    }                }            }        }        $noticeT = lang( "planEdited", $truename );        $noticeC = string::cut( $info['title'], 100 );        $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$id;        notice::add( $info['uid'], $noticeT, $noticeC, $noticeH, 0, 1 );        echo "{success:true, pid:".$id.", msg:'".lang( "successopt" )."'}";        exit( );    }    private function _getJsonList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $plantype = getpar( $_GET, "plantype", 1 );        $start = getpar( $_POST, "start", 0 );        $rows = 15;        $where = "WHERE `uid`='".$uid."' AND `plantype`={$plantype} ";        $searchKey = array( );        $searchKey['title'] = getpar( $_POST, "title", "" );        $searchKey['stime'] = getpar( $_POST, "stime", "" );        $searchKey['etime'] = getpar( $_POST, "etime", "" );        $searchKey['status'] = getpar( $_POST, "status", "" );        $searchKey['dateMode'] = ( integer )getpar( $_POST, "dateMode" );        if ( !empty( $searchKey['title'] ) )        {            $where .= "AND `title` LIKE '%".$searchKey['title']."%' ";        }        if ( !empty( $searchKey['stime'] ) || empty( $searchKey['etime'] ) )        {            msg::callback( FALSE, lang( "selectEndTime" ) );        }        if ( !empty( $searchKey['etime'] ) || empty( $searchKey['stime'] ) )        {            msg::callback( FALSE, lang( "selectStartTime" ) );        }        if ( !empty( $searchKey['stime'] ) || !empty( $searchKey['etime'] ) )        {            $searchKey['stime'] = strtotime( $searchKey['stime']." 00:00:00" );            $searchKey['etime'] = strtotime( $searchKey['etime']." 23:59:59" );            if ( $searchKey['etime'] < $searchKey['stime'] )            {                msg::callback( FALSE, lang( "endTimeNoBigStartTime" ) );            }            else            {                $where .= "AND `addtime`>'".$searchKey['stime']."' AND `addtime`<'{$searchKey['etime']}' ";            }        }        if ( $searchKey['status'] !== "" )        {            $where .= "AND `status`='".$searchKey['status']."' ";        }        if ( $searchKey['dateMode'] !== 0 )        {            $where .= "AND dateMode = '".$searchKey['dateMode']."' ";        }        $sql = "SELECT  * FROM ".tname( $this->table_list )." ".$where.( "ORDER BY `updatetime` DESC LIMIT ".$start.", {$rows}" );        $arrDateMode = array(            1 => array(                1 => lang( "weekPlan" ),                2 => lang( "monthPlan" ),                3 => lang( "yearPlan" ),                4 => lang( "custom" )            ),            2 => array(                1 => lang( "weekPlan" ),                2 => lang( "monthPlan" ),                3 => lang( "yearPlan" ),                4 => lang( "custom" )            ),            3 => array(                5 => lang( "dayReport" ),                1 => lang( "weekReport" ),                2 => lang( "monthReport" ),                3 => lang( "yearReport2" ),                4 => lang( "custom" )            ),            4 => array(                1 => lang( "weekSummary" ),                2 => lang( "monthSummary" ),                3 => lang( "yearSummary" ),                4 => lang( "custom" )            )        );        $dblist = array( );        $queryList = $CNOA_DB->query( $sql );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $stime = empty( $list['stime'] ) ? "----" : date( "Y年m月d日", $list['stime'] );            $etime = empty( $list['etime'] ) ? "----" : date( "Y年m月d日", $list['etime'] );            $list['plantime'] = $stime." <span class='cnoa_color_gray'>至</span> ".$etime;            $list['updatetime'] = timeformat( $list['updatetime'] );            switch ( $list['status'] )            {            case 0 :                $list['statusText'] = lang( "inProgress" );                break;            case 1 :                $list['statusText'] = lang( "finished" );                break;            case 2 :                $list['statusText'] = lang( "delayeFinish" );            }            $list['dateMode'] = $arrDateMode[intval( $plantype )][$list['dateMode']];            unset( $list['attach'] );            $dblist[] = $list;        }        ( );        $dataStore = new dataStore( );        $dataStore->total = $CNOA_DB->db_getcount( $this->table_list, $where );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _loadFormData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $pid = getpar( $_POST, "pid", 0 );        $comefrom = getpar( $_POST, "comefrom", "" );        $type = getpar( $_POST, "type", 0 );        if ( $comefrom == "report" )        {            $rpDb = $CNOA_DB->db_getone( "*", $this->table_share, "WHERE `touid`='".$uid."' AND `type`=2 AND `pid`='{$pid}'" );            if ( !$rpDb )            {                msg::callback( FALSE, lang( "nodata" ) );            }            else            {                $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$pid."'" );            }        }        else        {            $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `uid`='".$uid."' AND `id`='{$pid}'" );        }        ( );        $dataStore = new dataStore( );        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "nodata" );            echo $dataStore->makeJsonData( );            exit( );        }        $info['stime'] = formatdate( $info['stime'] );        $info['etime'] = formatdate( $info['etime'] );        $alarmtime = $info['alarmtime'];        if ( $alarmtime != 0 )        {            $info['alarmtime'] = formatdate( $alarmtime, "Y-m-d H:i:00" );        }        $info['ruler'] = formatdate( $info['date'], "Y-m-d" );        ( );        $fs = new fs( );        $info['files'] = $fs->getEditList( json_decode( $info['attach'], TRUE ) );        $infoC = $CNOA_DB->db_select( array( "content" ), $this->table_content, "WHERE `pid`='".$pid."' ORDER BY `id` ASC" );        $contentList = array( );        if ( is_array( $infoC ) )        {            foreach ( $infoC as $v )            {                $contentList[] = $v['content'];            }        }        unset( $v );        $info['contentList'] = $contentList;        $shareReportData = $CNOA_DB->db_select( "*", $this->table_share, "WHERE `pid`='".$pid."'" );        $shareReportData = is_array( $shareReportData ) ? $shareReportData : array( );        $arrayShareUids = array( );        $arrayReportUids = array( );        foreach ( $shareReportData as $v )        {            if ( $v['type'] == "2" )            {                $arrayReportUids[] = $v['touid'];            }            else            {                $arrayShareUids[] = $v['touid'];            }        }        unset( $v );        if ( is_array( $arrayShareUids ) && 0 < count( $arrayShareUids ) )        {            $info['cnoa_user_plan_addedit_form_is_share'] = "on";            $shareNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $arrayShareUids );            $info['shareNames'] = array( );            foreach ( $shareNames as $v )            {                $info['shareNames'][] = $v['truename'];            }            unset( $v );            $arrayShareUids = implode( ",", $arrayShareUids );            $info['shareUids'] = $arrayShareUids;        }        if ( is_array( $arrayReportUids ) && 0 < count( $arrayReportUids ) )        {            $info['cnoa_user_plan_addedit_form_is_report'] = "on";            $reportNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $arrayReportUids );            $info['reportNames'] = array( );            foreach ( $reportNames as $v )            {                $info['reportNames'][] = $v['truename'];            }            unset( $v );            $arrayReportUids = implode( ",", $arrayReportUids );            $info['reportUids'] = $arrayReportUids;        }        if ( $type == "addZJ" )        {            $info['plantype'] = "4";            if ( empty( $info['from'] ) )            {                $info['from'] = $info['id'];            }            unset( $info['id'] );            unset( $info['files'] );            unset( $info['contentList'] );        }        if ( $type == "addHB" )        {            $info['plantype'] = "3";            $info['from'] = $info['id'];            unset( $info['files'] );            unset( $info['id'] );            unset( $info['contentList'] );        }        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _loadFormData_sr( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $pid = getpar( $_POST, "pid", 0 );        $rpDb = $CNOA_DB->db_getone( "*", $this->table_share, "WHERE `touid`='".$uid."' AND `type`=2 AND `pid`='{$pid}'" );        if ( !$rpDb )        {            msg::callback( FALSE, lang( "notAllowEdit" ) );        }        ( );        $dataStore = new dataStore( );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$pid."'" );        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "nodata" );            echo $dataStore->makeJsonData( );            exit( );        }        $info['stime'] = string::isempty( $info['stime'] ) ? "" : date( "Y-m-d", $info['stime'] );        $info['etime'] = string::isempty( $info['etime'] ) ? "" : date( "Y-m-d", $info['etime'] );        if ( $info['alarmtime'] != 0 )        {            $info['alarmdate'] = date( "Y-m-d", $info['alarmtime'] );            $info['alarmtime'] = date( "H:i", $info['alarmtime'] );        }        ( );        $fs = new fs( );        $info['files'] = $fs->getEditList( json_decode( $info['attach'], TRUE ) );        $infoC = $CNOA_DB->db_select( array( "content" ), $this->table_content, "WHERE `pid`='".$pid."' ORDER BY `id` ASC" );        $contentList = array( );        if ( is_array( $infoC ) )        {            foreach ( $infoC as $v )            {                $contentList[] = $v['content'];            }        }        unset( $v );        $info['contentList'] = $contentList;        $shareReportData = $CNOA_DB->db_select( "*", $this->table_share, "WHERE `pid`='".$pid."' AND `type`=2" );        $shareReportData = is_array( $shareReportData ) ? $shareReportData : array( );        $arrayReportUids = array( );        foreach ( $shareReportData as $v )        {            $arrayReportUids[] = $v['touid'];        }        unset( $v );        if ( is_array( $arrayReportUids ) && 0 < count( $arrayReportUids ) )        {            $info['cnoa_user_plan_report_edit_form_is_report'] = "on";            $reportNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $arrayReportUids );            $info['reportNames'] = array( );            foreach ( $reportNames as $v )            {                $info['reportNames'][] = $v['truename'];            }            unset( $v );            $arrayReportUids = implode( ",", $arrayReportUids );            $info['reportUids'] = $arrayReportUids;        }        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _delete( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $uid = $CNOA_SESSION->get( "UID" );        if ( !empty( $id ) )        {            $info = $CNOA_DB->db_getone( array( "plantype", "attach", "title" ), $this->table_list, "WHERE `id`='".$id."'" );            switch ( $info['plantype'] )            {            case "1" :                $extra = lang( "personPlan" );                $fromid = 33;                break;            case "2" :                $extra = lang( "deptPlan" );                $fromid = 34;                break;            case "3" :                $extra = lang( "workReport" );                $fromid = 503;                break;            case "4" :                $extra = lang( "workSummary" );                $fromid = 504;            }            $taskList = $CNOA_DB->db_select( array( "tid" ), "user_task_list", "WHERE `from`='plan' AND `fromid`='".$id."'" );            if ( !is_array( $taskList ) )            {                $taskList = array( );            }            foreach ( $taskList as $v )            {                app::loadapp( "user", "taskDefault" )->api_deleteTask( $v['tid'] );            }            ( );            $fs = new fs( );            $fs->deleteFile( json_decode( $info['attach'], FALSE ) );            $title = $info['title'];            $CNOA_DB->db_delete( $this->table_list, "WHERE `uid`='".$uid."' AND `id`='{$id}'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "del", $fromid, $title, $extra );            $CNOA_DB->db_delete( $this->table_content, "WHERE `uid`='".$uid."' AND `pid`='{$id}'" );            $CNOA_DB->db_delete( $this->table_share, "WHERE `uid`='".$uid."' AND `pid`='{$id}'" );            $CNOA_DB->db_delete( $this->table_comment, "WHERE `pid`='".$id."'" );            msg::callback( TRUE, lang( "successopt" ) );        }        else        {            msg::callback( FALSE, lang( "delFail" ) );        }    }    private function _loadPlanInfo( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $cuid = $uid;        $job = getpar( $_POST, "job", "" );        $pid = intval( getpar( $_POST, "pid", 0 ) );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$pid."'" );        $sinfo = $CNOA_DB->db_select( "*", $this->table_share, "WHERE `pid`='".$pid."' AND `touid`='{$uid}'" );        $sinfo = is_array( $sinfo ) ? $sinfo : array( );        $info['viewertype'] = 1;        $sinfoArr = array( );        foreach ( $sinfo as $k => $v )        {            if ( $v['touid'] == $uid && $v['type'] == 2 )            {                $info['viewertype'] = 2;            }            $sinfoArr[] = $v['touid'];        }        unset( $v );        unset( $k );        ( );        $dataStore = new dataStore( );        if ( $info['uid'] != $uid && !in_array( $uid, $sinfoArr ) )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "noPermitToOpt" );            echo $dataStore->makeJsonData( );            exit( );        }        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "nodata" );            echo $dataStore->makeJsonData( );            exit( );        }        $info['stime'] = string::isempty( $info['stime'] ) ? "" : date( lang( "timeFormatYmdHi" ), $info['stime'] );        $info['etime'] = string::isempty( $info['etime'] ) ? "" : date( lang( "timeFormatYmdHi" ), $info['etime'] );        $info['planer'] = app::loadapp( "main", "user" )->api_getUserTruenameByUid( $info['uid'] );        $info['plantypeName'] = $this->plantype[$info['plantype']];        $info['summary'] = nl2br( $info['summary'] );        switch ( $info['status'] )        {        case 0 :            $info['statusText'] = lang( "inProgress" );            break;        case 1 :            $info['statusText'] = lang( "finished" );            break;        case 2 :            $info['statusText'] = lang( "delayeFinish" );        }        ( );        $fs = new fs( );        $info['attach'] = json_decode( $info['attach'], TRUE );        $info['attachCount'] = !$info['attach'] ? 0 : count( $info['attach'] );        $info['attach'] = $fs->getDownLoadItems4normal( $info['attach'], TRUE );        $infoC = $CNOA_DB->db_select( array( "content" ), $this->table_content, "WHERE `pid`='".$pid."' ORDER BY `id` ASC" );        $contentList = array( );        if ( is_array( $infoC ) )        {            foreach ( $infoC as $v )            {                $tmp['c'] = nl2br( $v['content'] );                $contentList[] = $tmp;            }        }        unset( $v );        $info['contentList'] = $contentList;        $data = array( );        $data['readed'] = 1;        $comefrom = getpar( $_POST, "comefrom", "share" );        if ( $comefrom == "share" )        {            $type = 1;        }        else        {            $type = 2;        }        $where = "WHERE `pid`=".$pid." AND `touid`={$cuid} AND `type`={$type}";        $CNOA_DB->db_update( $data, $this->table_share, $where );        $dataStore->owner = $uid == $info['uid'] ? TRUE : FALSE;        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getAllUserListsInPermitDeptTreeAll( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );        echo json_encode( $userList );        exit( );    }    private function _getAllUserListsInPermitDeptTree( )    {        $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );        echo json_encode( $userList );        exit( );    }    private function _loadPlanComment( )    {        global $CNOA_DB;        $pid = getpar( $_POST, "pid", 0 );        $id = getpar( $_POST, "id", 0 );        $from = getpar( $_POST, "from", "comment" );        $type = $from == "report" ? 2 : 1;        if ( $id )        {            $CommentData = $CNOA_DB->db_getone( array( "content" ), $this->table_comment, "WHERE `pid`='".$pid."' AND `type`={$type} AND `id`='{$id}'" );            $CommentData = is_array( $CommentData ) ? $CommentData : array( );            ( );            $dataStore = new dataStore( );            $dataStore->total = 0;            $dataStore->data = br2nl( $CommentData );            echo $dataStore->makeJsonData( );            exit( );        }        $listDb = $CNOA_DB->db_select( "*", $this->table_comment, "WHERE `pid`='".$pid."' AND `type`={$type} ORDER BY `posttime` DESC" );        $listDb = is_array( $listDb ) ? $listDb : array( );        $uids = array( );        $deptids = array( );        foreach ( $listDb as $v )        {            $uids[] = $v['uid'];        }        unset( $v );        $users = app::loadapp( "main", "user" )->api_getUserInfoByUids( $uids );        $userList = array( );        $users = is_array( $users ) ? $users : array( );        foreach ( $users as $v )        {            $userList[$v['uid']]['face'] = $v['faceUrl'];            $userList[$v['uid']]['truename'] = $v['truename'];            $userList[$v['uid']]['deptId'] = $v['deptId'];            $deptids[] = $v['deptId'];        }        unset( $v );        $deptList = app::loadapp( "main", "struct" )->api_getNamesByIds( $deptids );        foreach ( $userList as $key => $v )        {            $userList[$key]['dept'] = $deptList[$userList[$key]['deptId']];        }        unset( $v );        unset( $key );        $data = array( );        foreach ( $listDb as $key => $v )        {            $v['posttime'] = date( lang( "timeFormatYmdHi" ), $v['posttime'] );            $v['user'] = $userList[$v['uid']]['truename'];            $v['dept'] = $userList[$v['uid']]['dept'];            $v['face'] = $userList[$v['uid']]['face'];            $data['list'][] = $v;        }        unset( $v );        unset( $key );        $data['totalCount'] = count( $data['list'] );        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _postPlanComment( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $data['pid'] = intval( getpar( $_POST, "pid", 0 ) );        $data['uid'] = $CNOA_SESSION->get( "UID" );        $data['content'] = getpar( $_POST, "content", "", 1, 0 );        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['type'] = getpar( $_POST, "from", "" ) == "report" ? 2 : 1;        $CNOA_DB->db_insert( $data, $this->table_comment );        if ( $data['type'] == 2 )        {            $planInfo = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`=".$data['pid'] );        }        $alarminfo = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$data['pid']."'" );        $noticeT = lang( "noticeForPlan" );        $noticeC = lang( "newLDPS" )."(".date( "Y-m-d", $data['posttime'] ).")";        $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$data['pid'];        $alarmid = notice::add( $alarminfo['uid'], $noticeT, $noticeC, $noticeH, $data['posttime'], 1 );        $useruid = $CNOA_DB->db_select( "*", $this->table_share, "WHERE `pid`=".$data['pid']." AND `type`=1" );        if ( !is_array( $useruid ) )        {            $useruid = array( );        }        foreach ( $useruid as $v )        {            $noticeT = lang( "noticeForPlan" );            $noticeC = lang( "newLDPS" )."(".date( "Y-m-d", $data['posttime'] ).")";            $noticeH = "index.php?app=user&func=plan&action=default&task=loadPage&from=view&pid=".$data['pid'];            $alarmid = notice::add( $v['touid'], $noticeT, $noticeC, $noticeH, $data['posttime'], 1 );        }        msg::callback( TRUE, lang( "successopt" ) );    }    private function _editComment( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $pid = intval( getpar( $_POST, "pid", 0 ) );        $uid = $CNOA_SESSION->get( "UID" );        $content = getpar( $_POST, "content", "" );        $content = str_replace( array( "\n", "\r" ), "<br>", $content );        $id = getpar( $_POST, "id", "" );        $result = $CNOA_DB->db_update( "content = '".$content."'", $this->table_comment, "WHERE `pid`='".$pid."' AND `id`='{$id}' AND `uid`={$uid}" );    }    private function _delComment( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $pid = intval( getpar( $_POST, "pid", 0 ) );        $uid = $CNOA_SESSION->get( "UID" );        $id = getpar( $_POST, "id", "" );        $result = $CNOA_DB->db_delete( $this->table_comment, "where `id`='".$id."' AND `uid`='{$uid}'" );    }    private function _getShareReportList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $type = getpar( $_POST, "type", 2 );        $start = getpar( $_POST, "start", 0 );        $rows = 15;        $title = getpar( $_POST, "title", "" );        $stime = getpar( $_POST, "stime", "" );        $etime = getpar( $_POST, "etime", "" );        $status = getpar( $_POST, "status", "" );        $plantype = getpar( $_POST, "plantype", "" );        $planer = intval( getpar( $_POST, "planer", 0 ) );        if ( $planer != 0 )        {            $where1 = " AND `uid`='".$planer."' ";        }        else        {            $where1 = "";        }        $where = "WHERE 1 ";        if ( !empty( $title ) )        {            $where .= "AND `title` LIKE '%".$title."%' ";        }        if ( !empty( $stime ) || empty( $stime ) )        {            msg::callback( FALSE, lang( "selectEndTime" ) );        }        if ( !empty( $etime ) || empty( $etime ) )        {            msg::callback( FALSE, lang( "selectStartTime" ) );        }        if ( !empty( $stime ) || !empty( $etime ) )        {            $stime = strtotime( $stime." 00:00:00" );            $etime = strtotime( $etime." 23:59:59" );            if ( $etime < $stime )            {                msg::callback( FALSE, lang( "endTimeNoBigStartTime" ) );            }            else            {                $where .= "AND `addtime`>'".$stime."' AND `addtime`<'{$etime}' ";            }        }        if ( $status !== "" )        {            $where .= "AND `status`='".$status."' ";        }        if ( $plantype !== "" )        {            $where .= "AND `plantype`='".$plantype."' ";        }        $WHERE = "WHERE `touid`='".$uid."' AND `type`='{$type}' {$where1}";        $dateType = getpar( $_POST, "dateType", 0 );        $date = getpar( $_POST, "date", "" );        if ( $date != "" )        {            $stime = $date;            $etime = $date;            $date = strtotime( $date );            switch ( intval( $dateType ) )            {            case 1 :                $stime = date( "Y-m-1 00:00:00", $date );                $etime = date( "Y-m-t 23:59:59", $date );                break;            case 2 :                $itime = strtotime( "Sunday", $date );                $etime = date( "Y-m-d", $itime );                $itime = strtotime( "-6 days", $itime );                $stime = date( "Y-m-d", $itime );                break;            case 3 :                $idate = strtotime( "-1 month", $date );                $stime = date( "Y-m-1 00:00:00", $idate );                $etime = date( "Y-m-t 23:59:59", $idate );                break;            case 4 :                $idate = strtotime( "-1 week", $date );                $itime = strtotime( "Sunday", $idate );                $etime = date( "Y-m-d", $itime );                $itime = strtotime( "-6 days", $itime );                $stime = date( "Y-m-d", $itime );                break;            case 5 :                $itime = strtotime( "-15 day", $date );                $stime = date( "Y-m-d", $itime );                $itime = strtotime( "+15 day", $date );                $etime = date( "Y-m-d", $itime );                $WHERE .= " AND `readed`=0 ";            }            $stime = strtotime( $stime );            $etime = strtotime( $etime );            $where .= " AND `updatetime`>=".$stime." AND `updatetime`<={$etime} ";        }        $readed = getpar( $_POST, "readed" );        if ( $readed != "" )        {            $WHERE .= " AND `readed`=".$readed." ";        }        $shareList = $CNOA_DB->db_select( array( "pid", "readed" ), $this->table_share, $WHERE );        if ( !is_array( $shareList ) )        {            $shareList = array( );        }        $arrPid = array( 0 );        $arrReaded = array( );        foreach ( $shareList as $info )        {            $pid = $info['pid'];            $arrPid[] = $pid;            $arrReaded[$pid] = $info['readed'];        }        $pids = implode( ",", $arrPid );        if ( $pids != "" )        {            $where .= " AND `id` IN (".$pids.") ";        }        $dateMode = getpar( $_POST, "dateMode" );        if ( $dateMode != "" )        {            $where .= " AND `dateMode`=".$dateMode." ";        }        $sql = "SELECT * FROM ".tname( $this->table_list )." ".$where.( "ORDER BY `updatetime` DESC LIMIT ".$start.", {$rows}" );        $shareList = array( );        $queryList = $CNOA_DB->query( $sql );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $id = $list['id'];            $readed = $arrReaded[$id];            $readed = $readed == 0 ? "<span style=\"color:#AA8800;\">".lang( "unread" )."</span>" : "<span style=\"color:#00AA88;\">".lang( "readed" )."</span>";            $list['readed'] = $readed;            $shareList[] = $list;        }        $uids = array( );        foreach ( $shareList as $v )        {            $uids[$v['uid']] = $v['uid'];        }        $planers = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids );        unset( $v );        unset( $uids );        $shareListArray = array( );        foreach ( $shareList as $key => $v )        {            $stime = empty( $v['stime'] ) ? "-----" : date( "Y年m月d日", $v['stime'] );            $etime = empty( $v['etime'] ) ? "-----" : date( "Y年m月d日", $v['etime'] );            $v['plantime'] = $stime." <span style='color: grey'>至</span> ".$etime;            $v['plantype'] = $this->plantype[$v['plantype']];            $v['planer'] = $planers[$v['uid']]['truename'];            switch ( $v['status'] )            {            case 0 :                $v['statusText'] = lang( "inProgress" );                break;            case 1 :                $v['statusText'] = lang( "finished" );                break;            case 2 :                $v['statusText'] = lang( "delayeFinish" );            }            $v['updatetime'] = formatdate( $v['updatetime'], "Y-m-d H:i" );            $shareListArray[] = $v;        }        unset( $v );        ( );        $dataStore = new dataStore( );        $dataStore->total = $CNOA_DB->db_getcount( $this->table_list, $where );        $dataStore->data = $shareListArray;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getPlanTaskList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $pid = getpar( $_GET, "pid", 0 );        $info = $CNOA_DB->db_getone( "*", "user_task_list", "WHERE `from`='plan' AND `fromid`='".$pid."' ORDER BY `posttime` DESC" );        $sql = "SELECT  * FROM ".tname( $this->table_task_list )." ".( "WHERE `from`='plan' AND `fromid`='".$pid."' ORDER BY `posttime` DESC" );        $dblist = array( );        $queryList = $CNOA_DB->query( $sql );        $uids = array( );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $v = array( );            $tipColor = "#FF8080";            $v['tid'] = $list['tid'];            $v['title'] = "<span style='font-weight:bold;'>".$list['title']."<br />";            $v['stime'] = date( "Y-m-d", $list['stime'] );            $v['etime'] = date( "Y-m-d", $list['etime'] );            $v['status'] = $list['status'];            $v['execman'] = $list['execman'];            $uids[$list['execman']] = $list['execman'];            if ( $list['status'] == 1 )            {                $v['statusText'] = lang( "waitingForAccept" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 2;            }            else if ( $list['status'] == 2 )            {                $v['statusText'] = lang( "pendingApproval" );                $v['statusColor'] = "#800040";                $v['progress'] = 2;            }            else if ( $list['status'] == 3 )            {                $v['statusText'] = lang( "approvalNotThrough" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 100;            }            else if ( $list['status'] == 4 )            {                $v['statusText'] = lang( "rejectReceive" );                $v['statusColor'] = "#FF8000";                $v['progress'] = 100;            }            else if ( $list['status'] == 5 )            {                $v['statusText'] = lang( "inProgress" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];                if ( $list['etime'] < $GLOBALS['CNOA_TIMESTAMP'] )                {                    $c1 = floor( ( $GLOBALS['CNOA_TIMESTAMP'] - $list['etime'] ) / 3600 / 24 );                    $c2 = $c1 == 0 ? "" : "<br /><span style='color:red'>".lang( "chaoqiTian", $c1 )."</span>";                    $v['statusText'] .= $c2;                }            }            else if ( $list['status'] == 6 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "submitApproval" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];            }            else if ( $list['status'] == 7 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "taskFinish" )."(".$list['point']." ".lang( "point" ).")";                $v['statusColor'] = "#0000FF";                $v['progress'] = $list['progress'];            }            else if ( $list['status'] == 8 )            {                $v['progress'] = 0;                $v['statusText'] = lang( "taskRecelled" );            }            else if ( $list['status'] == 9 )            {                $v['progress'] = 0;                $v['statusText'] = lang( "taskFailed" );            }            $dblist[] = $v;        }        $userNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids );        foreach ( $dblist as $key => $value )        {            $dblist[$key]['execman'] = $userNames[$value['execman']]['truename'];        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _setFinish( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $pid = getpar( $_GET, "pid", 0 );        $content = getpar( $_POST, "content", "", 1 );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `id`='".$pid."' AND `uid`='{$uid}'" );        if ( !$info )        {            msg::callback( FALSE, lang( "nodata" ) );        }        $data = array( );        if ( $info['status'] == 0 )        {            $etime = date( "Ymd", $info['etime'] );            $ntime = date( "Ymd", $GLOBALS['CNOA_TIMESTAMP'] );            if ( $ntime <= $etime )            {                $data['status'] = 1;            }            else            {                $data['status'] = 2;            }            $data['summary'] = $content;        }        else        {            $data['status'] = 0;            $data['summary'] = "";        }        $CNOA_DB->db_update( $data, $this->table_list, "WHERE `id`='".$pid."' AND `uid`='{$uid}'" );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _getplanData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $data = $CNOA_DB->db_select( array( "id", "title" ), $this->table_list, "WHERE `uid`='".$uid."' AND (`plantype` = '2' OR `plantype` = '1') AND `status`='0'" );        if ( !is_array( $data ) )        {            $data = array( );        }        foreach ( $data as $k => $v )        {            $data[$k]['from'] = $v['title'];        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getEastData( )    {        global $CNOA_DB;        $pid = getpar( $_GET, "pid", 0 );        $list = $CNOA_DB->db_getone( array( "id", "title", "from" ), $this->table_list, "WHERE `id` = '".$pid."' " );        if ( empty( $list['from'] ) )        {            $dblist = $CNOA_DB->db_select( array( "id", "title", "plantype" ), $this->table_list, "WHERE (`from` = '".$pid."' OR `id` = '{$pid}') ORDER BY `plantype` ASC " );            if ( !is_array( $dblist ) )            {                $dblist = array( );            }            foreach ( $dblist as $k => $v )            {                $data[$k]['title'] = $v['title'];                $data[$k]['type'] = $this->plantype2[$v['plantype']];                $data[$k]['id'] = $v['id'];            }        }        else        {            $dblist = $CNOA_DB->db_select( array( "id", "title", "plantype" ), $this->table_list, "WHERE (`from` = '".$list['from']."' OR `id` = '{$list['from']}') ORDER BY `plantype` ASC" );            if ( !is_array( $dblist ) )            {                $dblist = array( );            }            foreach ( $dblist as $k => $v )            {                $data[$k]['title'] = $v['title'];                $data[$k]['type'] = $this->plantype2[$v['plantype']];                $data[$k]['id'] = $v['id'];            }        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    public function api_getDeptPlanListByUid( $uid )    {        global $CNOA_DB;        $uid = intval( $uid );        if ( $uid == 0 )        {            return array( );        }        $list = $CNOA_DB->db_select( array( "id", "title", "addtime" ), $this->table_list, "WHERE `uid`='".$uid."' AND `plantype`=2" );        $list = is_array( $list ) ? $list : array( );        return $list;    }}?>