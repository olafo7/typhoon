<?php//decode by qq2859470class userTaskTotalExportExcel extends model{    public function init( $source, $truename, $stime, $etime )    {        ( );        $this->objPHPExcel = new PHPExcel( );        $this->setProperties( $truename, $stime, $etime );        $this->addData( $source );    }    private function setProperties( $truename, $stime, $etime )    {        $this->objPHPExcel->getProperties( )->setCreator( "协众软件" )->setLastModifiedBy( "协众软件" )->setTitle( "协众软件XLS文档" )->setSubject( "协众软件XLS标题" )->setDescription( "协众软件XLS描述" )->setKeywords( "关键词" )->setCategory( "Category" );        $this->objPHPExcel->setActiveSheetIndex( 0 );        $this->objPHPExcel->getActiveSheet( )->setTitle( lang( "firstPage" ) );        $this->objPHPExcel->getActiveSheet( )->mergeCells( "A1:N1" );        $this->objPHPExcel->getActiveSheet( )->getRowDimension( "1" )->setRowHeight( 30 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "A" )->setWidth( 30 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "B" )->setWidth( 13 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "C" )->setWidth( 13 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "D" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "E" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "F" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "G" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "H" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "I" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "J" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "K" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "L" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "M" )->setWidth( 12 );        $this->objPHPExcel->getActiveSheet( )->getColumnDimension( "N" )->setWidth( 12 );        $styleTitle = array(            "font" => array(                "bold" => TRUE,                "color" => array( "argb" => "000000" )            ),            "borders" => array(                "allborders" => array(                    "style" => PHPExcel_Style_Border::BORDER_THIN                )            )        );        $this->objPHPExcel->getActiveSheet( )->getStyle( "A2:N2" )->applyFromArray( $styleTitle );        $this->objPHPExcel->getActiveSheet( )->getStyle( "A2:N2" )->getFill( )->setFillType( PHPExcel_Style_Fill::FILL_SOLID )->getStartColor( )->setARGB( "DFDFDFDF" );        $this->objPHPExcel->getActiveSheet( )->setCellValue( "A1", lang( "taskStatusList" )." - [".lang( "tjr" ).":".$truename." / ".lang( "timeQuantum" ).":".date( lang( "ymd" ), $stime )."-".date( lang( "ymd" ), $etime )."]" )->setCellValue( "A2", lang( "inDepartment" ) )->setCellValue( "B2", lang( "truename" ) )->setCellValue( "C2", lang( "jdjxg" ) )->setCellValue( "D2", lang( "jdjxd" ) )->setCellValue( "E2", lang( "jdjxa" ) )->setCellValue( "F2", lang( "jdjxp" ) )->setCellValue( "G2", lang( "taskwcs" ) )->setCellValue( "H2", lang( "taskIng" ) )->setCellValue( "I2", lang( "allTask" ) )->setCellValue( "J2", lang( "wcycqs" ) )->setCellValue( "K2", lang( "jxzcqs" ) )->setCellValue( "L2", lang( "recellCount" ) )->setCellValue( "M2", lang( "taskWaitingCount" ) )->setCellValue( "N2", lang( "rejectCount" ) );    }    private function addData( $source )    {        if ( !is_array( $source ) )        {            $source = array( );        }        $i = 3;        foreach ( $source as $sv )        {            $this->objPHPExcel->getActiveSheet( )->setCellValue( "A".$i, $sv['dept'] )->setCellValue( "B".$i, $sv['name'] )->setCellValue( "C".$i, $sv['jixiaofast'] )->setCellValue( "D".$i, $sv['jixiaoslow'] )->setCellValue( "E".$i, $sv['jixiaoall'] )->setCellValue( "F".$i, $sv['jixiaoaver'] )->setCellValue( "G".$i, $sv['done'] )->setCellValue( "H".$i, $sv['doing'] )->setCellValue( "I".$i, $sv['all'] )->setCellValue( "J".$i, $sv['overdone'] )->setCellValue( "K".$i, $sv['overdoing'] )->setCellValue( "L".$i, $sv['cancel'] )->setCellValue( "M".$i, $sv['wait'] )->setCellValue( "N".$i, $sv['refuse'] );            ++$i;        }        $styleBody = array(            "borders" => array(                "allborders" => array(                    "style" => PHPExcel_Style_Border::BORDER_THIN                )            )        );        $this->objPHPExcel->getActiveSheet( )->getStyle( "A2:N".--$i )->applyFromArray( $styleBody );    }    public function save( $filename )    {        $this->objPHPExcel = PHPExcel_IOFactory::createwriter( $this->objPHPExcel, "Excel2007" );        $this->objPHPExcel->save( $filename );    }    public function export( )    {        @ini_set( "zlib.output_compression", "Off" );        header( "Content-Type: application/vnd.ms-excel" );        header( "Content-Disposition: attachment;filename=\"01simple.xlsx\"" );        header( "Cache-Control: max-age=0" );        $this->objPHPExcel = PHPExcel_IOFactory::createwriter( $this->objPHPExcel, "Excel2007" );        $this->objPHPExcel->save( "php://output" );        exit( );    }}?>