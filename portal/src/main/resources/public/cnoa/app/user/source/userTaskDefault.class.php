<?php//decode by qq2859470class userTaskDefault extends userTask{    private $eventType = array( );    public function __construct( )    {        $this->eventType = array(            1 => lang( "new2" ),            2 => lang( "modify" ),            3 => lang( "recell" ),            4 => lang( "approval2" ),            5 => lang( "accept" ),            6 => lang( "reject" ),            7 => lang( "report" ),            8 => lang( "finish" ),            9 => lang( "approval" ),            10 => lang( "supervision" ),            11 => lang( "fail" ),            12 => lang( "delay" )        );    }    public function run( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $task = getpar( $_GET, "task", getpar( $_POST, "task" ) );        if ( $task == "loadPage" )        {            $this->_loadPage( );        }        else if ( $task == "getAllUserListsInPermitDeptTree" )        {            $this->_getAllUserListsInPermitDeptTree( );        }        else if ( $task == "getJsonData" )        {            $this->_getJsonData( );        }        else if ( $task == "getList" )        {            $this->_getList( );        }        else if ( $task == "loadFormData" )        {            $this->_loadFormData( );        }        else if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "edit" )        {            $this->_edit( );        }        else if ( $task == "viewTask" )        {            $this->_viewTask( );        }        else if ( $task == "operateTask" )        {            $this->_operateTask( );        }        else if ( $task == "getEventList" )        {            $this->_getEventList( );        }        else if ( $task == "loadFromListForPlan" )        {            $this->_loadFromListForPlan( );        }        else if ( $task == "loadFromListForMotherTask" )        {            $this->_loadFromListForMotherTask( );        }        else if ( $task == "getDiscussList" )        {            $this->_getDiscussList( );        }        else if ( $task == "getDiscussInfo" )        {            $this->_getDiscussInfo( );        }        else if ( $task == "addDiscuss" )        {            $this->_addDiscuss( );        }        else if ( $task == "addDiscussComment" )        {            $this->_addDiscussComment( );        }        else if ( $task == "getDocumentList" )        {            $this->_getDocumentList( );        }        else if ( $task == "uploadDocument" )        {            $this->_uploadDocument( );        }        else if ( $task == "delDocument" )        {            $this->_delDocument( );        }        else if ( $task == "exportExcel" )        {            $this->_exportExcel( );        }        else if ( $task == "editPrincipal" )        {            $this->_editPrincipal( );        }        else if ( $task == "getReaderList" )        {            $this->_getReaderList( );        }        else if ( $task == "getStatus" )        {            $data = $this->_getStatus( TRUE );            ( );            $ds = new dataStore( );            $ds->data = $data;            echo $ds->makeJsonData( );            exit( );        }        else if ( $task == "getApprovalor" )        {            $this->_getApprovalor( );        }    }    private function _exportExcel( )    {        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        $stime = strtotime( getpar( $_POST, "stime", "0000-00-00" )." 00:00:00" );        $etime = strtotime( getpar( $_POST, "etime", "0000-00-00" )." 23:59:59" );        if ( $etime <= $stime )        {            msg::callback( FALSE, lang( "endTimeNoBigStartTime" ) );        }        $fileName = "CNOA.TASK-".$uid.date( "Ymd", $stime )."-".date( "Ymd", $etime )."-".string::rands( 10, 2 ).".xlsx";        $dataInfo = $this->_getExportExcelData( $stime, $etime );        $excelClass = app::loadapp( "user", "taskExportExcel" );        $excelClass->init( $dataInfo, $truename, $stime, $etime );        $excelClass->save( CNOA_PATH_FILE."/common/temp/".$fileName );        msg::callback( TRUE, makedownloadicon( "{$GLOBALS['URL_FILE']}/common/temp/".$fileName, $fileName, "img" ) );    }    private function _loadPage( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $GLOBALS['GLOBALS']['tid'] = intval( getpar( $_POST, "tid", getpar( $_GET, "tid", 0 ) ) );        $from = getpar( $_GET, "from", "list" );        if ( $from == "list" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/list.htm";        }        else if ( $from == "addedit" )        {            $GLOBALS['GLOBALS']['job'] = getpar( $_GET, "job", "add" );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/addedit.htm";        }        else if ( $from == "view" )        {            $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$GLOBALS['tid']."'" );            if ( !$info )            {                echo lang( "noDataOrSPing" );                exit( );            }            $GLOBALS['GLOBALS']['status'] = $info['status'];            $GLOBALS['GLOBALS']['from'] = $info['from'];            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/view.htm";        }        else if ( $from == "discussview" )        {            $GLOBALS['GLOBALS']['ttitle'] = getpar( $_GET, "ttitle", "" );            $GLOBALS['GLOBALS']['did'] = getpar( $_GET, "did", "" );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/discussview.htm";        }        else if ( $from == "taskchild_add" )        {            $GLOBALS['GLOBALS']['title'] = getpar( $_GET, "title", "" );            $GLOBALS['GLOBALS']['tid'] = getpar( $_GET, "tid", "" );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/task_child_add.htm";        }        else if ( $from == "taskviewWatch_add" )        {            $GLOBALS['GLOBALS']['title'] = getpar( $_GET, "title", "" );            $GLOBALS['GLOBALS']['tid'] = getpar( $_GET, "tid", "" );            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/task/task_viewWatch_add.htm";        }        $CNOA_CONTROLLER->loadExtraTpl( $tplPath );        exit( );    }    private function _getAllUserListsInPermitDeptTree( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );        echo json_encode( $userList );        exit( );    }    private function _getExportExcelData( $stime, $etime, $type = "" )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        if ( $type == "total" )        {            $where = "WHERE 1 ";            $ORDER = "ORDER BY `execman` ASC ,`stime` ASC ";        }        else        {            $where = "WHERE `execman`='".$uid."' ";            $ORDER = "ORDER BY `stime` ASC ";        }        $where .= "AND `stime`>='".$stime."' AND `stime`<='{$etime}' ";        $sql = "SELECT  * FROM ".tname( $this->table_list )." ".$where.$ORDER;        $dblist = array( );        $queryList = $CNOA_DB->query( $sql );        $uids = array( );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $v = array( );            $v['tid'] = $list['tid'];            $v['title'] = $list['title']."\r\n";            $v['status'] = $list['status'];            $v['stime'] = date( "Y-m-d", $list['stime'] );            $v['etime'] = date( "Y-m-d", $list['etime'] );            $v['uid'] = $list['uid'];            $v['execman'] = $list['execman'];            $uids[$list['uid']] = $list['uid'];            $uids[$list['examapp']] = $list['examapp'];            $uids[$list['execman']] = $list['execman'];            $v1 = $v2 = $v3 = array( );            if ( $list['status'] == 1 )            {                $v['statusText'] = lang( "waitingForAccept" );                if ( $list['execman'] == $uid )                {                    $v['title'] = $v['title'].lang( "receiveTaskNotice" );                }            }            else if ( $list['status'] == 2 )            {                $v['statusText'] = lang( "pendingApproval" );                if ( $list['examapp'] == $uid )                {                    $v['title'] = $v['title'].lang( "approvelTaskNotice" );                }            }            else if ( $list['status'] == 3 )            {                $v['statusText'] = lang( "approvalNotThrough" );                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].lang( "taskEditNotice" );                }            }            else if ( $list['status'] == 4 )            {                $v['statusText'] = lang( "rejectReceive" );                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].lang( "taskEditNotice" );                }            }            else if ( $list['status'] == 5 )            {                $v['statusText'] = lang( "inProgress" ).( "(".$list['progress']."%)" );                if ( $list['execman'] == $uid )                {                    $v['title'] = $v['title'].lang( "taskReportNotice" );                    if ( $list['isUrge'] == 1 )                    {                        $v['title'] .= "\r\n".lang( "taskCBNotice" );                    }                }                if ( $list['etime'] < $GLOBALS['CNOA_TIMESTAMP'] )                {                    $c1 = floor( ( $GLOBALS['CNOA_TIMESTAMP'] - $list['etime'] ) / 3600 / 24 );                    $c2 = $c1 == 0 ? "" : "\r\n".lang( "chaoqiTian", $c1 );                    $v['statusText'] .= $c2;                }            }            else if ( $list['status'] == 6 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "submitApproval" ).( "(".$list['progress']."%)" );                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].lang( "taskBZNotice" );                }            }            else if ( $list['status'] == 7 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "taskFinish" )." (".$list['point']." ".lang( "point" ).")";            }            else if ( $list['status'] == 8 )            {                $list['progress'] = 0;                $v['statusText'] = lang( "taskRecelled" );            }            else if ( $list['status'] == 9 )            {                $v['statusText'] = lang( "taskFailed" );            }            $v['title'] = $v['title'];            $v = $this->_intersection( $v, array(                $v1,                $v2,                $v3            ) );            $dblist[] = $v;        }        $userNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids );        foreach ( $dblist as $key => $value )        {            $dblist[$key]['postter'] = $userNames[$value['uid']]['truename'];            $dblist[$key]['execman'] = $userNames[$value['execman']]['truename'];            $dblist[$key]['examapp'] = $userNames[$value['examapp']]['truename'];        }        return $dblist;    }    private function _getList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $searchStatus = getpar( $_POST, "status", "doing" );        $start = getpar( $_POST, "start", 0 );        $rows = 15;        $where = "WHERE 1 ";        switch ( $searchStatus )        {        case "doing" :            $where .= " AND (`status` = '5' OR `isUrge` =1) ";            break;        case "unaccept" :            $where .= " AND `status` = '1' ";        }        $where .= "AND ( ";        $where .= "`uid`='".$uid."' ";        $where .= "OR `examapp`='".$uid."' ";        $where .= "OR `execman`='".$uid."' ";        $where .= "OR `tid` IN (SELECT `tid` FROM ".tname( $this->table_participant ).( " WHERE `uid`='".$uid."') " );        $where .= ") AND `status` NOT IN (2,3,7) ";        $searchKey = array( );        $searchKey['title'] = getpar( $_POST, "title", "" );        if ( !empty( $searchKey['title'] ) )        {            $where .= "AND `title` LIKE '%".$searchKey['title']."%' ";        }        $sql = "SELECT  * FROM ".tname( $this->table_list )." ".$where."ORDER BY `posttime` DESC ";        $dblist = array( );        $queryList = $CNOA_DB->query( $sql );        $uids = array( );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $v = array( );            $tipColor = "#FF8080";            $v['tid'] = $list['tid'];            $v['title'] = "<span style='font-weight:bold;'>".$list['title']."<br />";            $v['status'] = $list['status'];            $v1 = $v2 = $v3 = array( );            if ( $list['status'] == 1 )            {                $v['statusText'] = lang( "waitingForAccept" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 2;            }            else if ( $list['status'] == 2 )            {                $v['statusText'] = lang( "pendingApproval" );                $v['statusColor'] = "#800040";                $v['progress'] = 2;            }            else if ( $list['status'] == 3 )            {                $v['statusText'] = lang( "approvalNotThrough" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 100;            }            else if ( $list['status'] == 4 )            {                $v['statusText'] = lang( "rejectReceive" );                $v['statusColor'] = "#FF8000";                $v['progress'] = 100;            }            else if ( $list['status'] == 5 )            {                $v['statusText'] = lang( "inProgress" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];                if ( $list['etime'] < $GLOBALS['CNOA_TIMESTAMP'] )                {                    $c1 = floor( ( $GLOBALS['CNOA_TIMESTAMP'] - $list['etime'] ) / 3600 / 24 );                    $c2 = $c1 == 0 ? "" : "<br /><span style='color:red'>".lang( "chaoqiTian", $c1 )."</span>";                    $v['statusText'] .= $c2;                }            }            else if ( $list['status'] == 6 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "submitApproval" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];            }            else if ( $list['status'] == 7 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "taskFinish" )." (".$list['point']." ".lang( "point" ).")";                $v['statusColor'] = "#0000FF";                $v['progress'] = $list['progress'];            }            else if ( $list['status'] == 8 )            {                $v['progress'] = 0;                $v['statusText'] = lang( "taskRecelled" );            }            else if ( $list['status'] == 9 )            {                $v['progress'] = 0;                $v['statusText'] = lang( "taskFailed" );            }            $v['title'] = $v['title']."&nbsp;";            $v = $this->_intersection( $v, array(                $v1,                $v2,                $v3            ) );            $dblist[] = $v;        }        $where2 .= "AND ( ";        $where2 .= "`uid`='".$uid."' ";        $where2 .= "OR `examapp`='".$uid."' ";        $where2 .= "OR `execman`='".$uid."' ";        $where2 .= "OR `tid` IN (SELECT `tid` FROM ".tname( $this->table_participant ).( " WHERE `uid`='".$uid."') " );        $where2 .= ") AND `status` NOT IN (2,3,7) ";        ( );        $dataStore = new dataStore( );        $dataStore->unaccept = $CNOA_DB->db_getcount( $this->table_list, "WHERE `status` = 1 ".$where2 );        $dataStore->doing = $CNOA_DB->db_getcount( $this->table_list, "WHERE (`status` = '5' OR `isUrge` =1) ".$where2 );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getJsonData( $execman = 0, $status = "", $type = "" )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $start = getpar( $_POST, "start", 0 );        $rows = 15;        $typeChild = getpar( $_GET, "goto", "taskChild" );        $GLOBALS['GLOBALS']['tid'] = intval( getpar( $_POST, "tid", getpar( $_GET, "tid", 0 ) ) );        $where = "WHERE 1 ";        if ( empty( $type ) )        {            $where .= "AND ( ";            $where .= "`uid`='".$uid."' ";            $where .= "OR `examapp`='".$uid."' ";            $where .= "OR (`execman`='".$uid."' AND `status` NOT IN (2,3)) ";            $where .= "OR (`status` NOT IN (2,3) AND `tid` IN (SELECT `tid` FROM ".tname( $this->table_participant ).( " WHERE `uid`='".$uid."')) " );            $where .= ") ";        }        else        {            if ( !( $status == "all" ) )            {                if ( $status == "done" )                {                    $where .= "AND `status`='7' ";                }                else if ( $status == "overdone" )                {                    $where .= "AND `overdone`='1' AND `status`='7' ";                }                else if ( $status == "overdoing" )                {                    $where .= "AND `status`='5' AND `etime`<'".$GLOBALS['CNOA_TIMESTAMP']."' ";                }                else if ( $status == "doing" )                {                    $where .= "AND `status`='5' ";                }                else if ( $status == "cancel" )                {                    $where .= "AND `status`='8' ";                }                else if ( $status == "wait" )                {                    $where .= "AND `status`='1' ";                }                else if ( $status == "refuse" )                {                    $where .= "AND `status`='4' ";                }            }            $where .= "AND `execman`='".$execman."' ";        }        $searchKey = array( );        $searchKey['title'] = getpar( $_POST, "title", "" );        $searchKey['uid'] = intval( getpar( $_POST, "uid", 0 ) );        $searchKey['execman'] = intval( getpar( $_POST, "execman", 0 ) );        $searchKey['examapp'] = intval( getpar( $_POST, "examapp", 0 ) );        $searchKey['status'] = intval( getpar( $_POST, "status", 0 ) );        if ( !empty( $searchKey['title'] ) )        {            $where .= "AND `title` LIKE '%".$searchKey['title']."%' ";        }        if ( $searchKey['uid'] !== 0 )        {            $where .= "AND `uid`='".$searchKey['uid']."' ";        }        if ( $searchKey['execman'] !== 0 )        {            $where .= "AND `execman`='".$searchKey['execman']."' ";        }        if ( $searchKey['examapp'] !== 0 )        {            $where .= "AND `examapp`='".$searchKey['examapp']."' ";        }        if ( $searchKey['status'] !== 0 )        {            $where .= "AND `status`='".$searchKey['status']."' ";        }        if ( empty( $type ) )        {            if ( $typeChild == "taskChild" )            {                $sql = "SELECT  * FROM ".tname( $this->table_list )." ".( "WHERE `from`='mothertask' AND `fromid` = '".$GLOBALS['tid']."' " );            }            else            {                $sql = "SELECT  * FROM ".tname( $this->table_list )." ".$where."ORDER BY `status` ASC , `posttime` DESC ".( "LIMIT ".$start.", {$rows} " );            }        }        else        {            $sql = "SELECT  * FROM ".tname( $this->table_list )." ".$where."ORDER BY `status` ASC ".( "LIMIT ".$start.", {$rows} " );        }        $dblist = array( );        $queryList = $CNOA_DB->query( $sql );        $uids = array( );        while ( $list = $CNOA_DB->get_array( $queryList ) )        {            $v = array( );            $tipColor = "#FF8080";            $v['tid'] = $list['tid'];            if ( $typeChild == "indexTask" )            {                $childTaskNum = $CNOA_DB->db_getcount( $this->table_list, "WHERE `fromid`='".$list['tid']."' AND `from`='mothertask'" );                $v['title'] = "<span style='font-weight:bold;'>[".( "<span style='color:blue;'>".$childTaskNum."</span>" )."]".$list['title']."<br />";            }            else            {                $v['title'] = "<span style='font-weight:bold;'>".$list['title']."<br />";            }            $v['status'] = $list['status'];            $v['stime'] = date( "Y-m-d", $list['stime'] );            $v['etime'] = date( "Y-m-d", $list['etime'] );            $v['uid'] = $list['uid'];            $v['execman'] = $list['execman'];            $v['eenable'] = FALSE;            $v['denable'] = FALSE;            $v['repealenable'] = FALSE;            $v['urgeenable'] = FALSE;            $v['failenable'] = FALSE;            $uids[$list['uid']] = $list['uid'];            $uids[$list['examapp']] = $list['examapp'];            $uids[$list['execman']] = $list['execman'];            $v1 = $v2 = $v3 = array( );            if ( $list['status'] == 1 )            {                $v['statusText'] = lang( "waitingForAccept" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 2;                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = TRUE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "receiveTaskNotice" ).")</span>";                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 2 )            {                $v['statusText'] = lang( "pendingApproval" );                $v['statusColor'] = "#800040";                $v['progress'] = 2;                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = TRUE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "approvelTaskNotice" ).")</span>";                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 3 )            {                $v['statusText'] = lang( "approvalNotThrough" );                $v['statusColor'] = "#FF0000";                $v['progress'] = 100;                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "taskEditNotice" ).")</span>";                    $v1['eenable'] = TRUE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 4 )            {                $v['statusText'] = lang( "rejectReceive" );                $v['statusColor'] = "#FF8000";                $v['progress'] = 100;                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "taskEditNotice" ).")</span>";                    $v1['eenable'] = TRUE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 5 )            {                $v['statusText'] = lang( "inProgress" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = FALSE;                    $v1['denable'] = FALSE;                    $v1['repealenable'] = TRUE;                    $v1['urgeenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "taskReportNotice" ).")</span>";                    if ( $list['isUrge'] == 1 )                    {                        $v['title'] .= "<br /><span style='color:red'>(".lang( "taskCBNotice" ).")</span>";                    }                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }                if ( $list['etime'] < $GLOBALS['CNOA_TIMESTAMP'] )                {                    $c1 = floor( ( $GLOBALS['CNOA_TIMESTAMP'] - $list['etime'] ) / 3600 / 24 );                    $c2 = $c1 == 0 ? "" : "<br /><span style='color:red'>".lang( "chaoqiTian", $c1 )."</span>";                    $v['statusText'] .= $c2;                }            }            else if ( $list['status'] == 6 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "submitApproval" ).( "(".$list['progress']."%)" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];                if ( $list['uid'] == $uid )                {                    $v['title'] = $v['title'].( "<span style='color:".$tipColor."'>(" ).lang( "taskBZNotice" ).")</span>";                    $v1['eenable'] = FALSE;                    $v1['denable'] = FALSE;                    $v1['repealenable'] = TRUE;                    $v1['failenable'] = TRUE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 7 )            {                $list['progress'] = 100;                $v['statusText'] = lang( "taskFinish" )." (".$list['point']." ".lang( "point" ).")";                $v['statusColor'] = "#0000FF";                $v['progress'] = $list['progress'];                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = FALSE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = FALSE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 8 )            {                $list['progress'] = 0;                $v['statusText'] = lang( "taskRecelled" );                $v['statusColor'] = "#008040";                $v['progress'] = $list['progress'];                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = FALSE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = FALSE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            else if ( $list['status'] == 9 )            {                $list['progress'] = 0;                $v['statusText'] = lang( "taskFailed" );                $v['statusColor'] = "#808080";                $v['progress'] = $list['progress'];                if ( $list['uid'] == $uid )                {                    $v1['eenable'] = FALSE;                    $v1['denable'] = TRUE;                    $v1['repealenable'] = FALSE;                }                if ( $list['examapp'] == $uid )                {                    $v2['eenable'] = FALSE;                    $v2['denable'] = FALSE;                    $v2['repealenable'] = FALSE;                }                if ( $list['execman'] == $uid )                {                    $v3['eenable'] = FALSE;                    $v3['denable'] = FALSE;                    $v3['repealenable'] = FALSE;                }            }            $v['title'] = $v['title']."&nbsp;";            $v = $this->_intersection( $v, array(                $v1,                $v2,                $v3            ) );            $dblist[] = $v;        }        $userNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids, FALSE );        foreach ( $dblist as $key => $value )        {            $user = $userNames[$value['uid']];            $execman = $userNames[$value['execman']];            $examapp = $userNames[$value['examapp']];            if ( !$user['isSystemUser'] )            {                $user['truename'] = "<span style='color:#999;'>".$user['truename']."</span>";            }            if ( !$execman['isSystemUser'] )            {                $execman['truename'] = "<span style='color:#999;'>".$execman['truename']."</span>";            }            if ( !$examapp['isSystemUser'] )            {                $examapp['truename'] = "<span style='color:#999;'>".$examapp['truename']."</span>";            }            $dblist[$key]['postter'] = $user['truename'];            $dblist[$key]['execman'] = $execman['truename'];            $dblist[$key]['examapp'] = $examapp['truename'];        }        ( );        $dataStore = new dataStore( );        $dataStore->total = $CNOA_DB->db_getcount( $this->table_list, $where );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _loadFormData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_POST, "tid", 0 );        $uids = array( );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$tid."' AND `uid`='{$uid}'" );        if ( !$info )        {            msg::callback( FALSE, lang( "nodata" ) );        }        $info['stime'] = string::isempty( $info['stime'] ) ? "" : date( "Y-m-d", $info['stime'] );        $info['etime'] = string::isempty( $info['etime'] ) ? "" : date( "Y-m-d", $info['etime'] );        $info['needexamapp'] = $info['needexamapp'] == 1 ? "on" : "off";        $approval = $CNOA_DB->db_getone( array( "status", "uids" ), $this->table_approval );        if ( $approval['status'] && in_array( $info['examapp'], explode( ",", $approval['uids'] ) ) )        {            $info['examappUid'] = $info['examapp'];        }        $info['execmanUid'] = $info['execman'];        $info['participantUids'] = array( );        $participantInfo = $CNOA_DB->db_select( array( "uid" ), $this->table_participant, "WHERE `tid`='".$tid."'" );        $participantInfo = is_array( $participantInfo ) ? $participantInfo : array( );        foreach ( $participantInfo as $v )        {            if ( $v['uid'] != 0 )            {                $uids[$v['uid']] = $v['uid'];                $info['participantUids'][] = $v['uid'];            }        }        $uids[$info['examapp']] = $info['examapp'];        $uids[$info['execman']] = $info['execman'];        $allNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids );        $info['approveName'] = $allNames[$info['examapp']]['truename'];        $info['examapp'] = $allNames[$info['examappUid']]['truename'];        $info['execman'] = $allNames[$info['execman']]['truename'];        $info['participant'] = array( );        foreach ( $info['participantUids'] as $v )        {            $info['participant'][] = $allNames[$v]['truename'];        }        $info['participantUids'] = implode( ",", $info['participantUids'] );        $info['participant'] = implode( ",", $info['participant'] );        ( );        $fs = new fs( );        $info['files'] = $fs->getEditList( json_decode( $info['attach'], TRUE ) );        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _add( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        ( );        $validator = new validator( );        $data['title'] = $validator->getValue( "title", "post", "", lang( "title" ), "allowBlank:false|maxLeng:200" );        $data['from'] = $validator->getValue( "from", "post", "", lang( "taskComeFrom" ) );        $data['fromid'] = $validator->getValue( "fromid", "post", "", lang( "taskComeFrom" )." ID" );        $data['stime'] = $validator->getValue( "stime", "post", "", lang( "addTime2" ), "allowBlank:false" );        $data['etime'] = $validator->getValue( "etime", "post", "", lang( "endTime" ), "allowBlank:false" );        $data['examapp'] = $validator->getValue( "examappUid", "post", "", lang( "approvalor" ) );        $data['needexamapp'] = $validator->getValue( "needexamapp", "post", "", lang( "isNeedApproval" ) );        $data['execman'] = $validator->getValue( "execmanUid", "post", "", lang( "principal" ), "allowBlank:false" );        $data['worktime1'] = $validator->getValue( "worktime1", "post", "", lang( "workTimePG" ) );        $data['prizepunish'] = $validator->getValue( "prizepunish", "post", "", lang( "jfbz" ) );        $data['leadersay'] = $validator->getValue( "leadersay", "post", "", lang( "leaderInstruction" ) );        $validator->isValid( $data, "callBack" );        $status = $this->_getStatus( TRUE );        $examapp = getpar( $_POST, "approveUid" );        if ( $status['status'] == 0 )        {            $data['examapp'] = $examapp;        }        else        {            $data['needexamapp'] = "on";        }        $data['stime'] = explode( "-", $data['stime'] );        $data['etime'] = explode( "-", $data['etime'] );        $data['stime'] = mktime( 0, 0, 0, $data['stime'][1], $data['stime'][2], $data['stime'][0] );        $data['etime'] = mktime( 0, 0, 0, $data['etime'][1], $data['etime'][2], $data['etime'][0] );        if ( $data['etime'] < $data['stime'] )        {            msg::callback( FALSE, lang( "addTimeNotBigEndTime" ) );        }        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['uid'] = $uid;        $data['needexamapp'] = $data['needexamapp'] == "on" ? 1 : 0;        $data['content'] = getpar( $_POST, "content", "", 1 );        if ( $data['needexamapp'] == 1 )        {            $data['status'] = 2;        }        else        {            $data['status'] = 1;        }        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attch = $fs->add( $filesUpload, 4 );        $data['attach'] = json_encode( $attch );        $tid = $CNOA_DB->db_insert( $data, $this->table_list );        app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 38, $data['title'], lang( "task" ) );        $participantUids = getpar( $_POST, "participantUids", "" );        $participantUidsArray = explode( ",", $participantUids );        if ( is_array( $participantUidsArray ) )        {            foreach ( $participantUidsArray as $v )            {                if ( !empty( $v ) )                {                    $arr = array( );                    $arr['tid'] = $tid;                    $arr['uid'] = intval( $v );                    $CNOA_DB->db_insert( $arr, $this->table_participant );                    if ( !( $arr['uid'] != $data['examapp'] ) && !( $arr['uid'] != $data['execman'] ) && !( $data['needexamapp'] != 1 ) )                    {                        $noticeT = lang( "task2" );                        $noticeC = lang( "taskNeedCY" );                        $noticeH = $this->viewUrl.$tid;                        notice::add( $arr['uid'], $noticeT, $noticeC, $noticeH, 0, 2 );                    }                }            }        }        if ( $data['needexamapp'] == 1 )        {            $noticeU = $data['examapp'];            $noticeT = lang( "task2" );            $noticeC = lang( "taskNeedSP" );            $noticeH = $this->viewUrl.$tid;            $noticeid_c = notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $notice['touid'] = $noticeU;            $notice['from'] = 2;            $notice['fromid'] = $tid;            $notice['href'] = $noticeH;            $notice['title'] = $noticeT;            $notice['content'] = lang( "taskTitle" ).( ": ".$data['title'].", " ).lang( "addTime2From" ).formatdate( $data['stime'], "Y-m-d H:i" ).lang( "to" ).formatdate( $data['etime'], "Y-m-d H:i" );            $notice['funname'] = lang( "task2" );            $notice['move'] = lang( "approval2" );            $todoid_c = notice::add2( $notice );            $CNOA_DB->db_update( array(                "todoid_c" => $todoid_c,                "noticeid_c" => $noticeid_c            ), $this->table_list, "WHERE `tid` = '".$tid."'" );        }        if ( $data['needexamapp'] != 1 )        {            $noticeU = $data['execman'];            $noticeT = lang( "task2" );            $noticeC = lang( "task2" )."[".$data['title']."]".lang( "needUReceive" );            $noticeH = $this->viewUrl.$tid;            $noticeid_fz = notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $notice['touid'] = $noticeU;            $notice['from'] = 2;            $notice['fromid'] = $tid;            $notice['href'] = $noticeH;            $notice['title'] = $noticeC;            $notice['content'] = lang( "taskTitle" ).( ": ".$data['title'].", " ).lang( "addTime2From" ).formatdate( $data['stime'], "Y-m-d H:i" ).lang( "to" ).formatdate( $data['etime'], "Y-m-d H:i" );            $notice['funname'] = lang( "task2" );            $notice['move'] = lang( "fuzi" );            $todoid_fz = notice::add2( $notice );            $CNOA_DB->db_update( array(                "todoid_fz" => $todoid_fz,                "noticeid_fz" => $noticeid_fz            ), $this->table_list, "WHERE `tid` = '".$tid."'" );        }        $this->_eventAdd( $tid, lang( "addATask" ), "", 1, 1 );        msg::callback( TRUE, lang( "successopt" ) );        exit( );    }    private function _edit( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $tid = getpar( $_POST, "tid", 0 );        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        ( );        $validator = new validator( );        $data['title'] = $validator->getValue( "title", "post", "", lang( "title" ), "allowBlank:false|maxLeng:200" );        $data['from'] = $validator->getValue( "from", "post", "", lang( "taskComeFrom" ) );        $data['fromid'] = $validator->getValue( "fromid", "post", "", lang( "taskComeFrom" )." ID" );        $data['stime'] = $validator->getValue( "stime", "post", "", lang( "addTime2" ), "allowBlank:false" );        $data['etime'] = $validator->getValue( "etime", "post", "", lang( "endTime" ), "allowBlank:false" );        $data['examapp'] = $validator->getValue( "examappUid", "post", "", lang( "approvalor" ) );        $data['needexamapp'] = $validator->getValue( "needexamapp", "post", "", lang( "isNeedApproval" ) );        $data['execman'] = $validator->getValue( "execmanUid", "post", "", lang( "principal" ), "allowBlank:false" );        $data['prizepunish'] = $validator->getValue( "prizepunish", "post", "", lang( "jfbz" ) );        $data['leadersay'] = $validator->getValue( "leadersay", "post", "", lang( "leaderInstruction" ) );        $data['worktime1'] = $validator->getValue( "worktime1", "post", "", lang( "workTimePG" ) );        $validator->isValid( $data, "callBack" );        $status = $this->_getStatus( TRUE );        $examapp = getpar( $_POST, "approveUid" );        if ( $status['status'] == 0 )        {            $data['examapp'] = $examapp;        }        else        {            $data['needexamapp'] = "on";        }        $data['stime'] = explode( "-", $data['stime'] );        $data['etime'] = explode( "-", $data['etime'] );        $data['stime'] = mktime( 0, 0, 0, $data['stime'][1], $data['stime'][2], $data['stime'][0] );        $data['etime'] = mktime( 0, 0, 0, $data['etime'][1], $data['etime'][2], $data['etime'][0] );        if ( $data['etime'] < $data['stime'] )        {            msg::callback( FALSE, lang( "addTimeNotBigEndTime" ) );        }        $data['needexamapp'] = $data['needexamapp'] == "on" ? 1 : 0;        $data['content'] = getpar( $_POST, "content", "", 1 );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$tid."'" );        if ( !in_array( $info['status'], array( 1, 2, 3, 4 ) ) )        {            msg::callback( FALSE, lang( "taskCannotBeEdit" ) );        }        if ( $data['needexamapp'] == 1 )        {            $data['status'] = 2;        }        else        {            $data['status'] = 1;        }        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attch = $fs->edit( $filesUpload, json_decode( $info['attach'], FALSE ), 4 );        $data['attach'] = json_encode( $attch );        $CNOA_DB->db_update( $data, $this->table_list, "WHERE `tid`='".$tid."' AND `uid`='{$uid}'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 39, $data['title'], "任务" );        $participantUids = getpar( $_POST, "participantUids", "" );        $participantUidsArray = explode( ",", $participantUids );        $CNOA_DB->db_delete( $this->table_participant, "WHERE `tid`='".$tid."'" );        if ( is_array( $participantUidsArray ) )        {            foreach ( $participantUidsArray as $v )            {                if ( !empty( $v ) )                {                    $arr = array( );                    $arr['tid'] = $tid;                    $arr['uid'] = intval( $v );                    $CNOA_DB->db_insert( $arr, $this->table_participant );                    if ( !( $arr['uid'] != $data['examapp'] ) && !( $arr['uid'] != $data['execman'] ) && !( $data['needexamapp'] != 1 ) )                    {                        $noticeU = $arr['uid'];                        $noticeT = lang( "task2" );                        $noticeC = lang( "taskNeedCY" );                        $noticeH = $this->viewUrl.$tid;                        notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );                    }                }            }        }        if ( $data['needexamapp'] == 1 )        {            notice::deletenoticebyid( $info['noticeid_c'] );            notice::deletenoticebyid2( $info['todoid_c'] );            $noticeU = $data['examapp'];            $noticeT = lang( "task2" );            $noticeC = lang( "taskNeedSP" );            $noticeH = $this->viewUrl.$tid;            $noticeid_c = notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $notice['touid'] = $noticeU;            $notice['from'] = 2;            $notice['fromid'] = $tid;            $notice['href'] = $noticeH;            $notice['title'] = $noticeT;            $notice['content'] = lang( "taskTitle" ).( ": ".$data['title'].", " ).lang( "addTime2From" ).formatdate( $data['stime'], "Y-m-d H:i" ).lang( "to" ).formatdate( $data['etime'], "Y-m-d H:i" );            $notice['funname'] = lang( "task2" );            $notice['move'] = lang( "approval2" );            $todoid_c = notice::add2( $notice );            $CNOA_DB->db_update( array(                "todoid_c" => $todoid_c,                "noticeid_c" => $noticeid_c            ), $this->table_list, "WHERE `tid` = '".$tid."'" );        }        if ( $data['needexamapp'] != 1 )        {            $noticeU = $data['execman'];            $noticeT = lang( "task2" );            $noticeC = lang( "aTaskNeedUReceive" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        $this->_eventAdd( $tid, lang( "editedTask" ), "", 2, 1 );        msg::callback( TRUE, lang( "successopt" ) );        exit( );    }    private function _delete( $mgr = FALSE, $noEcho = FALSE )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $tid = getpar( $_GET, "tid", 0 );        $uid = $CNOA_SESSION->get( "UID" );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$tid."'" );        if ( !$info || !$noEcho )        {            msg::callback( FALSE, lang( "nodata" ) );        }        if ( $info['uid'] != $uid && !$mgr )        {            msg::callback( FALSE, lang( "noPermitToOpt" ) );        }        notice::deletenotice( $info['noticeid_c'], $info['todoid_c'] );        notice::deletenotice( $info['noticeid_c2'], $info['todoid_c2'] );        notice::deletenotice( $info['noticeid_f'], $info['todoid_f'] );        notice::deletenotice( $info['noticeid_fz'], $info['todoid_fz'] );        $CNOA_DB->db_delete( $this->table_list, "WHERE `tid`='".$tid."'" );        $CNOA_DB->db_delete( $this->table_participant, "WHERE `tid`='".$tid."'" );        $CNOA_DB->db_delete( $this->table_event, "WHERE `tid`='".$tid."'" );        $CNOA_DB->db_delete( $this->table_progress, "WHERE `tid`='".$tid."'" );        ( );        $fs = new fs( );        $fs->deleteFile( json_decode( $info['attach'], FALSE ) );        app::loadapp( "main", "systemLogs" )->api_addLogs( "del", 39, $info['title'], "任务" );        if ( !$noEcho )        {            msg::callback( TRUE, lang( "successopt" ) );        }    }    private function _viewTask( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $tid = intval( getpar( $_POST, "tid", getpar( $_GET, "tid", 0 ) ) );        $uid = $CNOA_SESSION->get( "UID" );        if ( !empty( $tid ) )        {            $readtime = time( );            $data['tid'] = $tid;            $data['uid'] = $uid;            $data['date'] = $readtime;            $one = $CNOA_DB->db_getone( "*", $this->table_reader, "WHERE `uid`='".$uid."' and `tid`='{$tid}'" );            if ( empty( $one ) )            {                $reader = $CNOA_DB->db_insert( $data, $this->table_reader );            }        }        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$tid."'" );        ( );        $dataStore = new dataStore( );        $uids = array( );        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "noDataOrSPing" );            echo $dataStore->makeJsonData( );            exit( );        }        $info['posttime'] = date( "Y-m-d H:i", $info['posttime'] );        $info['stime'] = date( "Y-m-d", $info['stime'] );        $info['etime'] = date( "Y-m-d", $info['etime'] );        $info['content'] = nl2br( $info['content'] );        $info['point'] = $info['status'] == 7 ? $info['point'] : "--";        $info['sttime'] = $info['sttime'] == 0 ? "--" : date( "Y-m-d H:i", $info['sttime'] );        $info['entime'] = $info['entime'] == 0 ? "--" : date( "Y-m-d H:i", $info['entime'] );        $info['eenable'] = FALSE;        $info['denable'] = FALSE;        $info['renable'] = FALSE;        $info['aenable'] = FALSE;        $info['benable'] = FALSE;        $info['uenable'] = FALSE;        $info['fenable'] = FALSE;        $info['showTip'] = FALSE;        $info['tip'] = "";        $info['tipJob'] = "";        $uids[$info['uid']] = $info['uid'];        $uids[$info['examapp']] = $info['examapp'];        $uids[$info['execman']] = $info['execman'];        $participantDb = $CNOA_DB->db_select( "*", $this->table_participant, "WHERE `tid`='".$tid."'" );        $participantDb = is_array( $participantDb ) ? $participantDb : array( );        $participantArr = array( );        foreach ( $participantDb as $v )        {            $uids[$v['uid']] = $v['uid'];            $participantArr[] = $v['uid'];        }        unset( $v );        ( );        $fs = new fs( );        $info['attach'] = json_decode( $info['attach'], TRUE );        $info['attachCount'] = !$info['attach'] ? 0 : count( $info['attach'] );        $info['attach'] = $fs->getDownLoadItems4normal( $info['attach'], TRUE );        if ( $info['needexamapp'] == 1 && $info['status'] == 2 && !( $info['uid'] == $uid ) || !( $info['examapp'] == $uid ) )        {            msg::callback( FALSE, lang( "noDataOrSPing" ) );        }        if ( !( $info['uid'] == $uid ) || !( $info['examapp'] == $uid ) || !( $info['execman'] == $uid ) )        {            in_array( $uid, $participantArr );        }        $v1 = $v2 = $v3 = array( );        if ( $info['status'] == 1 )        {            $info['statusText'] = lang( "waitingForAccept" );            $info['statusColor'] = "#FF0000";            $info['progress'] = 0;            if ( $info['uid'] == $uid )            {                $v1['eenable'] = TRUE;                $v1['denable'] = TRUE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $info['showTip'] = TRUE;                $info['tip'] = lang( "receiveTaskNotice" );                $info['tipJob'] = "receive";                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 2 )        {            $info['statusText'] = lang( "pendingApproval" );            $info['statusColor'] = "#800040";            $info['progress'] = 0;            if ( $info['uid'] == $uid )            {                $v1['eenable'] = TRUE;                $v1['denable'] = TRUE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $info['showTip'] = TRUE;                $info['tip'] = lang( "approvelTaskNotice" );                $info['tipJob'] = "examapp";                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 3 )        {            $info['statusText'] = lang( "approvalNotThrough" );            $info['statusColor'] = "#FF0000";            $info['progress'] = 0;            if ( $info['uid'] == $uid )            {                $v1['eenable'] = TRUE;                $v1['denable'] = TRUE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 4 )        {            $info['statusText'] = lang( "rejectReceive" );            $info['statusColor'] = "#FF8000";            $info['progress'] = 0;            if ( $info['uid'] == $uid )            {                $v1['eenable'] = TRUE;                $v1['denable'] = TRUE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 5 )        {            $info['statusText'] = lang( "inProgress" ).( "(".$info['progress']."%)" );            $info['statusColor'] = "#008000";            $info['progress'] = $info['progress'];            if ( $info['uid'] == $uid )            {                $v1['eenable'] = FALSE;                $v1['denable'] = FALSE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['uenable'] = TRUE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = TRUE;                $v3['benable'] = TRUE;                if ( $info['isUrge'] == 1 )                {                    $info['showTip'] = TRUE;                    $info['tip'] = lang( "taskBeCCNotice" ).":<br /> ".nl2br( $info['urgeopinion'] );                    $info['tipJob'] = "viewedurge";                }            }        }        else if ( $info['status'] == 6 )        {            $info['progress'] = 100;            $info['statusText'] = lang( "submitApproval" ).( "(".$info['progress']."%)" );            $info['statusColor'] = "#008000";            $info['progress'] = $info['progress'];            if ( $info['uid'] == $uid )            {                $info['showTip'] = TRUE;                $info['tip'] = "".lang( "taskBZNotice" ).lang( "thisTask" );                $info['tipJob'] = "check";                $v1['eenable'] = FALSE;                $v1['denable'] = FALSE;                $v1['renable'] = TRUE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;                $v1['fenable'] = TRUE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 7 )        {            $info['progress'] = 100;            $info['statusText'] = lang( "taskFinish" );            $info['statusColor'] = "#0000FF";            $info['progress'] = $info['progress'];            $info['point'] = $info['point'].lang( "point" );            if ( $info['uid'] == $uid )            {                $v1['eenable'] = FALSE;                $v1['denable'] = FALSE;                $v1['renable'] = FALSE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 8 )        {            $info['progress'] = 0;            $info['statusText'] = lang( "taskRecelled" );            $info['statusColor'] = "#000000";            $info['progress'] = $info['progress'];            if ( $info['uid'] == $uid )            {                $v1['eenable'] = FALSE;                $v1['denable'] = TRUE;                $v1['renable'] = FALSE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        else if ( $info['status'] == 9 )        {            $info['progress'] = 0;            $info['statusText'] = lang( "taskFailed" );            $info['statusColor'] = "#808080";            $info['progress'] = $info['progress'];            if ( $info['uid'] == $uid )            {                $v1['eenable'] = FALSE;                $v1['denable'] = TRUE;                $v1['renable'] = FALSE;                $v1['aenable'] = FALSE;                $v1['benable'] = FALSE;            }            if ( $info['examapp'] == $uid )            {                $v2['eenable'] = FALSE;                $v2['denable'] = FALSE;                $v2['renable'] = FALSE;                $v2['aenable'] = FALSE;                $v2['benable'] = FALSE;            }            if ( $info['execman'] == $uid )            {                $v3['eenable'] = FALSE;                $v3['denable'] = FALSE;                $v3['renable'] = FALSE;                $v3['aenable'] = FALSE;                $v3['benable'] = FALSE;            }        }        $info = $this->_intersection2( $info, array(            $v1,            $v2,            $v3        ) );        $userNames = app::loadapp( "main", "user" )->api_getUserNamesByUids( $uids );        foreach ( $participantArr as $key => $value )        {            $participantArr[$key] = "<a>".$userNames[$value]['truename']."</a>";        }        unset( $key );        unset( $value );        $info['postter'] = $userNames[$info['uid']]['truename'];        $info['execman'] = $userNames[$info['execman']]['truename'];        $info['examapp'] = $info['examapp'] == 0 ? "--" : $userNames[$info['examapp']]['truename'];        $info['participant'] = implode( "&nbsp;", $participantArr );        $info['participant'] = $info['participant'] == "<a></a>" ? "--" : $info['participant'];        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _operateTask( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $name = $CNOA_SESSION->get( "TRUENAME" );        $tid = getpar( $_POST, "tid", 0 );        $status = getpar( $_POST, "status", 0 );        $job = getpar( $_POST, "job", "" );        $info = $CNOA_DB->db_getone( "*", $this->table_list, "WHERE `tid`='".$tid."'" );        $infoParticipant = $CNOA_DB->db_select( "*", $this->table_participant, "WHERE `tid`='".$tid."'" );        $infoParticipant = is_array( $infoParticipant ) ? $infoParticipant : array( );        ( );        $dataStore = new dataStore( );        $uids = array( );        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "nodata" );            echo $dataStore->makeJsonData( );            exit( );        }        if ( $info['status'] != $status )        {            msg::callback( FALSE, lang( "dataChangedRefresh" ) );        }        if ( $job == "delete" )        {            $this->_delete( );        }        else if ( $job == "repeal" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "status" => 8,                "repealopinion" => $content            ), $this->table_list, "WHERE `tid`='".$tid."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 39, array(                lang( "recell" ) => $content            ), lang( "task2" ) );            $this->_eventAdd( $tid, lang( "recelledTask" ), $content, 3, 1 );            notice::deletenotice( $info['noticeid_c'], $info['todoid_c'] );            notice::deletenotice( $info['noticeid_c2'], $info['todoid_c2'] );            notice::deletenotice( $info['noticeid_f'], $info['todoid_f'] );            notice::deletenotice( $info['noticeid_fz'], $info['todoid_fz'] );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "task2" );                $noticeC = $info['title'].lang( "taskRecelled" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskRecelled" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "urge" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "isUrge" => 1,                "urgeopinion" => $content            ), $this->table_list, "WHERE `tid`='".$tid."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 39, array(                lang( "supervision" ) => $content            ), lang( "task2" ) );            $this->_eventAdd( $tid, lang( "taskCB" ), $content, 10, 1 );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskCBNotice" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "fail" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "status" => 9,                "failopinion" => $content            ), $this->table_list, "WHERE `tid`='".$tid."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 39, array(                lang( "fail" ) => $content            ), lang( "task2" ) );            $this->_eventAdd( $tid, lang( "taskSetToFail" ), $content, 11, 1 );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "task2" );                $noticeC = $info['title'].lang( "taskSetToFail" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskSetToFail" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "delay" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $newtime = strtotime( str_replace( "-", "", getpar( $_POST, "newtime", "00-00-00" ) ) );            if ( $newtime <= $info['etime'] )            {                msg::callback( FALSE, lang( "newEndTimeNoLessOldEndTime" ) );            }            $CNOA_DB->db_update( array(                "etime" => $newtime            ), $this->table_list, "WHERE `tid`='".$tid."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 39, lang( "delayTo" ).":".date( "Y-m-d", $newtime ), lang( "task2" ) );            $this->_eventAdd( $tid, lang( "taskDelayed" ).":", lang( "from" ).":".date( "Y-m-d", $info['etime'] ).", ".lang( "delayTo" ).":".date( "Y-m-d", $newtime ), 12, 1 );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskDelayed" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "report" )        {            $progress = intval( getpar( $_POST, "progress", 0 ) );            $content = getpar( $_POST, "content", "", 1 );            if ( 100 < $progress )            {                msg::callback( FALSE, lang( "taskProgressNotice" ) );            }            if ( $info['execman'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $CNOA_DB->db_update( array(                "progress" => $progress            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "reportTaskProgress" ).( "(".$progress."%)" ), $content, 7, 3 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "reportTaskProgress" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "complete" )        {            if ( $info['execman'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $summary = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "status" => 6,                "progress" => 100,                "summary" => $summary            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "finishTask" )."(".lang( "sqsh" ).")", $summary, 8, 3 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title']."(100%)".lang( "taskFinish" )."(".lang( "sqndsh" ).")";            $noticeH = $this->viewUrl.$tid;            $notice_f = notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $notice['touid'] = $noticeU;            $notice['from'] = 2;            $notice['fromid'] = $tid;            $notice['href'] = $noticeH;            $notice['title'] = $noticeT;            $notice['content'] = $noticeC;            $notice['funname'] = lang( "task2" );            $notice['move'] = lang( "approval2" );            $todoid_f = notice::add2( $notice );            $CNOA_DB->db_update( array(                "noticeid_f" => $notice_f,                "todoid_f" => $todoid_f            ), $this->table_list, "WHERE `tid` = '".$tid."' " );            notice::donen( $info['noticeid_c2'] );            notice::donet( $info['todoid_c2'] );            notice::donen( $info['noticeid_fz'] );            notice::donet( $info['todoid_fz'] );        }        else if ( $job == "accept" )        {            if ( $info['execman'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $CNOA_DB->db_update( array(                "status" => 5,                "sttime" => $GLOBALS['CNOA_TIMESTAMP']            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "receiveTask" ), "", 5, 3 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskReceived" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "task2" );                $noticeC = $info['title'].lang( "taskReceivedNotice" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );        }        else if ( $job == "reject" )        {            if ( $info['execman'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array( "status" => 4 ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "rejectTask" ), $content, 6, 3 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskRejected" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );        }        else if ( $job == "agree" )        {            if ( $info['examapp'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $worktime2 = getpar( $_POST, "worktime2", "" );            $content = getpar( $_POST, "content", "", 1 );            if ( $info['etime'] < $GLOBALS['CNOA_TIMESTAMP'] )            {                $overdone = 1;            }            else            {                $overdone = 0;            }            $CNOA_DB->db_update( array(                "status" => 5,                "examopinion" => $content,                "worktime2" => $worktime2,                "overdone" => $overdone            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "approved" ), $content, 4, 2 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "approved" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $noticeU = $info['execman'];            $noticeT = lang( "taskFZR" );            $noticeC = lang( "taskSPTGNotice", $info['title'] );            $noticeH = $this->viewUrl.$tid;            $notice_c2 = notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            $notice['touid'] = $noticeU;            $notice['from'] = 2;            $notice['fromid'] = $tid;            $notice['href'] = $noticeH;            $notice['title'] = $noticeT;            $notice['content'] = $noticeC;            $notice['funname'] = lang( "task2" );            $notice['move'] = lang( "approval2" );            $todoid_c2 = notice::add2( $notice );            $CNOA_DB->db_update( array(                "noticeid_c2" => $notice_c2,                "todoid_c2" => $todoid_c2            ), $this->table_list, "WHERE `tid` = '".$tid."' " );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "taskCYR" );                $noticeC = lang( "taskSPTGNotice2" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );            notice::donen( $info['noticeid_c'] );            notice::donet( $info['todoid_c'] );        }        else if ( $job == "disagree" )        {            if ( $info['examapp'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "status" => 3,                "examopinion" => $content            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "taskSPNoAccess" ), $content, 4, 2 );            $noticeU = $info['uid'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskSPNoAccess" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            notice::donen( $info['noticeid_c'] );            notice::donet( $info['todoid_c'] );        }        else if ( $job == "finish" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $point = getpar( $_POST, "point", 0 );            $CNOA_DB->db_update( array(                "status" => 7,                "checkopinion" => $content,                "point" => $point,                "entime" => $GLOBALS['CNOA_TIMESTAMP']            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "taskAgreeSPNotice", $point ), $content, 9, 1 );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskSPAccess" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "task2" );                $noticeC = $info['title'].lang( "taskSPAccess" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );            notice::donen( $info['noticeid_f'] );            notice::donet( $info['todoid_f'] );            notice::donen( $info['noticeid_fz'] );            notice::donet( $info['todoid_fz'] );        }        else if ( $job == "nofinish" )        {            if ( $info['uid'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $content = getpar( $_POST, "content", "", 1 );            $CNOA_DB->db_update( array(                "status" => 5,                "checkopinion" => $content            ), $this->table_list, "WHERE `tid`='".$tid."'" );            $this->_eventAdd( $tid, lang( "taskSPNoAccess" ), $content, 9, 1 );            $noticeU = $info['execman'];            $noticeT = lang( "task2" );            $noticeC = $info['title'].lang( "taskSPNoAccess" );            $noticeH = $this->viewUrl.$tid;            notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            foreach ( $infoParticipant as $v )            {                $noticeU = $v['uid'];                $noticeT = lang( "task2" );                $noticeC = $info['title'].lang( "taskSPNoAccess" );                $noticeH = $this->viewUrl.$tid;                notice::add( $noticeU, $noticeT, $noticeC, $noticeH, 0, 2 );            }            unset( $v );            notice::donen( $info['noticeid_f'] );            notice::donet( $info['todoid_f'] );            notice::donen( $info['noticeid_fz'] );            notice::donet( $info['todoid_fz'] );        }        else if ( $job == "viewedurge" )        {            if ( $info['execman'] != $uid )            {                msg::callback( FALSE, lang( "noPermitToOpt" ) );            }            $CNOA_DB->db_update( array( "isUrge" => 0, "urgeopinion" => "" ), $this->table_list, "WHERE `tid`='".$tid."'" );        }        msg::callback( TRUE, lang( "successopt" ) );    }    private function _loadFromListForPlan( )    {        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $list = app::loadapp( "user", "plan" )->api_getDeptPlanListByUid( $uid );        foreach ( $list as $k => $v )        {            $list[$k]['value'] = $v['id'];            $list[$k]['fromid'] = $v['title']." (".date( "Y-m-d", $v['addtime'] ).")";            unset( $v['id']['id'] );            unset( $v['id']['title'] );        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $list;        echo $dataStore->makeJsonData( );        exit( );    }    private function _loadFromListForMotherTask( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $where = "WHERE 1 ";        $where .= "AND ( ";        $where .= "`uid`='".$uid."' ";        $where .= "OR `examapp`='".$uid."' ";        $where .= "OR (`execman`='".$uid."' AND `status` NOT IN (2,3)) ";        $where .= "OR (`status` NOT IN (2,3) AND `tid` IN (SELECT `tid` FROM ".tname( $this->table_participant ).( " WHERE `uid`='".$uid."')) " );        $where .= ") ";        $dblist = $CNOA_DB->db_select( array( "tid", "title" ), $this->table_list, $where." AND `from`!='mothertask' " );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $k => $v )        {            $list[$k]['value'] = $v['tid'];            $list[$k]['fromid'] = $v['title'];            unset( $v['title']['tid'] );            unset( $v['title']['title'] );        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $list;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getEventList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_GET, "tid", 0 );        $dblist = $CNOA_DB->db_select( "*", $this->table_event, "WHERE `tid`='".$tid."' ORDER BY `id` DESC" );        if ( is_array( $dblist ) )        {            foreach ( $dblist as $k => $v )            {                $dblist[$k]['typename'] = $this->eventType[$v['type']];                $dblist[$k]['user'] = $v['truename']." (".timeformat( $v['posttime'] ).")";                $dblist[$k]['posttime'] = date( "Y-m-d H:i", $v['posttime'] );            }        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getDiscussList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_GET, "tid", 0 );        $dblist = $CNOA_DB->db_select( "*", $this->table_discuss_list, "WHERE `tid`='".$tid."' ORDER BY `id` DESC" );        if ( is_array( $dblist ) )        {            foreach ( $dblist as $k => $v )            {                $dblist[$k]['content'] = string::cut( strip_tags( $v['content'] ), 150 );                $dblist[$k]['user'] = app::loadapp( "main", "user" )->api_getUserNameByUid( $v['uid'] );                $dblist[$k]['posttime'] = date( "Y-m-d H:i", $v['posttime'] );            }        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getDiscussInfo( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_GET, "tid", 0 );        $did = getpar( $_GET, "did", 0 );        $data = array( );        $list = array( );        $data['title'] = "只允许布置人/审批人/负责人/参与人列表(未做)";        $info = $CNOA_DB->db_getone( "*", $this->table_discuss_list, "WHERE `tid`='".$tid."' AND `id`='{$did}'" );        $data['title'] = $info['title'];        $list[0]['content'] = nl2br( $info['content'] );        $list[0]['user'] = $info['uid'];        $list[0]['posttime'] = date( lang( "timeFormatYmdHi" ), $info['posttime'] );        $dblist = $CNOA_DB->db_select( "*", $this->table_discuss_content, "WHERE `fid`='".$did."' ORDER BY `id` ASC" );        if ( is_array( $dblist ) )        {            $tmp = array( );            foreach ( $dblist as $k => $v )            {                $tmp['user'] = $v['uid'];                $tmp['content'] = nl2br( $v['content'] );                $tmp['posttime'] = date( lang( "timeFormatYmdHi" ), $v['posttime'] );                $list[] = $tmp;            }        }        unset( $tmp );        $uids = array( );        $deptids = array( );        foreach ( $list as $v )        {            $uids[] = $v['user'];        }        unset( $v );        $users = app::loadapp( "main", "user" )->api_getUserInfoByUids( $uids );        $userList = array( );        $users = is_array( $users ) ? $users : array( );        foreach ( $users as $v )        {            $userList[$v['uid']]['face'] = $v['faceUrl'];            $userList[$v['uid']]['truename'] = $v['truename'];            $userList[$v['uid']]['deptId'] = $v['deptId'];            $deptids[] = $v['deptId'];        }        unset( $v );        $deptList = app::loadapp( "main", "struct" )->api_getNamesByIds( $deptids );        foreach ( $userList as $key => $v )        {            $userList[$key]['dept'] = $deptList[$userList[$key]['deptId']];        }        unset( $v );        unset( $key );        foreach ( $list as $key => $v )        {            $list[$key]['user'] = $userList[$v['user']]['truename'];            $list[$key]['dept'] = $userList[$v['user']]['dept'];            $list[$key]['face'] = $userList[$v['user']]['face'];        }        unset( $v );        unset( $key );        $data['list'] = $list;        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _addDiscuss( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $data['uid'] = $CNOA_SESSION->get( "UID" );        $data['tid'] = getpar( $_GET, "tid", 0 );        $data['content'] = getpar( $_POST, "content", "", 1 );        $data['title'] = getpar( $_POST, "title", "" );        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        $CNOA_DB->db_insert( $data, $this->table_discuss_list );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _addDiscussComment( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $data['uid'] = $CNOA_SESSION->get( "UID" );        $data['fid'] = getpar( $_GET, "did", 0 );        $data['content'] = getpar( $_POST, "content", "", 1 );        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        $data['content'] = str_replace( chr( 226 ).chr( 128 ).chr( 139 ), "", $data['content'] );        if ( string::isempty( $data['content'] ) )        {            msg::callback( FALSE, lang( "contentNoEmpty" ) );        }        $CNOA_DB->db_insert( $data, $this->table_discuss_content );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _getDocumentList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_GET, "tid", 0 );        $info = $CNOA_DB->db_select( "*", $this->table_document, "WHERE `tid`='".$tid."' ORDER BY `posttime` DESC" );        $info = is_array( $info ) ? $info : array( );        foreach ( $info as $k => $v )        {            ( );            $fs = new fs( );            $info[$k]['attach'] = json_decode( $info[$k]['attach'], TRUE );            $info[$k]['attach'] = $fs->getDownLoadItems4normal( $info[$k]['attach'], TRUE );            $info[$k]['user'] = app::loadapp( "main", "user" )->api_getUserNameByUid( $v['uid'] );            $info[$k]['posttime'] = date( "Y-m-d H:i", $v['posttime'] );        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _uploadDocument( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $data['tid'] = getpar( $_GET, "tid", 0 );        $data['uid'] = $CNOA_SESSION->get( "UID" );        $data['content'] = getpar( $_POST, "content", "", 1 );        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        if ( empty( $filesUpload ) )        {            msg::callback( FALSE, lang( "selectAttachToUpload" ) );        }        $attch = $fs->add( $filesUpload, 4 );        $data['attach'] = json_encode( $attch );        $tid = $CNOA_DB->db_insert( $data, $this->table_document );        msg::callback( TRUE, lang( "uploadSucess" ) );        exit( );    }    private function _delDocument( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $tid = getpar( $_GET, "tid", 0 );        $id = getpar( $_GET, "id", 0 );        $info = $CNOA_DB->db_getone( "*", $this->table_document, "WHERE `uid`='".$uid."' AND `id`='{$id}' AND `tid`='{$tid}'" );        if ( !$info )        {            msg::callback( FALSE, lang( "errorNoDoc" ) );        }        ( );        $fs = new fs( );        $fs->deleteFile( json_decode( $info['attach'], TRUE ) );        $CNOA_DB->db_delete( $this->table_document, "WHERE `id`='".$id."' AND `tid`='{$tid}'" );        msg::callback( TRUE, lang( "successopt" ) );        exit( );    }    private function _eventAdd( $tid, $title, $content, $type, $type2 )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $truename = $CNOA_SESSION->get( "TRUENAME" );        $data['tid'] = $tid;        $data['type'] = $type;        $data['type2'] = $type2;        $data['title'] = $title;        $data['content'] = $content;        $data['uid'] = $uid;        $data['truename'] = $truename;        $data['posttime'] = $GLOBALS['CNOA_TIMESTAMP'];        return $CNOA_DB->db_insert( $data, $this->table_event );    }    private function _editPrincipal( )    {        global $CNOA_DB;        $uid = ( integer )getpar( $_POST, "uid" );        $tid = ( integer )getpar( $_POST, "tid" );        if ( $uid === 0 )        {            msg::callback( FALSE, lang( "pleaseChooseFZR" ) );        }        if ( $tid === 0 )        {            msg::callback( FALSE, lang( "dataErrorRefresh" ) );        }        $sql = "UPDATE ".tname( $this->table_list ).( " SET `execman` = ".$uid." WHERE `tid`={$tid}" );        $result = $CNOA_DB->query( $sql );        if ( $result )        {            $title = $CNOA_DB->db_getfield( "title", $this->table_list, "WHERE `tid`=".$tid );            $noticeC = lang( "task" )." ".$title." ".lang( "fzrReviseToYouClickView" );            $noticeH = "index.php?app=user&func=task&action=default&task=loadPage&from=view&tid=".$tid;            notice::add( $uid, "", $noticeC, $noticeH, 0, 2 );            $truename = app::loadapp( "main", "user" )->api_getUserTruenameByUid( $uid );            $this->_eventAdd( $tid, $title, "负责人修改为".$truename, 2, 1 );            app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 39, "负责人修改为".$truename, lang( "task2" ) );            msg::callback( TRUE, lang( "successopt" ) );        }    }    private function _intersection( $vSource, $vArray )    {        $f['eenable'] = FALSE;        $f['denable'] = FALSE;        $f['repealenable'] = FALSE;        $f['urgeenable'] = FALSE;        $f['failenable'] = FALSE;        $vArray = is_array( $vArray ) ? $vArray : array( );        foreach ( $vArray as $k => $v )        {            if ( $v['eenable'] )            {                $f['eenable'] = TRUE;            }            if ( $v['denable'] )            {                $f['denable'] = TRUE;            }            if ( $v['repealenable'] )            {                $f['repealenable'] = TRUE;            }            if ( $v['urgeenable'] )            {                $f['urgeenable'] = TRUE;            }            if ( $v['failenable'] )            {                $f['failenable'] = TRUE;            }        }        $vSource['eenable'] = $f['eenable'];        $vSource['denable'] = $f['denable'];        $vSource['repealenable'] = $f['repealenable'];        $vSource['urgeenable'] = $f['urgeenable'];        $vSource['failenable'] = $f['failenable'];        return $vSource;    }    private function _intersection2( $vSource, $vArray )    {        $vArray = is_array( $vArray ) ? $vArray : array( );        foreach ( $vArray as $k => $v )        {            if ( $v['eenable'] )            {                $f['eenable'] = TRUE;            }            if ( $v['denable'] )            {                $f['denable'] = TRUE;            }            if ( $v['renable'] )            {                $f['renable'] = TRUE;            }            if ( $v['aenable'] )            {                $f['aenable'] = TRUE;            }            if ( $v['benable'] )            {                $f['benable'] = TRUE;            }            if ( $v['uenable'] )            {                $f['uenable'] = TRUE;            }            if ( $v['fenable'] )            {                $f['fenable'] = TRUE;            }        }        $vSource['eenable'] = $f['eenable'];        $vSource['denable'] = $f['denable'];        $vSource['renable'] = $f['renable'];        $vSource['aenable'] = $f['aenable'];        $vSource['benable'] = $f['benable'];        $vSource['uenable'] = $f['uenable'];        $vSource['fenable'] = $f['fenable'];        return $vSource;    }    public function api_deleteTask( $tid )    {        $GLOBALS['_GET']['tid'] = $GLOBALS['_POST']['tid'] = $tid;        $this->_delete( TRUE, TRUE );    }    public function api_viewTask( )    {        $this->_viewTask( );    }    public function api_getExportExcelData( $stime, $etime, $type )    {        return $this->_getExportExcelData( $stime, $etime, $type );    }    public function api_getTaskDetailList( $execman, $status )    {        return $this->_getJsonData( $execman, $status, "taskDetail" );    }    private function _getReaderList( )    {        global $CNOA_DB;        $tid = intval( getpar( $_POST, "tid", getpar( $_GET, "tid", 0 ) ) );        $sql = "SELECT l.execman, l.examapp, p.uid FROM ".tname( $this->table_list )." AS l LEFT JOIN ".tname( $this->table_participant )." AS p ON l.tid=p.tid ".( "WHERE l.tid=".$tid );        $result = $CNOA_DB->query( $sql );        $temp = $data = array( );        while ( $row = $CNOA_DB->get_array( $result ) )        {            if ( !in_array( $row['examapp'], $temp ) || !empty( $row['examapp'] ) )            {                $temp[] = $row['examapp'];            }            if ( !in_array( $row['execman'], $temp ) )            {                $temp[] = $row['execman'];            }            $temp[] = $row['uid'];        }        $temp = array_unique( $temp );        $result = $CNOA_DB->db_select( "*", $this->table_reader, "WHERE tid=".$tid );        if ( !is_array( $result ) )        {            $result = array( );        }        $items = $uids = array( );        foreach ( $result as $key => $value )        {            $uids[] = $value['uid'];            $items[$value['uid']] = $value['date'];        }        foreach ( $temp as $uid )        {            $item = array( );            if ( in_array( $uid, $uids ) )            {                $item['name'] = "<font color='#FF0000'>".app::loadapp( "main", "user" )->api_getUserTruenameByUid( $uid )."</font>";                $item['date'] = date( "Y-m-d H:i", $items[$uid] );            }            else            {                $item['name'] = "<font color='#C0C0C0'>".app::loadapp( "main", "user" )->api_getUserTruenameByUid( $uid )."</font>";                $item['date'] = "";            }            $data[] = $item;        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getApprovalor( )    {        global $CNOA_DB;        $info = $CNOA_DB->db_getone( array( "status", "uids" ), $this->table_approval );        $signInIDs = explode( ",", $info['uids'] );        $temp = $data = array( );        foreach ( $signInIDs as $v )        {            $temp['examappUid'] = $v;            $temp['examapp'] = $this->_takeUserName( $v );            $data[] = $temp;        }        ( );        $ds = new dataStore( );        $ds->data = $data;        echo $ds->makeJsonData( );        exit( );    }}?>