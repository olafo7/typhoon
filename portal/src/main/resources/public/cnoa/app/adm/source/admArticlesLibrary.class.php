<?php//decode by qq2859470class admArticlesLibrary extends model{    private $tableType = "adm_articles_type";    private $table = "adm_articles_library";    private $rows = "15";    private $tableRegister = "adm_articles_register";    private $tablePermit = "adm_articles_library_permit";    private $tableProduct = "adm_articles_product";    private $tableRecord = "adm_articles_record";    private $data = array( );    public function run( )    {        global $CNOA_CONTROLLER;        $task = getpar( $_GET, "task", "" );        if ( $task == "loadPage" )        {            $from = getpar( $_GET, "from", "" );            if ( $from == "setting" )            {                $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/articles/library_setting.htm";                $CNOA_CONTROLLER->loadExtraTpl( $tplPath );                exit( );            }        }        else if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "edit" )        {            $this->_edit( );        }        else if ( $task == "list" )        {            $this->_list( );        }        else if ( $task == "delete" )        {            $this->_delete( );        }        else if ( $task == "getAllUserListsInPermitDeptTree" )        {            $this->_getAllUserListsInPermitDeptTree( );        }        else if ( $task == "getStructTree" )        {            $this->_getStructTree( );        }        else if ( $task == "getArticlesLibraryList" )        {            $this->_getArticlesLibraryList( );        }        else if ( $task == "typeList" )        {            $this->_typeList( );        }        else if ( $task == "typeAdd" )        {            $this->_typeAdd( );        }        else if ( $task == "editTypeData" )        {            $this->_editTypeData( );        }        else if ( $task == "deleteType" )        {            $this->_deleteType( );        }    }    private function _add( )    {        global $CNOA_DB;        $data['name'] = getpar( $_POST, "name", "" );        $data['deptID'] = getpar( $_POST, "deptID", "" );        $data['adminIDs'] = getpar( $_POST, "adminIDs", "" );        $adminIDs = explode( ",", $data['adminIDs'] );        $data['transportIDs'] = getpar( $_POST, "transportIDs", "" );        $data['transportIDs'] = explode( ",", $data['transportIDs'] );        $data['adminIDs'] = json_encode( $adminIDs );        $data['transportIDs'] = json_encode( $data['transportIDs'] );        $id = $CNOA_DB->db_insert( $data, $this->table );        foreach ( $adminIDs as $v )        {            $CNOA_DB->db_insert( array(                "libraryID" => $id,                "uid" => $v            ), $this->tablePermit );        }        app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 117, $data['name'], lang( "supLi" ) );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _edit( )    {        global $CNOA_DB;        $id = getpar( $_GET, "id" );        $data['name'] = getpar( $_POST, "name", "" );        $data['deptID'] = getpar( $_POST, "deptID", "" );        $data['adminIDs'] = getpar( $_POST, "adminIDs", "" );        $adminIDs = explode( ",", $data['adminIDs'] );        $data['transportIDs'] = getpar( $_POST, "transportIDs", "" );        $data['transportIDs'] = explode( ",", $data['transportIDs'] );        $data['adminIDs'] = json_encode( $adminIDs );        $data['transportIDs'] = json_encode( $data['transportIDs'] );        $CNOA_DB->db_update( $data, $this->table, "WHERE `id`=".$id );        $CNOA_DB->db_delete( $this->tablePermit, "WHERE `libraryID`='".$id."'" );        foreach ( $adminIDs as $v )        {            $CNOA_DB->db_insert( array(                "libraryID" => $id,                "uid" => $v            ), $this->tablePermit );        }        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 117, $data['name'], lang( "supLi" ) );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _list( )    {        global $CNOA_DB;        $WHERE = "WHERE `id`>0 ";        $edit = getpar( $_GET, "edit" );        if ( $edit == "edit" )        {            $id = getpar( $_POST, "id" );            $dblist = $CNOA_DB->db_select( "*", $this->table, "WHERE `id`='".$id."'" );            $list = $this->_formateList( $dblist );            $this->data = $list;        }        else        {            $start = getpar( $_POST, "start", 0 );            $dblist = $CNOA_DB->db_select( "*", $this->table, $WHERE.( "ORDER BY `id` DESC LIMIT ".$start.", {$this->rows}" ) );            $this->_formateList( $dblist );        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $this->data;        $dataStore->total = $CNOA_DB->db_getcount( $this->table );        echo $dataStore->makeJsonData( );        exit( );    }    private function _formateList( $dblist )    {        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $v )        {            $list['id'] = $v['id'];            $list['typeName'] = app::loadapp( "adm", "articlesInfo" )->api_getAllArticlesTypeList( $v['id'] );            $list['name'] = $v['name'];            $list['deptID'] = $v['deptID'];            $list['deptName'] = $this->_getDepartName( $v['deptID'] );            $list['adminIDs'] = $this->_formateID( $v['adminIDs'] );            $list['adminNames'] = $this->_formateName( $v['adminIDs'] );            $list['transportIDs'] = $this->_formateID( $v['transportIDs'] );            $list['transportNames'] = $this->_formateName( $v['transportIDs'] );            $this->data[] = $list;        }        return $list;    }    private function _formateName( $value )    {        $value = json_decode( $value );        if ( !is_array( $value ) )        {            $value = array( );        }        foreach ( $value as $v )        {            $name .= $this->_takeUserName( $v ).",";        }        return $name;    }    private function _formateID( $value )    {        $value = json_decode( $value );        if ( !is_array( $value ) )        {            $value = array( );        }        foreach ( $value as $v )        {            $name .= $v.",";        }        $name = substr( $name, 0, strlen( $name ) - 1 );        return $name;    }    private function _delete( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $cnt = $CNOA_DB->db_getcount( $this->tableType, "WHERE `libraryID`='".$id."'" );        if ( 0 < $cnt )        {            msg::callback( FALSE, lang( "hasClassifieNotDel" ) );        }        $listTypeID = app::loadapp( "adm", "articlesInfo" )->api_libraryToTypeID( $id );        $library = $CNOA_DB->db_getone( array( "name" ), $this->table, "WHERE `id`='".$id."'" );        $CNOA_DB->db_insert( array(            "notes" => "删除用品库",            "property" => 7,            "libraryName" => $library['name'],            "uid" => $CNOA_SESSION->get( "UID" ),            "time" => $GLOBALS['CNOA_TIMESTAMP']        ), $this->tableRecord );        $CNOA_DB->db_delete( $this->table, "WHERE `id`='".$id."'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "del", 117, $library['name'], lang( "supLi" ) );        $CNOA_DB->db_delete( $this->tableRegister, "WHERE `libraryID`='".$id."'" );        $CNOA_DB->db_delete( "adm_articles_library_permit", "WHERE `libraryID`='".$id."'" );        $CNOA_DB->db_delete( "adm_articles_register_permit", "WHERE `libraryID`='".$id."'" );        msg::callback( TRUE, lang( "successopt" ) );    }    private function __getProductIDbyLibraryID( $libraryID )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_select( array( "id" ), $this->tableProduct, "WHERE `libraryID`='".$libraryID."'" );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        foreach ( $dblist as $v )        {            $CNOA_DB->db_delete( $this->tableRecord, "WHERE `productID`='".$v['id']."'" );        }    }    private function _getAllUserListsInPermitDeptTree( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );        echo json_encode( $userList );        exit( );    }    private function _getStructTree( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        echo app::loadapp( "main", "struct" )->api_getStructTree( );        exit( );    }    private function _getDepartName( $deptID )    {        $depList = app::loadapp( "main", "struct" )->api_getArrayList( );        $deptName = $depList[$deptID];        return $deptName;    }    private function _takeUserName( $id )    {        $data = app::loadapp( "main", "user" )->api_getUserDataByUid( $id );        return $data['truename'];    }    private function _getArticlesLibraryList( )    {        global $CNOA_SESSION;        global $CNOA_DB;        $dblist = $CNOA_DB->db_select( "*", $this->table );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $data = array( );        foreach ( $dblist as $v )        {            $temp['id'] = $v['id'];            $temp['name'] = $v['name'];            $data[] = $temp;        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _typeList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $start = getpar( $_POST, "start", 0 );        $WHERE = "WHERE 1 ";        $dblist = $CNOA_DB->db_select( "*", $this->tableType, $WHERE.( "ORDER BY `id` DESC LIMIT ".$start.", {$this->rows}" ) );        $library = app::loadapp( "adm", "articlesLibrary" )->api_getAllArticlesLibraryName( );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        foreach ( $dblist as $k => $v )        {            $dblist[$k]['id'] = $v['id'];            $dblist[$k]['name'] = $v['name'];            $dblist[$k]['libraryID'] = $v['libraryID'];            $dblist[$k]['libraryName'] = $library[$v['libraryID']]['name'];        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $dblist;        $dataStore->total = $CNOA_DB->db_getcount( $this->tableType, $WHERE );        echo $dataStore->makeJsonData( );        exit( );    }    private function _typeAdd( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $data['libraryID'] = getpar( $_POST, "libraryID" );        $data['name'] = getpar( $_POST, "name" );        $data['uid'] = $CNOA_SESSION->get( "UID" );        $CNOA_DB->db_insert( $data, $this->tableType );        app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 116, $data['name'], lang( "suppCategory" ) );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _editTypeData( )    {        global $CNOA_DB;        $id = getpar( $_POST, "id", "" );        $libraryID = getpar( $_POST, "libraryName", 0 );        $data['libraryID'] = $libraryID;        $data['name'] = getpar( $_POST, "name", "" );        $CNOA_DB->db_update( array(            "libraryID" => $libraryID        ), "adm_articles_register_permit", "WHERE `typeID`='".$id."'" );        $CNOA_DB->db_update( $data, $this->tableType, "WHERE `id`='".$id."'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 116, $data['name'], lang( "suppCategory" ) );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _deleteType( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $pList = $CNOA_DB->db_getcount( $this->tableProduct, "WHERE `typeID`='".$id."'" );        if ( 0 < $pList )        {            msg::callback( FALSE, lang( "hasArticleNotDel" ) );        }        $type = $CNOA_DB->db_getone( array( "libraryID", "name" ), $this->tableType, "WHERE `id`='".$id."'" );        $library = $CNOA_DB->db_getone( array( "name" ), $this->table, "WHERE `id`='".$type['libraryID']."'" );        $CNOA_DB->db_insert( array(            "property" => 7,            "notes" => "删除类别",            "typeName" => $type['name'],            "libraryName" => $library['name'],            "uid" => $CNOA_SESSION->get( "UID" ),            "time" => $GLOBALS['CNOA_TIMESTAMP']        ), $this->tableRecord );        $CNOA_DB->db_delete( $this->table, "WHERE `typeID`='".$id."'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "del", 116, $type['name'], lang( "suppCategory" ) );        $CNOA_DB->db_delete( $this->tableType, "WHERE `id`='".$id."'" );        $CNOA_DB->db_delete( $this->tableRegister, "WHERE `typeID`='".$id."'" );        $CNOA_DB->db_delete( "adm_articles_register_permit", "WHERE `typeID`='".$id."'" );        msg::callback( TRUE, lang( "successopt" ) );    }    public function api_getArticlesLibraryList( )    {        $this->_getArticlesLibraryList( );    }    public function api_getAllArticlesLibraryName( )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_select( "*", $this->table );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $k => $v )        {            $list[$v['id']]['id'] = $v['id'];            $list[$v['id']]['name'] = $v['name'];            $list[$v['id']]['type'] = $v['type'];            $list[$v['id']]['deptID'] = $v['deptID'];            $list[$v['id']]['deptName'] = $this->_getDepartName( $v['deptID'] );            $list[$v['id']]['adminIDs'] = json_decode( $v['adminIDs'] );            $list[$v['id']]['adminNames'] = $this->_formateName( $v['adminIDs'] );            $list[$v['id']]['transportIDs'] = json_decode( $v['transportIDs'] );            $list[$v['id']]['transportNames'] = $this->_formateName( $v['adminIDs'] );        }        return $list;    }    public function api_getLibraryData( $id )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_getone( "*", $this->table, "WHERE `id`='".$id."'" );        return $dblist;    }    public function api_getLibraryName( $id )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_getone( array( "name" ), $this->table, "WHERE `id`='".$id."'" );        return $dblist['name'];    }    public function api_getAllArticlesLibraryByOneList( $id )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_getone( "*", $this->table, "WHERE `id`='".$id."'" );        return $dblist;    }    public function api_getAllArticlesLibraryList( )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_select( "*", $this->table );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $k => $v )        {            $list[$v['id']]['id'] = $v['id'];            $list[$v['id']]['name'] = $v['name'];        }        return $list;    }    public function api_getAllArticlesLibraryListByPermit( $id )    {        global $CNOA_DB;        $permitList = $CNOA_DB->db_select( array( "libraryID" ), "adm_articles_register_permit", "WHERE `uid`='".$id."' OR `uid`=0" );        $dblist = $CNOA_DB->db_select( "*", $this->table );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        foreach ( $dblist as $v )        {            $list[$v['id']] = $v;        }        if ( !is_array( $permitList ) )        {            $permitList = array( );        }        $data = array( );        foreach ( $permitList as $v )        {            $temp['id'] = $v['libraryID'];            $temp['name'] = $list[$v['libraryID']]['name'];            $data[] = $temp;        }        return $data;    }}?>