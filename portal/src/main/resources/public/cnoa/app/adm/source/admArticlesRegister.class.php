<?php//decode by qq2859470class admArticlesRegister extends model{    private $tableType = "adm_articles_type";    private $tableLibrary = "adm_articles_library";    private $tableProduct = "adm_articles_product";    private $table = "adm_articles_register";    private $tableLibraryPermit = "adm_articles_library_permit";    private $rows = 15;    public function run( )    {        global $CNOA_CONTROLLER;        $task = getpar( $_GET, "task" );        if ( $task == "loadPage" )        {            $tplPath = $CNOA_CONTROLLER->appPath."/tpl/default/articles/info_articles_register.htm";            $CNOA_CONTROLLER->loadExtraTpl( $tplPath );            exit( );        }        if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "list" )        {            $this->_list( );        }        else if ( $task == "getArticlesLibraryList" )        {            $this->_getArticlesLibraryList( );        }        else if ( $task == "getArticlesTransportlList" )        {            $id = getpar( $_POST, "id" );            $this->_getArticlesTransportlList( $id );        }        else if ( $task == "getArticlesTypelList" )        {            $this->_getArticlesTypelList( );        }        else if ( $task == "getArticlesProductlList" )        {            $this->_getArticlesProductlList( );        }        else if ( $task == "check" )        {            $this->_check( );        }        else if ( $task == "getAllUserListsInPermitDeptTree" )        {            $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";            $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );            echo json_encode( $userList );            exit( );        }    }    private function _list( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = $CNOA_SESSION->get( "UID" );        $start = getpar( $_POST, "start", 0 );        $storeType = getpar( $_POST, "storeType", "waiting" );        $sortType = getpar( $_POST, "sortType", "all" );        $name = getpar( $_POST, "name", "" );        $signstime = getpar( $_POST, "signstime", 0 );        $signetime = getpar( $_POST, "signetime", 0 );        $signpeople = getpar( $_POST, "signpeople", "" );        $transstime = getpar( $_POST, "transstime", 0 );        $transetime = getpar( $_POST, "transetime", 0 );        $transpeople = getpar( $_POST, "transpeople", "" );        $WHERE = "WHERE 1 ";        if ( $storeType == "waiting" )        {            $WHERE .= "AND `status`=0 ";        }        else if ( $storeType == "pass" )        {            $WHERE .= "AND `status`=2 ";        }        else if ( $storeType == "unpass" )        {            $WHERE .= "AND `status`=1 ";        }        else if ( $storeType == "drop" )        {            $WHERE .= "AND `status`=3 ";        }        else if ( $storeType == "transing" )        {            $WHERE .= "AND `transportStatus`=1 ";        }        if ( $sortType == "borrow" )        {            $WHERE .= "AND `type`=2 ";        }        else if ( $sortType == "lead" )        {            $WHERE .= "AND `type`=3 ";        }        else if ( $sortType == "return" )        {            $WHERE .= "AND `type`=1 ";        }        if ( !empty( $name ) )        {            $temp = $CNOA_DB->db_select( array( "id" ), $this->tableProduct, "WHERE `name` LIKE '%".$name."%'" );            if ( !is_array( $temp ) )            {                $temp = array( );            }            if ( empty( $temp ) )            {                $WHERE .= "AND `productID`=0 ";            }            else            {                foreach ( $temp as $k => $v )                {                    $idArr[] = $v['id'];                }                $ids = substr( $ids, 0, -1 );                $WHERE .= "AND `productID` IN (".implode( ",", $idArr ).") ";            }        }        if ( !empty( $signstime ) )        {            $signstime = strtotime( $signstime." 00:00:00" );            $WHERE .= "AND `signInTime`>'".$signstime."' ";        }        if ( !empty( $signetime ) )        {            $signetime = strtotime( $signetime." 23:59:59" );            $WHERE .= "AND  `signInTime`<'".$signetime."' ";        }        if ( !empty( $signpeople ) )        {            $WHERE .= "AND `signInID`='".$signpeople."' ";        }        if ( !empty( $transstime ) )        {            $transstime = strtotime( $transstime." 00:00:00" );            $WHERE .= "AND `transportTime`>'".$transstime."' ";        }        if ( !empty( $transetime ) )        {            $transetime = strtotime( $transetime." 23:59:59" );            $WHERE .= "AND `transportTime`<'".$transetime."' ";        }        if ( !empty( $transpeople ) )        {            $WHERE .= "AND `transportID`='".$transpeople."' ";        }        $dblist = $CNOA_DB->db_select( "*", $this->table, $WHERE.( "AND `checkID`='".$id."' ORDER BY `id` DESC LIMIT {$start}, {$this->rows}" ) );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $data = array( );        foreach ( $dblist as $v )        {            $list = $this->__getProduct( $v['productID'] );            $list['productID'] = $list['id'];            $list['id'] = $v['id'];            $list['type'] = $v['type'];            $list['typeTake'] = $this->__formatType( $v['type'] );            $list['quantity'] = $v['quantity'];            $list['status'] = $v['status'];            $list['statusName'] = $this->__formatStatus( $v['status'] );            $list['checkName'] = $this->__takeUserName( $v['checkID'] );            $list['typeName'] = app::loadapp( "adm", "articlesInfo" )->api_getArticlesTypeName( $v['typeID'] );            $list['libraryID'] = $v['libraryID'];            $temp = app::loadapp( "adm", "articlesLibrary" )->api_getAllArticlesLibraryByOneList( $v['libraryID'] );            $list['libraryName'] = $temp['name'];            $list['quantity'] = $v['quantity'];            $list['notes'] = $v['notes'];            $list['signInName'] = $this->__takeUserName( $v['signInID'] );            $list['transportName'] = $this->__takeUserName( $v['transportID'] );            $list['signInTime'] = formatdate( $v['signInTime'], "Y-m-d H:i" );            $list['transportTime'] = formatdate( $v['transportTime'], "Y-m-d H:i" );            $list['finishTime'] = formatdate( $v['finishTime'], "Y-m-d H:i" );            $list['explain'] = $v['explain'];            $data[] = $list;        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        $dataStore->total = $CNOA_DB->db_getcount( $this->table, $WHERE.( "AND `checkID`='".$id."'" ) );        echo $dataStore->makeJsonData( );        exit( );    }    private function _getArticlesLibraryList( )    {        global $CNOA_SESSION;        $list = app::loadapp( "adm", "articlesLibrary" )->api_getAllArticlesLibraryListByPermit( $CNOA_SESSION->get( "UID" ) );        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $list;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getArticlesTypelList( )    {        global $CNOA_DB;        $id = getpar( $_POST, "id" );        if ( $id == 0 )        {            ( );            $dataStore = new dataStore( );            $dataStore->total = 0;            $dataStore->data = array( );            echo $dataStore->makeJsonData( );            exit( );        }        $dblist = $CNOA_DB->db_select( "*", $this->tableType, "WHERE `libraryID`=".$id );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $k => $v )        {            $list[$k]['typeID'] = $v['id'];            $list[$k]['name'] = $v['name'];            $list[$k]['libraryID'] = $v['libraryID'];        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $list;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getArticlesProductlList( )    {        global $CNOA_DB;        $id = getpar( $_POST, "id" );        if ( $id == 0 )        {            ( );            $dataStore = new dataStore( );            $dataStore->total = 0;            $dataStore->data = array( );            echo $dataStore->makeJsonData( );            exit( );        }        $dblist = $CNOA_DB->db_select( "*", $this->tableProduct, "WHERE `typeID`=".$id );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $list = array( );        foreach ( $dblist as $k => $v )        {            $list[$k]['productID'] = $v['id'];            $list[$k]['name'] = $v['name']." / ".lang( "stock" ).":".$v['stock'].$v['unit'];        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $list;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getArticlesTransportlList( $id )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_getone( array( "transportIDs" ), $this->tableLibrary, "WHERE `id`='".$id."'" );        $dblist = json_decode( $dblist['transportIDs'] );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        foreach ( $dblist as $v )        {            $list['transportID'] = $v;            $list['transportName'] = $this->__takeUserName( $v );            $data[] = $list;        }        ( );        $dataStore = new dataStore( );        $dataStore->total = 0;        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function _check( )    {        global $CNOA_DB;        $status = getpar( $_POST, "status", "" );        $id = getpar( $_POST, "id" );        $dblist = $CNOA_DB->db_getone( array( "noticeid_c", "todoid_c", "signInID", "transportID", "type", "libraryID", "typeID", "quantity", "notes" ), $this->table, "WHERE `id`='".$id."'" );        if ( $status == 2 )        {            $transportID = getpar( $_POST, "transportID" );            $type = getpar( $_POST, "type" );            $quantity = getpar( $_POST, "quantity", "" );            $productID = getpar( $_POST, "productID" );            $product = $this->__getProduct( $productID );            $typeName = app::loadapp( "adm", "articlesInfo" )->api_getTypeName( $dblist['typeID'] );            $library = app::loadapp( "adm", "articlesLibrary" )->api_getAllArticlesLibraryByOneList( $dblist['libraryID'] );            if ( $type != 1 )            {                if ( $product['stock'] < $quantity )                {                    msg::callback( FALSE, lang( "stockNumBuZu" ) );                }                $content = lang( "needInLibrary" )."{$library['name']}，{$typeName}".lang( "receiveBorrow" )."{$product['name']}，{$dblist['quantity']} {$product['unit']}，".lang( "for" )."{$this->__takeUserName( $dblist['signInID'] )}";                $notice['touid'] = intval( $transportID );                $notice['from'] = 10;                $notice['fromid'] = $id;                $notice['href'] = "index.php?app=adm&func=articles&action=transport&task=loadPage";                $noticeid_t = notice::add( intval( $transportID ), lang( "supplieDDmgr" ), $content, $notice['href'], "", 10, $id );                $notice['title'] = "[".$product['name']."]".lang( "article" )."，".lang( "needYouReceiveBorrow" ).",".lang( "submitter" ).": [".$this->__takeUserName( $dblist['signInID'] )."]";                $notice['content'] = $content;                if ( !empty( $dblist['notes'] ) )                {                    $notice['content'] .= "  ".lang( "submitterNote" ).( ": ".$dblist['notes'] );                }                $notice['funname'] = lang( "supplieDDmgr" );                $notice['move'] = lang( "dispatch" );                $todoid_t = notice::add2( $notice );            }            else            {                $content = lang( "youNeedTo" )."{$this->__takeUserName( $dblist['signInID'] )} ".lang( "restitution" )."{$product['name']}：{$dblist['quantity']} {$product['unit']} ".lang( "to" )."{$library['name']}，{$typeName}";                $notice['touid'] = intval( $transportID );                $notice['from'] = 10;                $notice['fromid'] = $id;                $notice['href'] = "index.php?app=adm&func=articles&action=transport&task=loadPage";                $noticeid_t = notice::add( intval( $transportID ), lang( "supplieDDmgr" ), $content, $notice['href'], "", 10, $id );                $notice['title'] = "[".$product['name']."]".lang( "returnNeedYouDD" ).": [".$this->__takeUserName( $dblist['signInID'] )."]";                $notice['content'] = $content;                if ( !empty( $dblist['notes'] ) )                {                    $notice['content'] .= "  ".lang( "submitterNote" ).( ": ".$dblist['notes'] );                }                $notice['funname'] = lang( "supplieDDmgr" );                $notice['move'] = lang( "dispatch" );                $todoid_t = notice::add2( $notice );            }            $CNOA_DB->db_update( array(                "noticeid_t" => $noticeid_t,                "todoid_t" => $todoid_t            ), $this->table, "WHERE `id` = '".$id."' " );            notice::add( intval( $dblist['signInID'] ), lang( "suppliesAppMgr" ), lang( "article" ).( "[".$product['name']."]" ).lang( "appHasReminDiapatcher" ).( "：".$this->__takeUserName( $transportID )."调度" ), "index.php?app=adm&func=articles&action=personRegister&task=loadPage", "", 10, $id );            $CNOA_DB->db_update( array(                "status" => 2,                "transportID" => $transportID,                "transportTime" => $GLOBALS['CNOA_TIMESTAMP']            ), $this->table, "WHERE `id`='".$id."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 118, $product['name'].lang( "pass" ), lang( "supploeAuditStatue" ) );        }        else if ( $status == 1 )        {            $unPass = getpar( $_POST, "unPass", "" );            $productID = getpar( $_POST, "productID" );            $product = $this->__getProduct( $productID );            if ( $unPass != "" )            {                $noticeH = "index.php?app=adm&func=articles&action=personRegister&task=loadPage";                notice::add( intval( $dblist['signInID'] ), lang( "suppliesAppMgr" ), lang( "article" ).( "[".$product['name']."]" ).lang( "approvalNotThrough" ).",".lang( "reason" ).":".$unPass, $noticeH, "", 10, $id );                $CNOA_DB->db_update( array(                    "explain" => $unPass                ), $this->table, "WHERE `id`='".$id."'" );            }            $CNOA_DB->db_update( array( "status" => 1 ), $this->table, "WHERE `id`='".$id."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 118, $product['name'].lang( "unPass" ), lang( "supploeAuditStatue" ) );        }        notice::donen( $dblist['noticeid_c'] );        notice::donet( $dblist['todoid_c'] );        msg::callback( TRUE, lang( "successopt" ) );    }    private function __getProduct( $id )    {        global $CNOA_DB;        $dblist = $CNOA_DB->db_getone( array( "id", "number", "name", "stock", "lowerStock", "heightStock", "unit" ), $this->tableProduct, "WHERE `id`='".$id."'" );        return $dblist;    }    private function __formatType( $value )    {        if ( $value == 3 )        {            return lang( "consuming" );        }        if ( $value == 2 )        {            return lang( "borrowing" );        }        if ( $value == 1 )        {            return lang( "restitution" );        }    }    private function __formatStatus( $value )    {        if ( $value == 3 )        {            return "<span class='cnoa_color_gray'>".lang( "obsolete" )."</span>";        }        if ( $value == 2 )        {            return "<span class='cnoa_color_green'>".lang( "pass" )."</span>";        }        if ( $value == 1 )        {            return "<span class='cnoa_color_red'>".lang( "unPass" )."</span>";        }        return lang( "pendingTrial" );    }    private function __takeUserName( $id )    {        $data = app::loadapp( "main", "user" )->api_getUserDataByUid( $id );        return $data['truename'];    }}?>