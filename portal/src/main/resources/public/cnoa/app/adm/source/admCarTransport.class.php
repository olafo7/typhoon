<?php//decode by qq2859470class admCarTransport extends model{    private $table_apply = "adm_car_apply";    private $table_info = "adm_car_info";    private $table_driver = "adm_car_driver";    private $rows = 15;    public function run( )    {        $task = getpar( $_GET, "task", "" );        if ( $task == "list" )        {            $this->_list( );        }        else if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "editList" )        {            $this->_editList( );        }        else if ( $task == "transportlist" )        {            global $CNOA_CONTROLLER;            $id = getpar( $_GET, "cid", 0 );            $from = getpar( $_GET, "from", "" );            if ( $from == "loadPage" )            {                $aid = getpar( $_GET, "aid", 0 );                $GLOBALS['GLOBALS']['car']['apply']['list'] = $aid;                $GLOBALS['GLOBALS']['car']['apply']['from'] = "transport";                $path = $CNOA_CONTROLLER->appPath."/tpl/default/car/applylist.htm";                $CNOA_CONTROLLER->loadExtraTpl( $path );                exit( );            }        }        else if ( $task == "info" )        {            global $CNOA_DB;            $id = getpar( $_GET, "id", 0 );            $temp = $CNOA_DB->db_getone( array( "cid" ), $this->table_apply, "WHERE `id`=".$id );            app::loadapp( "adm", "carInfo" )->api_admCarInfoShow( $temp['cid'] );        }        else if ( $task == "getapplylist" )        {            app::loadapp( "adm", "carApply" )->api_getapplylist( );        }        else if ( $task == "getapplydetails" )        {            app::loadapp( "adm", "carApply" )->api_getapplydetails( );        }    }    private function _list( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $type = getpar( $_POST, "storeType", "unuse" );        $WHERE = "WHERE 1 ";        if ( $type == "unuse" )        {            $WHERE .= "AND `type` = 0 ";        }        else if ( $type == "using" )        {            $WHERE .= "AND `type` = 1 ";        }        else if ( $type == "useover" )        {            $WHERE .= "AND `type` = 2 ";        }        $start = getpar( $_POST, "start", 0 );        $number = getpar( $_POST, "number", 0 );        $caruser = getpar( $_POST, "caruser", "" );        $stime = getpar( $_POST, "stime", 0 );        $etime = getpar( $_POST, "etime", 0 );        if ( !empty( $number ) )        {            $temp = $CNOA_DB->db_select( array( "id" ), $this->table_info, "WHERE `carnumber` LIKE '%".$number."%' " );            if ( empty( $temp ) )            {                $WHERE .= "AND `cid` = 0 ";            }            else            {                if ( !is_array( $temp ) )                {                    $temp = array( );                }                foreach ( $temp as $v )                {                    $temp2[] = $v['id'];                }                $WHERE .= "AND `cid` IN (".implode( ",", $temp2 ).") ";            }        }        if ( !empty( $caruser ) )        {            $WHERE .= "AND `caruser` LIKE '%".$caruser."%' ";        }        if ( !empty( $stime ) )        {            $stime = strtotime( $stime." 00:00:00" );            $WHERE .= "AND `realstarttime` > ".$stime." ";        }        if ( !empty( $etime ) )        {            $etime = strtotime( $etime." 23:59:59" );            $WHERE .= "AND `realendtime` < ".$etime." ";        }        $dblist = $CNOA_DB->db_select( "*", $this->table_apply, $WHERE.( "AND (`status` = 3 OR `status` = 5) AND `tid`=".$uid." ORDER BY `id` DESC LIMIT {$start}, {$this->rows}" ) );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $carArr = array( 0 );        $checkuidArr = array( 0 );        foreach ( $dblist as $k => $v )        {            $carArr[] = $v['cid'];            $checkuidArr[] = $v['checkid'];        }        $carInfo = app::loadapp( "adm", "carInfo" )->api_getCarInfo( $carArr );        $truenameArr = app::loadapp( "main", "user" )->api_getUserNamesByUids( $checkuidArr );        foreach ( $dblist as $k => $v )        {            $dblist[$k]['carnumber'] = $carInfo[$v['cid']]['carnumber'];            $dblist[$k]['checkname'] = $truenameArr[$v['checkid']]['truename'];            $dblist[$k]['starttime'] = formatdate( $v['starttime'], "Y-m-d H:i" );            $dblist[$k]['endtime'] = formatdate( $v['endtime'], "Y-m-d H:i" );            $dblist[$k]['realstarttime'] = formatdate( $v['realstarttime'], "Y-m-d H:i" );            $dblist[$k]['realendtime'] = formatdate( $v['realendtime'], "Y-m-d H:i" );        }        ( );        $dataStore = new dataStore( );        $dataStore->total = $CNOA_DB->db_getcount( $this->table_apply, $WHERE.( "AND (`status` = 3 OR `status` = 5) AND `tid`=".$uid ) );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _add( $isexit = TRUE )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $aid = getpar( $_POST, "aid", 0 );        $type = getpar( $_POST, "type", "" );        $startdate = getpar( $_POST, "realstartdate", "" );        $starttime = getpar( $_POST, "realstarttime", "" );        $enddate = getpar( $_POST, "realenddate", "" );        $endtime = getpar( $_POST, "realendtime", "" );        $applyUid = getpar( $_POST, "applyUid", "" );        $data['destination'] = getpar( $_POST, "destination", "" );        $data['deptID'] = getpar( $_POST, "deptID", "" );        $data['way'] = getpar( $_POST, "way", "" );        $data['starttime'] = strtotime( getpar( $_POST, "starttime", "" ) );        $data['endtime'] = strtotime( getpar( $_POST, "endtime", "" ) );        $data['realstarttime'] = strtotime( $startdate.$starttime );        $data['realendtime'] = strtotime( $enddate.$endtime );        $apply = $CNOA_DB->db_getone( array( "noticeid_t", "todoid_t", "cid" ), $this->table_apply, "WHERE `id`=".$aid." AND `tid`={$uid}" );        if ( empty( $data['starttime'] ) || empty( $data['endtime'] ) )        {            msg::callback( FALSE, "预算开始时间和预算结束时间不能为空" );        }        else if ( !empty( $data['starttime'] ) && !empty( $data['endtime'] ) && !empty( $data['starttime'] ) || empty( $data['endtime'] ) )        {            msg::callback( FALSE, "预算开始时间或者结束时间不能为空" );        }        if ( $data['endtime'] <= $data['starttime'] )        {            msg::callback( FALSE, "预算开始时间不能大于预算结束时间" );        }        if ( $type == "unuse" )        {            if ( empty( $starttime ) )            {                msg::callback( FALSE, lang( "stimeNotEmpty" ) );            }            if ( $isexit && empty( $startdate ) )            {                msg::callback( FALSE, lang( "stimeNotEmpty" ) );            }            notice::donen( $apply['noticeid_t'] );            notice::donet( $apply['todoid_t'] );            $data['type'] = 1;        }        else if ( $type == "using" || $type == "useover" )        {            if ( empty( $endtime ) )            {                msg::callback( FALSE, lang( "stimeOrEtimeNotEmpty" ) );            }            if ( $isexit && ( empty( $startdate ) || empty( $enddate ) || empty( $starttime ) ) )            {                msg::callback( FALSE, lang( "stimeOrEtimeNotEmpty" ) );            }            if ( $data['realendtime'] <= $data['realstarttime'] )            {                msg::callback( FALSE, lang( "StimeGreaterThanEtime" ) );            }            $data['type'] = 2;        }        $realwaystart = getpar( $_POST, "realwaystart", "" );        if ( !empty( $realwaystart ) )        {            $data['realwaystart'] = $realwaystart;            $realwayend = getpar( $_POST, "realwayend", "" );            if ( !empty( $realwayend ) )            {                $data['realwayend'] = $realwayend;                $data['totalway'] = $realwayend - $realwaystart;            }        }        $CNOA_DB->db_update( $data, $this->table_apply, "WHERE `id`=".$aid );        $CNOA_DB->db_update( array(            "realwayend" => $data['realwayend']        ), $this->table_info, "WHERE `id` = '".$apply['cid']."' " );        if ( !empty( $applyUid ) )        {            $this->___sendNews( $applyUid, $aid );        }        if ( $isexit )        {            msg::callback( TRUE, lang( "successopt" ) );        }    }    private function _editList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $aid = getpar( $_POST, "aid", 0 );        $type = getpar( $_POST, "type", "" );        $data = $CNOA_DB->db_getone( "*", $this->table_apply, "WHERE `id`=".$aid );        $data['carnumber'] = $this->__getCarNumberByOne( $data['cid'] );        $data['department'] = $data['deptID'] == "" ? "" : $this->__getDepartName( $data['deptID'] );        $data['starttime'] = $this->__formatDate( $data['starttime'] );        $data['endtime'] = $this->__formatDate( $data['endtime'] );        $data['applyname'] = $this->__takeUserName( $data['applyUid'] );        $data['realstartdate'] = $this->__takeFormatDate( $data['realstarttime'] );        $data['realstarttime'] = $this->__takeFormatTime( $data['realstarttime'] );        $data['realenddate'] = $this->__takeFormatDate( $data['realendtime'] );        $data['realendtime'] = $this->__takeFormatTime( $data['realendtime'] );        $data['type'] = $this->__formatType( $data['type'] );        $data['driver2'] = $data['driver'];        if ( $data['uFlowId'] == 0 )        {            $drivername = $CNOA_DB->db_getfield( "name", $this->table_driver, " WHERE `did`=".$data['driver'] );            $data['driver2'] = $drivername;        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function __formatType( $value )    {        if ( $value == 0 )        {            return "unuse";        }        if ( $value == 1 )        {            return "using";        }        if ( $value == 2 )        {            return "useover";        }    }    private function __takeFormatDate( $value )    {        if ( $value == 0 )        {            return "";        }        return date( "Y-m-d", $value );    }    private function __takeFormatTime( $value )    {        if ( $value == 0 )        {            return "";        }        return date( "H:i", $value );    }    private function __getDepartName( $deptID )    {        $depList = app::loadapp( "main", "struct" )->api_getArrayList( );        $deptName = $depList[$deptID];        return $deptName;    }    private function __getCarNumberByOne( $id )    {        global $CNOA_DB;        $data = $CNOA_DB->db_getone( array( "carnumber" ), $this->table_info, "WHERE `id`='".$id."'" );        if ( !is_array( $data ) )        {            $data['carnumber'] = "";        }        return $data['carnumber'];    }    private function __formatDate( $value )    {        if ( $value == 0 )        {            return "";        }        return date( "Y-m-d H:i:s", $value );    }    private function __takeUserName( $id )    {        $data = app::loadapp( "main", "user" )->api_getUserDataByUid( $id );        return $data['truename'];    }    public function api_add( $isexit )    {        $this->_add( $isexit );    }    private function ___sendNews( $uid, $aid )    {        $title = "设置调度车辆";        $content = "设置调度车辆信息已更改";        $href = "index.php?app=adm&func=car&action=apply&task=getapplydetails&aid=".$aid;        notice::add( $uid, $title, $content, $href, "", 11, $aid );    }}?>