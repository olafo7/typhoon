<?php//decode by qq2859470class odocReceiveCheck extends model{    private $t_step_list = "odoc_step";    private $t_receive_list = "odoc_receive_list";    private $t_tpl_list = "odoc_setting_template_list";    private $rows = 15;    public function __construct( )    {    }    public function __destruct( )    {    }    public function run( )    {        $task = getpar( $_GET, "task", "loadpage" );        switch ( $task )        {        case "loadpage" :            $this->_loadpage( );            break;        case "getJsonData" :            $this->_getJsonData( );            break;        case "getTypeList" :            app::loadapp( "odoc", "settingWord" )->api_getTypeList( );            break;        case "getLevelList" :            app::loadapp( "odoc", "settingWord" )->api_getLevelList( );            break;        case "getHurryList" :            app::loadapp( "odoc", "settingWord" )->api_getHurryList( );            break;        case "submit" :            $from = getpar( $_POST, "from", "agree" );            if ( $from == "agree" )            {                $this->_agree( );            }            else            {                if ( !( $from == "disagree" ) )                {                    break;                }                $this->_disagree( );            }            break;        case "checkOdocTemplate" :            global $CNOA_DB;            global $CNOA_CONTROLLER;            global $CNOA_SESSION;            $GLOBALS['GLOBALS']['title'] = getpar( $_GET, "title", "" );            $id = getpar( $_GET, "id", 0 );            $GLOBALS['GLOBALS']['id'] = $CNOA_DB->db_getfield( "fromId", $this->t_step_list, "WHERE `id` = '".$id."'" );            $GLOBALS['GLOBALS']['stepId'] = $id;            $GLOBALS['GLOBALS']['CNOA_SYSTEM_NAME'] = "收文办理";            $GLOBALS['GLOBALS']['CNOA_USERNAME'] = $CNOA_SESSION->get( "TRUENAME" );            $CNOA_CONTROLLER->loadViewCustom( $CNOA_CONTROLLER->appPath."/tpl/default/receive/checkOdocTemplate.htm", TRUE, TRUE );            exit( );        case "loadTemplateFile" :            $this->_loadTemplateFile( );            break;        case "getOdocFawenForm" :            $this->_getOdocFawenForm( );            break;        case "submitFormData" :            $this->_submitFormData( );            break;        case "submitFileData" :            $this->_submitFileData( );            break;        case "nextstep" :            $this->_nextstep( );            break;        case "loadFormData" :            $this->_loadFormData( );            break;        case "getStepList" :            $this->_getStepList( );        }    }    private function _loadpage( )    {    }    private function _getJsonData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $WHERE = "WHERE 1 ";        $start = getpar( $_POST, "start", 0 );        $storeType = getpar( $_POST, "storeType", "waiting" );        if ( $storeType == "waiting" )        {            $WHERE .= "AND `status` = '1' ";        }        else if ( $storeType == "check" )        {            $WHERE .= "AND `status` = '2' ";        }        $search = $this->__searchForJson( );        $WHERE .= "AND `fromId` IN (".implode( ",", $search ).") ";        $dblist = $CNOA_DB->db_select( "*", $this->t_step_list, $WHERE.( "AND `uid` = '".$uid."' AND `fromType` = '2' AND `stepid` != 1 ORDER BY `id` DESC LIMIT {$start}, {$this->rows}" ) );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $idArr = array( 0 );        foreach ( $dblist as $k => $v )        {            $idArr[] = $v['fromId'];        }        $receiveArr = app::loadapp( "odoc", "receiveApply" )->api_getAllData( $idArr );        $typeArr = app::loadapp( "odoc", "settingWord" )->api_getTypeAllArr( );        $levelArr = app::loadapp( "odoc", "settingWord" )->api_getLevelAllArr( );        $hurryArr = app::loadapp( "odoc", "settingWord" )->api_getHurryAllArr( );        foreach ( $dblist as $k => $v )        {            $dblist[$k]['title'] = $receiveArr[$v['fromId']]['title'];            $dblist[$k]['number'] = $receiveArr[$v['fromId']]['number'];            $dblist[$k]['type'] = $typeArr[$receiveArr[$v['fromId']]['type']]['title'];            $dblist[$k]['level'] = $levelArr[$receiveArr[$v['fromId']]['level']]['title'];            $dblist[$k]['hurry'] = $hurryArr[$receiveArr[$v['fromId']]['hurry']]['title'];            $dblist[$k]['createtime'] = formatdate( $receiveArr[$v['fromId']]['createtime'], "Y-m-d H:i" );        }        ( );        $dataStore = new dataStore( );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function __searchForJson( )    {        global $CNOA_DB;        $s_title = getpar( $_POST, "title", "" );        $s_number = getpar( $_POST, "number", "" );        $s_type = getpar( $_POST, "type", 0 );        $s_level = getpar( $_POST, "level", 0 );        $s_hurry = getpar( $_POST, "hurry", 0 );        $WHERE = "WHERE 1 ";        if ( !empty( $s_title ) )        {            $WHERE .= "AND `title` LIKE '%".$s_title."%' ";        }        if ( !empty( $s_number ) )        {            $WHERE .= "AND `number` LIKE '%".$s_number."%' ";        }        if ( !empty( $s_type ) )        {            $WHERE .= "AND `type` = '".$s_type."' ";        }        if ( !empty( $s_level ) )        {            $WHERE .= "AND `level` = '".$s_level."' ";        }        if ( !empty( $s_hurry ) )        {            $WHERE .= "AND `hurry` = '".$s_hurry."' ";        }        $dblist = $CNOA_DB->db_select( array( "id" ), $this->t_receive_list, $WHERE );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $data = array( 0 );        foreach ( $dblist as $k => $v )        {            $data[] = $v['id'];        }        return $data;    }    private function _loadTemplateFile( )    {        global $CNOA_DB;        $id = intval( getpar( $_GET, "id", 0 ) );        $info = $CNOA_DB->db_getone( "*", $this->t_receive_list, "WHERE `id`='".$id."'" );        $maxid = $CNOA_DB->db_getmax( "id", $this->t_step_list, "WHERE `fromType`=2 AND `fromId`='".$id."' AND `status`=2" );        $formPath = CNOA_PATH_FILE.( "/common/odoc/receive/".$id."/doc.history.{$maxid}.php" );        if ( file_exists( $formPath ) )        {            $form = file_get_contents( $formPath );        }        else        {            $form = "无正文内容";        }        echo $form;        exit( );    }    private function _getOdocFawenForm( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = intval( getpar( $_GET, "id", "" ) );        $from = getpar( $_GET, "OdocFawenForm_from" );        $info = $CNOA_DB->db_getone( "*", $this->t_receive_list, "WHERE `id`='".$id."'" );        if ( empty( $info['form'] ) )        {            $form = app::loadapp( "odoc", "common" )->getFormFromTplById( $info['tempid'] );            $CNOA_DB->db_update( array(                "form" => addslashes( $form )            ), $this->t_receive_list, "WHERE `id`='".$id."'" );        }        else        {            $form = $info['form'];        }        if ( !empty( $info['formdata'] ) )        {            $form = app::loadapp( "odoc", "common" )->getFormWithValue( $form, json_decode( $info['formdata'], TRUE ) );        }        $form = str_replace( array( "\r\n", "\n", "\"" ), array( "&#13;", "&#13;", "'" ), $form );        $js = file_get_contents( CNOA_PATH."/app/odoc/scripts/receive_checkOdocTemplate.js" );        $js = str_replace( "{FAWENFORM}", $form, $js );        header( "Content-type: text/javascript" );        echo $js;        exit( );    }    private function _submitFormData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $info = $CNOA_DB->db_getone( "*", $this->t_receive_list, "WHERE `id`='".$id."'" );        $formdata = addslashes( json_encode( $_POST ) );        $data = array( );        $data['formdata'] = $formdata;        foreach ( $GLOBALS['_POST'] as $k => $v )        {            $name = preg_replace( "/id_[0-9]{1,}__(.*)/is", "\\1", $k );            $in_array = array( "number", "title", "sign", "createdept", "createname_receive", "level", "hurry", "page", "many", "range", "senddate" );            if ( in_array( $name, $in_array ) )            {                if ( $name == "createname_receive" )                {                    $name = "createname";                }                $data[$name] = $v;            }        }        $CNOA_DB->db_update( $data, $this->t_receive_list, "WHERE `id`='".$id."'" );        $formHtml = app::loadapp( "odoc", "common" )->getHtmlWithValue( $info['form'], $_POST );        app::loadapp( "odoc", "common" )->saveHistory( $id, $formHtml, 0, "receive" );        msg::callback( TRUE, lang( "successopt" ) );        exit( );    }    public function _submitFileData( )    {        global $CNOA_DB;        $id = intval( getpar( $_POST, "id", 0 ) );        $uploadfile = CNOA_PATH_FILE.( "/common/odoc/receive/".$id."/doc.history.0.php" );        $odoc_ext = strtolower( strrchr( $_FILES['msOffice']['name'], "." ) );        mkdirs( dirname( $uploadfile ) );        if ( !in_array( strtolower( $odoc_ext ), array( ".doc", ".docx", ".xls", ".xlsx" ) ) )        {            echo "0";            exit( );        }        if ( !cnoa_move_uploaded_file( $_FILES['msOffice']['tmp_name'], $uploadfile ) )        {            echo "0";            exit( );        }        echo "1";        exit( );    }    private function _agree( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $ids = getpar( $_POST, "ids", 0 );        $ids = substr( $ids, 0, -1 );        $idArr = explode( ",", $ids );        $uid = $CNOA_SESSION->get( "UID" );        foreach ( $idArr as $k => $v )        {            $temp = $CNOA_DB->db_getone( array( "id", "fromId", "title" ), $this->t_step_list, "WHERE `id` > '".$v."' ORDER BY `id` ASC " );            if ( $temp['id'] == "" )            {                $update['checked'] = 1;            }            else            {                $CNOA_DB->db_update( array(                    "status" => 1,                    "stime" => $GLOBALS['CNOA_TIMESTAMP']                ), $this->t_step_list, "WHERE `id` = '".$temp['id']."'" );            }            $CNOA_DB->db_update( $update, $this->t_receive_list, "WHERE `id` = '".$temp['fromId']."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "", 3103, "同意", "审核收文（".$temp['title']."）" );        }        msg::callback( TRUE, lang( "successopt" ) );    }    private function _disagree( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $ids = getpar( $_POST, "ids", 0 );        $ids = substr( $ids, 0, -1 );        $idArr = explode( ",", $ids );        $uid = $CNOA_SESSION->get( "UID" );        $CNOA_DB->db_update( array(            "etime" => $GLOBALS['CNOA_TIMESTAMP'],            "status" => 2        ), $this->t_step_list, "WHERE `id` IN (".$ids.") AND `status` = '1' AND `uid` = '{$uid}' " );        foreach ( $idArr as $k => $v )        {            $temp = $CNOA_DB->db_getone( array( "id", "fromId" ), $this->t_step_list, "WHERE `id` > '".$v."' ORDER BY `id` ASC " );            if ( $temp['id'] == "" )            {                $update['checked'] = 2;            }            else            {                $CNOA_DB->db_update( array(                    "status" => 1,                    "stime" => $GLOBALS['CNOA_TIMESTAMP']                ), $this->t_step_list, "WHERE `id` = '".$temp['id']."'" );            }            $CNOA_DB->db_update( $update, $this->t_receive_list, "WHERE `id` = '".$temp['fromId']."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "", 3103, "不同意", "审核收文（".$temp['title']."）" );        }        msg::callback( TRUE, lang( "successopt" ) );    }    private function _nextstep( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $id = getpar( $_POST, "id", 0 );        $say = getpar( $_POST, "say", "" );        $temp = $CNOA_DB->db_getone( array( "fromType", "stepid", "fromId", "noticeid_c", "todoid_c" ), $this->t_step_list, "WHERE `id` = '".$id."' " );        $stepid = $temp['stepid'] + 1;        $next = $CNOA_DB->db_getone( array( "id", "uid", "fromId" ), $this->t_step_list, "WHERE `fromId` = '".$temp['fromId']."' AND `stepid` = '{$stepid}' AND `fromType` = '2' " );        $CNOA_DB->db_update( array(            "status" => 2,            "say" => $say,            "etime" => $GLOBALS['CNOA_TIMESTAMP']        ), $this->t_step_list, "WHERE `id` = '".$id."' " );        $fid = $temp['fromId'];        $path = CNOA_PATH_FILE."/common/odoc/receive/".$fid."/";        @rename( $path."form.history.0.php", $path."form.history.".$id.".php" );        @rename( $path."doc.history.0.php", $path."doc.history.".$id.".php" );        $info = $CNOA_DB->db_getone( array( "title", "number", "createuid" ), $this->t_receive_list, "WHERE `id` = '".$temp['fromId']."'" );        if ( !empty( $next['id'] ) )        {            $noticeT = "公文管理";            $noticeC = lang( "title" )."[".$info['title']."]需要您审批";            $noticeH = "index.php?app=odoc&func=receive&action=check";            $noticeid_c = notice::add( $next['uid'], $noticeT, $noticeC, $noticeH, 0, 18, $CNOA_SESSION->get( "UID" ) );            $CNOA_DB->db_update( array(                "status" => 1,                "stime" => $GLOBALS['CNOA_TIMESTAMP']            ), $this->t_step_list, "WHERE `id` = '".$next['id']."'" );            msg::callback( TRUE, "操作成功，流程已经到下一步了" );        }        else        {            $noticeT = "公文管理";            $noticeC = lang( "title" )."[".$info['title']."]流程已经完成";            $noticeH = "index.php?app=odoc&func=receive&action=apply&from=done";            notice::add( $info['createuid'], $noticeT, $noticeC, $noticeH, 0, 18, $CNOA_SESSION->get( "UID" ) );            $CNOA_DB->db_update( array(                "status" => 2,                "senddate" => $GLOBALS['CNOA_TIMESTAMP']            ), $this->t_receive_list, "WHERE `id` = '".$temp['fromId']."'" );            msg::callback( TRUE, "您已经是最后一步了，流程已全部走完" );        }    }    private function _loadFormData( )    {        global $CNOA_DB;        $id = getpar( $_POST, "id", 0 );        $dblist = $CNOA_DB->db_getone( "*", $this->t_receive_list, "WHERE `id` = '".$id."' " );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        ( );        $fs = new fs( );        $dblist['attach'] = json_decode( $dblist['attach'], TRUE );        $dblist['attachCount'] = !$dblist['attach'] ? 0 : count( $dblist['attach'] );        $dblist['attach'] = $fs->getDownLoadItems4normal( $dblist['attach'], TRUE );        ( );        $dataStore = new dataStore( );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getStepList( )    {        global $CNOA_DB;        $where = "WHERE 1";        $fid = getpar( $_POST, "fid" );        $where .= " AND `fromId`=".$fid;        $prev = getpar( $_POST, "prev" );        if ( !empty( $prev ) )        {            $stepInfo = $CNOA_DB->db_getone( array( "stepid" ), $this->t_step_list, "WHERE `fromId`=".$fid." AND `status`=1 AND `stepType`=1" );            $stepid = $stepInfo['stepid'];            $where .= " AND < `stepid`=".$stepid;        }        $where .= " AND `fromType`=2";        $dblist = $CNOA_DB->db_select( "*", $this->t_step_list, $where." ORDER BY `stepid` ASC" );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $data = array( );        foreach ( $dblist as $info )        {            $db =& $data[];            $db = $info;            $db['status'] = app::loadapp( "odoc", "sendApply" )->api_getStepStatus( $db['status'] );            $db['from'] = $db['deptName']." / ".$db['uname'];            $db['stime'] = formatdate( $db['stime'], "Y-m-d H:i" );            $db['etime'] = formatdate( $db['etime'], "Y-m-d H:i" );            $db['say'] = nl2br( $db['say'] );        }        ( );        $ds = new dataStore( );        $ds->data = $data;        $js = $ds->makeJsonData( );        echo $js;        exit( );    }    public function api_getStepList( )    {        $this->_getStepList( );    }}?>