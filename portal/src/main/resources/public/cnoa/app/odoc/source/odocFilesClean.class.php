<?php//decode by qq2859470class odocFilesClean extends model{    private $t_odoc_view_fieldset = "odoc_view_fieldset";    private $t_odoc_view_field = "odoc_view_field";    private $t_odoc_data = "odoc_data";    private $t_odoc_view_field_list = "odoc_view_field_list";    private $t_odoc_bind_flow_kj = "odoc_bind_flow_kj";    private $t_odoc_fenfa = "odoc_fenfa";    private $t_s_flow_other_app_data = "wf_s_flow_other_app_data";    private $t_step = "odoc_step";    private $t_send_list = "odoc_send_list";    private $t_receive_list = "odoc_receive_list";    private $t_files_dangan = "odoc_files_dangan";    private $rows = 15;    public function __construct( )    {    }    public function __destruct( )    {    }    public function run( )    {        $task = getpar( $_GET, "task", "loadpage" );        switch ( $task )        {        case "loadpage" :            $this->_loadpage( );            break;        case "loadColumn" :            $this->_loadColumn( );            break;        case "getJsonData" :            $this->_getJsonData( );            break;        case "getTypeList" :            app::loadapp( "odoc", "filesSetting" )->api_getTypeList( );            break;        case "getLevelList" :            app::loadapp( "odoc", "filesSetting" )->api_getLevelList( );            break;        case "getRoomList" :            app::loadapp( "odoc", "filesSetting" )->api_getRoomList( );            break;        case "getAnjuanList" :            app::loadapp( "odoc", "filesAnjuanmgr" )->api_anjuanList( );            break;        case "getWenzhongList" :            app::loadapp( "odoc", "filesSetting" )->api_getWenzhongList( );            break;        case "loadFormData" :            $this->_loadFormData( );            break;        case "add" :            $this->_add( );            break;        case "loadFileFormData" :            $this->_loadFileFormData( );            break;        case "collect" :            $this->_collect( );            break;        case "view" :            $fromType = getpar( $_GET, "fromType" );            app::loadapp( "odoc", "commonView" )->run( $fromType );            break;        case "delete" :            $this->_delete( );        }    }    private function _loadColumn( )    {        global $CNOA_DB;        $from = getpar( $_POST, "from", "send" );        $dblist = $CNOA_DB->db_select( "*", $this->t_odoc_view_field_list, "WHERE 1 " );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        $field = array( );        foreach ( $dblist as $k => $v )        {            if ( $v['from'] == "send" )            {                $fieldSend[] = "field_".$v['field'];                $dblistSend[] = $v;            }            else            {                $fieldReceive[] = "field_".$v['field'];                $dblistReceive[] = $v;            }        }        $result = array(            "success" => TRUE,            "field" => array(                "send" => $fieldSend,                "receive" => $fieldReceive            ),            "column" => array(                "send" => $dblistSend,                "receive" => $dblistReceive            )        );        echo json_encode( $result );        exit( );    }    private function _delete( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $ids = getpar( $_POST, "ids" );        $ids = substr( $ids, 0, -1 );        $from = getpar( $_POST, "fromType" );        $table = $this->t_send_list;        $fromType = 1;        $folder = "send";        $extra = "发文";        if ( $from == "receive" )        {            $table = $this->t_receive_list;            $fromType = 2;            $folder = "receive";            $extra = "收文";        }        $where = "WHERE 1";        $where .= " AND `id` IN (".$ids.")";        $DB = $CNOA_DB->db_select( array( "title" ), $table, $where );        $CNOA_DB->db_delete( $table, $where );        foreach ( $DB as $v )        {            app::loadapp( "main", "systemLogs" )->api_addLogs( "del", 3204, $v['title'], $extra."档案" );        }        $argId = explode( ",", $ids );        foreach ( $argId as $fid )        {            $where = "WHERE `fromId`=".$fid." AND `fromType`={$fromType}";            $dblist = $CNOA_DB->db_select( "*", $this->t_step, $where );            if ( !is_array( $dblist ) )            {                $dblist = array( );            }            foreach ( $dblist as $dbinfo )            {                $step_id = $dbinfo['id'];                $path = CNOA_PATH_FILE.( "/common/odoc/".$folder."/" ).$fid."/";                @unlink( $path."form.history.".$step_id.".php" );                @unlink( $path."doc.history.".$step_id.".php" );            }        }        $where = "WHERE 1";        $where .= " AND `fromId` IN (".$fid.") AND `fromType`={$fromType}";        $CNOA_DB->db_delete( $this->t_step, $where );        msg::callback( TRUE, "删除操作成功." );    }    private function _loadpage( )    {        global $CNOA_SESSION;        global $CNOA_CONTROLLER;        global $CNOA_DB;        $from = getpar( $_GET, "from", "" );        switch ( $from )        {        case "viewflow" :            $GLOBALS['GLOBALS']['app']['uFlowId'] = getpar( $_GET, "uFlowId", 0 );            $GLOBALS['GLOBALS']['app']['step'] = getpar( $_GET, "step", 0 );            $GLOBALS['GLOBALS']['app']['wf']['type'] = "done";            $DB = $CNOA_DB->db_getone( array( "status", "flowId" ), "wf_u_flow", "WHERE `uFlowId`='".$GLOBALS['app']['uFlowId']."'" );            $GLOBALS['GLOBALS']['app']['flowId'] = $DB['flowId'];            $flow = $CNOA_DB->db_getone( array( "tplSort", "flowType" ), "wf_s_flow", "WHERE `flowId` = ".$DB['flowId']." " );            $GLOBALS['GLOBALS']['app']['wf']['allowCallback'] = 0;            $GLOBALS['GLOBALS']['app']['wf']['allowCancel'] = 0;            $GLOBALS['GLOBALS']['app']['allowPrint'] = "false";            $GLOBALS['GLOBALS']['app']['allowFenfa'] = "false";            $GLOBALS['GLOBALS']['app']['allowExport'] = "false";            $GLOBALS['GLOBALS']['app']['status'] = 1;            $GLOBALS['GLOBALS']['app']['wf']['tplSort'] = $flow['tplSort'];            $GLOBALS['GLOBALS']['app']['wf']['flowType'] = $flow['flowType'];            $GLOBALS['GLOBALS']['app']['wf']['owner'] = 0;            $tplPath = CNOA_PATH."/app/wf/tpl/default/flow/use/showflow.htm";            $CNOA_CONTROLLER->loadExtraTpl( $tplPath );            exit( );        }    }    private function _getJsonData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $storeType = getpar( $_GET, "from", "send" );        $WHERE = "WHERE `from` = '".$storeType."' ";        if ( $storeType == "receive" )        {            app::loadapp( "odoc", "receiveApply" )->api_checkData( );        }        else if ( $storeType == "send" )        {            app::loadapp( "odoc", "sendApply" )->api_checkData( );        }        $start = getpar( $_POST, "start", 0 );        $dblist = $CNOA_DB->db_select( "*", $this->t_odoc_data, $WHERE.( "AND `collect` = 0 AND `status`=2 ORDER BY `id` DESC LIMIT ".$start.", {$this->rows} " ) );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        foreach ( $dblist as $k => $v )        {            $dblist[$k]['posttime'] = date( "Y-m-d", $v['posttime'] );        }        ( );        $ds = new dataStore( );        $ds->data = $dblist;        echo $ds->makeJsonData( );        exit( );    }    private function _loadFormData( )    {        global $CNOA_DB;        $ids = getpar( $_POST, "ids", 0 );        $ids = substr( $ids, 0, -1 );        $idArr = explode( ",", $ids );        $num = count( $idArr );        $storeType = getpar( $_POST, "storeType", "send" );        switch ( $storeType )        {        case "send" :            $table = $this->t_send_list;            break;        case "receive" :            $table = $this->t_receive_list;        }        if ( $num == 1 )        {            $this->__getLoadFormDataSingle( $table, $idArr );        }        else        {            $this->__getLoadFormDataMult( $table, $idArr );        }    }    private function __getLoadFormDataSingle( $table, $idArr )    {        global $CNOA_DB;        $data = $CNOA_DB->db_getone( "*", $table, "WHERE `id` = '".$idArr[0]."'" );        $typeArr = app::loadapp( "odoc", "common" )->getTypeAllArr( );        $data['type'] = $typeArr[$data['type']]['title'];        $data['guidangdate'] = formatdate( $GLOBALS['CNOA_TIMESTAMP'] );        $data['senddate'] = formatdate( $data['createtime'] );        ( );        $dataStore = new dataStore( );        $dataStore->data = $data;        echo $dataStore->makeJsonData( );        exit( );    }    private function __getLoadFormDataMult( $table, $idArr )    {        global $CNOA_DB;        $dblist['guidangdate'] = formatdate( $GLOBALS['CNOA_TIMESTAMP'] );        ( );        $dataStore = new dataStore( );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _add( )    {        global $CNOA_DB;        $data['title'] = getpar( $_POST, "title", "" );        $data['level'] = getpar( $_POST, "level", 0 );        $data['filesnum'] = getpar( $_POST, "filesnum", "" );        $data['number'] = getpar( $_POST, "number", "" );        $data['senddate'] = strtotime( getpar( $_POST, "senddate", "" ) );        $data['respon'] = getpar( $_POST, "respon", "" );        $data['page'] = getpar( $_POST, "page", "" );        $data['collectdate'] = strtotime( getpar( $_POST, "collectdate", "" ) );        $data['wenzhong'] = getpar( $_POST, "wenzhong", "" );        $data['anjuan'] = getpar( $_POST, "anjuan", "" );        $data['note'] = getpar( $_POST, "note", "" );        $data['danganshi'] = getpar( $_POST, "room", "" );        $data['from'] = 3;        $id = getpar( $_POST, "id", 0 );        ( );        $fs = new fs( );        $filesUpload = getpar( $_POST, "filesUpload", array( ) );        $attch = $fs->add( $filesUpload, 17 );        $data['attach'] = json_encode( $attch );        if ( $id == 0 )        {            $CNOA_DB->db_insert( $data, $this->t_files_dangan );            app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 3203, $data['title'], "档案" );        }        else        {            $CNOA_DB->db_update( $data, $this->t_files_dangan, "WHERE `id`='".$id."'" );            app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 3203, $data['title'], "档案" );        }        msg::callback( TRUE, "操作成功" );    }    private function _loadFileFormData( )    {        global $CNOA_DB;        $id = getpar( $_POST, "id", 0 );        $dblist = $CNOA_DB->db_getone( "*", $this->t_files_dangan, "WHERE `id` = '".$id."' " );        $dblist['senddate'] = formatdate( $dblist['senddate'] );        $dblist['collectdate'] = formatdate( $dblist['collectdate'] );        $dblist['room'] = $dblist['danganshi'];        $dblist['year'] = $CNOA_DB->db_getfield( "anjuandate", "odoc_files_anjuan_list", "WHERE `id`='".$dblist['anjuan']."'" );        ( );        $dataStore = new dataStore( );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _collect( )    {        global $CNOA_DB;        $ids = getpar( $_POST, "ids", 0 );        $ids = substr( $ids, 0, -1 );        $idArr = explode( ",", $ids );        $storeType = getpar( $_POST, "storeType", "send" );        $title = getpar( $_POST, "title", "" );        $guidangdate = strtotime( getpar( $_POST, "guidangdate", "" ) );        $type = getpar( $_POST, "type", "" );        $level = getpar( $_POST, "level", 0 );        $number = getpar( $_POST, "number", "" );        $respon = getpar( $_POST, "respon", "" );        $filesnum = getpar( $_POST, "filesnum", "" );        $wenzhong = getpar( $_POST, "wenzhong", 0 );        $anjuan = getpar( $_POST, "anjuan", 0 );        $danganshi = getpar( $_POST, "room", 0 );        $WHERE = "WHERE 1 ";        switch ( $storeType )        {        case "send" :            $from = 1;            break;        case "receive" :            $from = 2;        }        include( CNOA_PATH."/app/wf/inc/wfCommon.class.php" );        include( CNOA_PATH."/app/wf/inc/wfCache.class.php" );        include( CNOA_PATH."/app/wf/inc/wfFieldFormaterForView.class.php" );        foreach ( $idArr as $v )        {            $data['title'] = $title;            $data['number'] = $number;            $data['type'] = $type;            $data['level'] = $number;            $data['from'] = $from;            $data['fromid'] = $v;            $data['respon'] = $respon;            $data['filesnum'] = $filesnum;            $data['wenzhong'] = $wenzhong;            $data['anjuan'] = $anjuan;            $data['danganshi'] = $danganshi;            $data['collectdate'] = $GLOBALS['CNOA_TIMESTAMP'];            $data['senddate'] = $guidangdate;            unset( $data['createtime'] );            $data['page'] = getpar( $_POST, "page", "" );            $CNOA_DB->db_insert( $data, $this->t_files_dangan );            if ( $storeType == "receive" )            {                $pid = $CNOA_DB->db_getfield( "pid", $this->t_odoc_data, "WHERE `id` = '".$v."' " );                $CNOA_DB->db_update( array( "collect" => 1 ), $this->t_odoc_data, "WHERE `pid` = ".$pid." " );            }            else            {                $CNOA_DB->db_update( array( "collect" => 1 ), $this->t_odoc_data, "WHERE `id` = '".$v."' " );            }            $odocInfo = $CNOA_DB->db_getone( "*", $this->t_odoc_data, "WHERE `id` = ".$v." " );            $uFlowId = $odocInfo['uFlowId'];            $formHtml = "<!-- <?php echo '-'.'->disallow !';exit;?> --><div class='wf_form_content'>";            $formHtml .= app::loadapp( "wf", "flowUseView" )->api_getFormHtml( $uFlowId );            $formHtml .= "</div>";            $targetPath = ( CNOA_PATH_FILE."/common/odoc/sendForm/".$uFlowId % 300 )."/";            mkdirs( $targetPath );            @file_put_contents( $targetPath.$uFlowId.".php", $formHtml );        }        msg::callback( TRUE, "操作成功" );    }}?>