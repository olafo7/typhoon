<?php//decode by qq2859470class newsNewsSetting extends newsNews{    public function run( )    {        $task = getpar( $_GET, "task", "" );        if ( $task == "getJsonData" )        {            $this->_getJsonData( );        }        else if ( $task == "getStructTree" )        {            $this->_getStructTree( );        }        else if ( $task == "editLoadFormData" )        {            $this->_editLoadFormData( );        }        else if ( $task == "edit" )        {            $this->_edit( );        }        else if ( $task == "add" )        {            $this->_add( );        }        else if ( $task == "delete" )        {            $this->_delete( );        }        else if ( $task == "getAllUserListsInPermitDeptTree" )        {            $this->_getAllUserListsInPermitDeptTree( );        }        else if ( $task == "desktopSetting" )        {            $this->_desktopSetting( );        }        else if ( $task == "getFocusList" )        {            $this->_getFocusList( );        }        else if ( $task == "submitFocusList" )        {            $this->_submitFocusList( );        }    }    private function _getJsonData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $dblist = $CNOA_DB->db_select( "*", $this->table_sort, "WHERE 1" );        if ( !is_array( $dblist ) )        {            $dblist = array( );        }        ( );        $dataStore = new dataStore( );        $dataStore->total = count( $dblist );        $dataStore->data = $dblist;        echo $dataStore->makeJsonData( );        exit( );    }    private function _getStructTree( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        echo app::loadapp( "main", "struct" )->api_getStructTree( 0 );        exit( );    }    private function _add( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $data['name'] = getpar( $_POST, "name", "" );        $data['about'] = getpar( $_POST, "about", "", 1 );        $data['type'] = getpar( $_POST, "type", "html" );        $data['desktop'] = 0;        $data['desktopnum'] = 0;        $data['allowcomment'] = getpar( $_POST, "allowcomment", "off" ) == "on" ? 1 : 0;        $data['needcheck'] = getpar( $_POST, "needcheck", "off" ) == "on" ? 1 : 0;        $data['fsIsDownload'] = getpar( $_POST, "fsIsDownload", "off" ) == "on" ? 1 : 0;        if ( empty( $data['name'] ) )        {            msg::callback( FALSE, lang( "columnNameNotEmpty" ) );        }        $viewUids = getpar( $_POST, "viewUids", "" );        $viewDids = getpar( $_POST, "viewDids", "" );        if ( empty( $viewUids ) && empty( $viewDids ) )        {            $data['allowallview'] = 1;        }        else        {            $data['allowallview'] = 0;        }        $releaseUids = getpar( $_POST, "releaseUids", "" );        $releaseDids = getpar( $_POST, "releaseDids", "" );        if ( empty( $releaseUids ) && empty( $releaseDids ) )        {            $data['allowallrelease'] = 1;        }        else        {            $data['allowallrelease'] = 0;        }        $manageUids = getpar( $_POST, "manageUids", "" );        if ( empty( $manageUids ) )        {            $data['allowallmanage'] = 1;        }        else        {            $data['allowallmanage'] = 0;        }        $sid = $CNOA_DB->db_insert( $data, $this->table_sort );        $view = "{$sid}, '{$viewDids}', '{$viewUids}', 0";        $manage = "{$sid}, '', '{$manageUids}', 1";        $release = "{$sid}, '{$releaseDids}', '{$releaseUids}', 2";        $sql = "INSERT INTO ".tname( $this->table_sort_permit ).( " (`sid`, `dids`, `uids`, `type`) VALUES (".$view."), ({$manage}), ({$release})" );        $CNOA_DB->query( $sql );        app::loadapp( "main", "systemLogs" )->api_addLogs( "add", 70, $data['name'], "栏目" );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _editLoadFormData( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $did = $CNOA_SESSION->get( "DID" );        $sid = getpar( $_POST, "sid", 0 );        $info = $CNOA_DB->db_getone( "*", $this->table_sort, "WHERE `sid`='".$sid."'" );        ( );        $dataStore = new dataStore( );        if ( !$info )        {            $dataStore->success = FALSE;            $dataStore->msg = lang( "nodata" );            echo $dataStore->makeJsonData( );            exit( );        }        $permits = $CNOA_DB->db_select( "*", $this->table_sort_permit, "WHERE `sid`='".$info['sid']."'" );        if ( !is_array( $permits ) )        {            $permits = array( );        }        $viewUids = $viewDids = $manageUids = $manageDids = $releaseUids = $releaseDids = array( );        foreach ( $permits as $p )        {            $depNames = $userNames = "";            if ( !empty( $p['dids'] ) )            {                $dids = explode( ",", $p['dids'] );                $depNames = app::loadapp( "main", "struct" )->api_getNamesByIds( $dids );                $depNames = implode( ",", $depNames );            }            if ( !empty( $p['uids'] ) )            {                $dblist = $CNOA_DB->db_select( array( "truename" ), "main_user", "WHERE `uid` IN (".$p['uids'].")" );                if ( !is_array( $dblist ) )                {                    $dblist = array( );                }                $userNames = array( );                foreach ( $dblist as $v )                {                    $userNames[] = $v['truename'];                }                $userNames = implode( ",", $userNames );            }            switch ( $p['type'] )            {            case 0 :                $info['viewDids'] = $p['dids'];                $info['viewUids'] = $p['uids'];                $info['viewDepNames'] = $depNames;                $info['viewUserNames'] = $userNames;                break;            case 1 :                $info['manageUids'] = $p['uids'];                $info['manageUserNames'] = $userNames;                break;            case 2 :                $info['releaseDids'] = $p['dids'];                $info['releaseUids'] = $p['uids'];                $info['releaseDepNames'] = $depNames;                $info['releaseUserNames'] = $userNames;            }        }        $dataStore->data = $info;        echo $dataStore->makeJsonData( );        exit( );    }    private function _edit( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $sid = getpar( $_POST, "sid", 0 );        $data = array( );        $data['name'] = getpar( $_POST, "name", "" );        $data['about'] = getpar( $_POST, "about", "", 1 );        $data['type'] = getpar( $_POST, "type", "html" );        $data['allowcomment'] = getpar( $_POST, "allowcomment", "off" ) == "on" ? 1 : 0;        $data['show'] = getpar( $_POST, "show", "off" ) == "on" ? 1 : 0;        $data['needcheck'] = getpar( $_POST, "needcheck", "off" ) == "on" ? 1 : 0;        $data['fsIsDownload'] = getpar( $_POST, "fsIsDownload", "off" ) == "on" ? 1 : 0;        if ( empty( $data['name'] ) )        {            msg::callback( FALSE, lang( "columnNameNotEmpty" ) );        }        $viewUids = getpar( $_POST, "viewUids", "" );        $viewDids = getpar( $_POST, "viewDids", "" );        if ( empty( $viewUids ) && empty( $viewDids ) )        {            $data['allowallview'] = 1;        }        else        {            $data['allowallview'] = 0;        }        $releaseUids = getpar( $_POST, "releaseUids", "" );        $releaseDids = getpar( $_POST, "releaseDids", "" );        if ( empty( $releaseUids ) && empty( $releaseDids ) )        {            $data['allowallrelease'] = 1;        }        else        {            $data['allowallrelease'] = 0;        }        $manageUids = getpar( $_POST, "manageUids", "" );        if ( empty( $manageUids ) )        {            $data['allowallmanage'] = 1;        }        else        {            $data['allowallmanage'] = 0;        }        $where = "WHERE `sid`=".$sid." ";        $CNOA_DB->db_update( array(            "dids" => $viewDids,            "uids" => $viewUids        ), $this->table_sort_permit, $where."AND `type`=0" );        $CNOA_DB->db_update( array(            "uids" => $manageUids        ), $this->table_sort_permit, $where."AND `type`=1" );        $CNOA_DB->db_update( array(            "dids" => $releaseDids,            "uids" => $releaseUids        ), $this->table_sort_permit, $where."AND `type`=2" );        $CNOA_DB->db_update( $data, $this->table_sort, "WHERE `sid`='".$sid."'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 70, $data['name'], "栏目" );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _delete( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $sid = getpar( $_POST, "sid", 0 );        $name = $CNOA_DB->db_getfield( "name", $this->table_sort, "WHERE `sid`='".$sid."'" );        $CNOA_DB->db_delete( $this->table_sort, "WHERE `sid`='".$sid."'" );        app::loadapp( "news", "newsPost" )->api_deleteBySortid( $sid );        $CNOA_DB->db_delete( $this->table_sort_permit, "WHERE `sid`='".$sid."'" );        desktop::deletedesktopapp( "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sid );        $this->deleteUserDeskTopApp( $sid );        app::loadapp( "main", "systemLogs" )->api_addLogs( "del", 70, $name, "栏目" );        msg::callback( TRUE, lang( "successopt" ) );    }    private function _private_addDesktopApp( $name, $about, $sort, $num, $type )    {        global $CNOA_CONTROLLER;        $app = "news";        $js = "desktop_news_".$sort.".js";        $code = "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sort;        desktop::adddesktopapp( $name, $about, $app, $js, $code );        $jsSourcePath = CNOA_PATH."/app/news/scripts/";        $jsTargetPath = CNOA_PATH_FILE."/webcache/";        $NEWSITEMS = "";        if ( $type == "html" )        {            $jsFile = file_get_contents( $jsSourcePath."desktop_news_sort_tpl.js" );        }        else if ( $type == "video" )        {            $jsFile = file_get_contents( $jsSourcePath."desktop_news_sort_video_tpl.js" );        }        else if ( $type == "focus" )        {            $jsFile = file_get_contents( $jsSourcePath."desktop_news_sort_focus_tpl.js" );            $NEWSITEMS = $this->__getFocusData( );        }        $jsFile = str_replace( array(            "{NEWSSORTID}",            "{NEWSSORTNAME}",            "'{NEWSSORTROWS}'",            "{NEWSITEMS}"        ), array(            $sort,            $name,            $num,            $NEWSITEMS        ), $jsFile );        @file_put_contents( $jsTargetPath.$js, $jsFile );        return $jsTargetPath.$js;    }    private function __getFocusData( $sid = 0 )    {        global $CNOA_DB;        if ( $sid == 0 )        {            $sid = getpar( $_POST, "sid", getpar( $_GET, "sid", 0 ) );        }        $sql = "SELECT `f`.`lid`, `posttime`, `image`, `title`, `content` FROM ".tname( $this->table_focus )." AS `f` LEFT JOIN ".tname( $this->table_list )." AS `l` ON `l`.`lid`=`f`.`lid` ".( "WHERE `f`.`sid`=".$sid." AND `f`.`order`>0 AND `l`.`status`=1  ORDER BY `order` ASC" );        $result = $CNOA_DB->query( $sql );        $data = array( );        while ( $row = $CNOA_DB->get_array( $result ) )        {            $data[] = array(                "pic" => "{$GLOBALS['URL_FILE']}/common/upload/".date( "Y.m.d", $row['posttime'] )."/".$row['image'],                "lid" => $row['lid'],                "title" => nl2br( str_replace( "'", "\"", string::cut( $row['title'], 25, "" ) ) ),                "content" => nl2br( str_replace( array( "'", "\"" ), array( "\"", "\\\"" ), string::cut( strip_tags( $row['content'] ), 350, "..." ) ) )            );        }        return json_encode( $data );    }    private function _private_deleteDesktopApp( $sort )    {        global $CNOA_CONTROLLER;        $code = "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sort;        desktop::deletedesktopapp( $code );        $jsPath = CNOA_PATH_FILE."/webcache/desktop_news_".$sort.".js";        @unlink( $jsPath );        return TRUE;    }    private function addUserDeskTopApp( $sort, $userList )    {        $code = "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sort;        if ( is_array( $userList ) && 0 < count( $userList ) )        {            foreach ( $userList as $v )            {                $column = $sort % 3;                desktop::adduserdesktopapp( $code, $v['uid'], $column );            }        }        return FALSE;    }    private function deleteUserDeskTopApp( $sort )    {        $code = "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sort;        desktop::deleteuserdesktopapp( $code );    }    private function _getAllUserListsInPermitDeptTree( )    {        $GLOBALS['GLOBALS']['user']['permitArea']['area'] = "all";        $userList = app::loadapp( "main", "user" )->api_getAllUserListsInPermitDeptTree( );        echo json_encode( $userList );        exit( );    }    private function _desktopSetting( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $uid = $CNOA_SESSION->get( "UID" );        $sid = getpar( $_POST, "sid", getpar( $_GET, "sid", 0 ) );        $job = getpar( $_GET, "job", "" );        if ( $job == "loadVideoList" )        {            $dblist = $CNOA_DB->db_select( array( "lid", "title" ), $this->table_list, "WHERE `sort`='".$sid."'" );            if ( !is_array( $dblist ) )            {                $dblist = array( );            }            ( );            $dataStore = new dataStore( );            $dataStore->total = count( $dblist );            $dataStore->data = $dblist;            echo $dataStore->makeJsonData( );            exit( );        }        $data['desktop'] = getpar( $_POST, "desktop", "off" ) == "on" ? 1 : 0;        $data['desktopnum'] = getpar( $_POST, "desktopnum", 10 );        $data['desktopvodid'] = getpar( $_POST, "desktopvodid", 0 );        $infoDb = $CNOA_DB->db_getone( "*", $this->table_sort, "WHERE `sid`='".$sid."'" );        if ( $data['desktop'] == 1 )        {            $this->_private_addDesktopApp( $infoDb['name'], $infoDb['about'], $sid, $infoDb['desktopnum'], $infoDb['type'] );            $this->api_updateAllDesktopJS( );            if ( !empty( $deptIds ) )            {                $userInfos = app::loadapp( "main", "user" )->api_getUserByFids( $deptIdsArray );            }            else            {                $userInfos = app::loadapp( "main", "user" )->api_getAllUserInfo( );            }            $this->addUserDeskTopApp( $sid, $userInfos );            desktop::renamedesktopapp( "CNOA_MAIN_DESKTOP_NEWS_NEWS_SORT_".$sid, $infoDb['name'] );        }        else        {            $this->_private_deleteDesktopApp( $sid );            $this->deleteUserDeskTopApp( $sid );        }        app::loadapp( "news", "newsSetting" )->api_updateAllDesktopJS( );        $CNOA_DB->db_update( $data, $this->table_sort, "WHERE `sid`='".$sid."'" );        app::loadapp( "main", "systemLogs" )->api_addLogs( "update", 70, $infoDb['name']."的桌面显示", "栏目" );        msg::callback( TRUE, lang( "successopt" ) );    }    public function _getFocusList( )    {        global $CNOA_DB;        global $CNOA_SESSION;        $sid = getpar( $_GET, "sid", 0 );        $sql = "SELECT * FROM ".tname( $this->table_focus )." AS `f` LEFT JOIN ".tname( $this->table_list )." AS `l` ON `l`.`lid`=`f`.`lid` ".( "WHERE `f`.`sid`=".$sid." AND `l`.`status`=1" );        $result = $CNOA_DB->query( $sql );        $data = array( );        while ( $row = $CNOA_DB->get_array( $result ) )        {            $data[] = $row;        }        ( );        $ds = new dataStore( );        $ds->data = $data;        echo $ds->makeJsonData( );        exit( );    }    public function _submitFocusList( )    {        global $CNOA_DB;        $lid = getpar( $_POST, "lid", 0 );        $order = getpar( $_POST, "order", 0 );        $CNOA_DB->db_update( array(            "order" => $order        ), $this->table_focus, "WHERE `lid` = '".$lid."' " );        msg::callback( TRUE, lang( "successopt" ) );    }    public function api_updateAllDesktopJS( )    {        app::loadapp( "main", "common" )->api_clearDesktopCache( );        global $CNOA_DB;        global $CNOA_CONTROLLER;        $dList = $CNOA_DB->db_select( "*", $this->table_sort, "WHERE `show`=1 AND `desktop`=1" );        if ( !is_array( $dList ) )        {            $dList = array( );        }        $jsSourcePath = CNOA_PATH."/app/news/scripts/";        $jsTargetPath = CNOA_PATH_FILE."/webcache/";        foreach ( $dList as $v )        {            $js = "desktop_news_".$v['sid'].".js";            if ( $v['type'] == "html" )            {                $jsFile = @file_get_contents( $jsSourcePath."desktop_news_sort_tpl.js" );            }            else if ( $v['type'] == "video" )            {                $jsFile = @file_get_contents( $jsSourcePath."desktop_news_sort_video_tpl.js" );            }            else if ( $v['type'] == "focus" )            {                $jsFile = @file_get_contents( $jsSourcePath."desktop_news_sort_focus_tpl.js" );            }            $videoInfo = $CNOA_DB->db_getone( array( "lid", "title", "flv", "image", "updatetime", "posttime" ), $this->table_list, "WHERE `lid`='".$v['desktopvodid']."'" );            if ( $v['type'] == "video" )            {                @file_put_contents( $jsTargetPath.$js, @str_replace( array(                    "{NEWSITEMLID}",                    "{NEWSITEMFLV}",                    "{NEWSITEMIMAGE}",                    "{NEWSITEMTITLE}",                    "{NEWSSORTID}",                    "{NEWSSORTNAME}",                    "'{NEWSSORTROWS}'"                ), array(                    $videoInfo['lid'],                    urlencode( "../".$GLOBALS['URL_FILE']."/common/upload/".@date( "Y.m.d", $videoInfo['posttime'] )."/".$videoInfo['flv'] ),                    urlencode( "../".$GLOBALS['URL_FILE']."/common/upload/".@date( "Y.m.d", $videoInfo['posttime'] )."/".$videoInfo['image'] ),                    $videoInfo['title'],                    $v['sid'],                    $v['name'],                    $v['desktopnum']                ), $jsFile ) );            }            if ( $v['type'] == "html" )            {                @file_put_contents( $jsTargetPath.$js, @str_replace( array(                    "{NEWSSORTID}",                    "{NEWSSORTNAME}",                    "'{NEWSSORTROWS}'"                ), array(                    $v['sid'],                    $v['name'],                    $v['desktopnum']                ), $jsFile ) );            }            if ( $v['type'] == "focus" )            {                $NEWSITEMS = $this->__getFocusData( $v['sid'] );                @file_put_contents( $jsTargetPath.$js, @str_replace( array(                    "{NEWSSORTID}",                    "{NEWSSORTNAME}",                    "{NEWSITEMS}"                ), array(                    $v['sid'],                    $v['name'],                    $NEWSITEMS                ), $jsFile ) );            }        }    }}?>